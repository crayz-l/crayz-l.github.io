<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Python实验十五</title>
      <link href="/posts/230909329/"/>
      <url>/posts/230909329/</url>
      
        <content type="html"><![CDATA[<h1 id="神经网络学习之卷积神经网络">神经网络学习之卷积神经网络</h1><h2 id="第1关-卷积运算">第1关 卷积运算</h2><ol><li><p>已知输入和卷积核，求下列图片中卷积运算的输出结果：<br><img src="https://raw.githubusercontent.com/crayz-l/Learning_picgo/main/img/Python_experiment15_1" alt="image.png"></p><p>[ [ 130 , 253 ] , [ 157 , 189 ] ]</p></li><li><p>已知输入是10∗10的矩阵，卷积核高宽都为5，请问，结果的高和宽分别为多少？<br><strong>高为6，宽为6。</strong></p></li></ol><h2 id="第2关-填充-padding">第2关 填充（Padding）</h2><ol><li>已知输入形状为：10∗10，卷积核的形状为5∗5，求当需要输出形状为10∗10时，需要填充的大小为：<br>2</li><li>已知输入形状为：10∗10，卷积核的形状为5∗5，是Valid卷积，则需要填充的大小为：<br>0</li></ol><h2 id="第3关-步幅-stride">第3关 步幅（Stride）</h2><ol><li>已知输入形状为：10∗10，卷积核的形状为5∗5，填充大小为1，求当需要输出形状为8∗8时，需要的步幅大小为：<br>1</li><li>已知输入的形状为<code>n∗n</code>，卷积核形状为<code>3∗3</code>，填充大小为<code>2</code>，步幅为<code>1</code>，输出大小为<code>15∗15</code>，请问，输入的形状为：<br>13*13</li></ol><h2 id="第4关-多通道输入与多通道输出">第4关 多通道输入与多通道输出</h2><ol><li>已知输入的形状为3∗24∗24，想要输出的形状为16∗24∗24，请问卷积核的形状应为：<br>3 * 16 * 3 * 3，填充为1，步幅为1</li></ol><h2 id="第5关-池化层-pooling">第5关 池化层（Pooling）</h2><ol><li>已知池化层的输入为3∗224∗224，池化层形状为2∗2，步幅为2，求输出结果的形状为：<br>3∗112∗112</li></ol><h2 id="第6关-简单的卷积网络的搭建-lenet-模型">第6关 简单的卷积网络的搭建—— LeNet 模型</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> torch <span class="keyword">import</span> nn</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">LeNet</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(LeNet, <span class="variable language_">self</span>).__init__()</span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        这里搭建卷积层，需要按顺序定义卷积层、</span></span><br><span class="line"><span class="string">        激活函数、最大池化层、卷积层、激活函数、最大池化层，</span></span><br><span class="line"><span class="string">        具体形状见测试说明</span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span></span><br><span class="line">        <span class="variable language_">self</span>.conv = nn.Sequential(</span><br><span class="line">            <span class="comment">########## Begin ##########</span></span><br><span class="line">            nn.Conv2d(<span class="number">1</span>, <span class="number">6</span>, <span class="number">5</span>),</span><br><span class="line">            nn.Sigmoid(),</span><br><span class="line">            nn.MaxPool2d(<span class="number">2</span>, <span class="number">2</span>),</span><br><span class="line">            nn.Conv2d(<span class="number">6</span>, <span class="number">16</span>, <span class="number">5</span>),</span><br><span class="line">            nn.Sigmoid(),</span><br><span class="line">            nn.MaxPool2d(<span class="number">2</span>, <span class="number">2</span>)</span><br><span class="line">            <span class="comment">########## End ##########</span></span><br><span class="line">        )</span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        这里搭建全连接层，需要按顺序定义全连接层、</span></span><br><span class="line"><span class="string">        激活函数、全连接层、激活函数、全连接层，</span></span><br><span class="line"><span class="string">        具体形状见测试说明</span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span></span><br><span class="line">        <span class="variable language_">self</span>.fc = nn.Sequential(</span><br><span class="line">            <span class="comment">########## Begin ##########</span></span><br><span class="line">            nn.Linear(<span class="number">256</span>, <span class="number">120</span>),</span><br><span class="line">            nn.Sigmoid(),</span><br><span class="line">            nn.Linear(<span class="number">120</span>, <span class="number">84</span>),</span><br><span class="line">            nn.Sigmoid(),</span><br><span class="line">            nn.Linear(<span class="number">84</span>, <span class="number">10</span>)</span><br><span class="line">            <span class="comment">########## End ##########</span></span><br><span class="line">        )</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, img</span>):</span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        这里需要定义前向计算</span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span></span><br><span class="line">        <span class="comment">########## Begin ##########</span></span><br><span class="line">        out = <span class="variable language_">self</span>.conv(img)</span><br><span class="line">        out = out.view(out.size(<span class="number">0</span>), -<span class="number">1</span>)</span><br><span class="line">        out = <span class="variable language_">self</span>.fc(out)</span><br><span class="line">        <span class="keyword">return</span> out</span><br><span class="line">        <span class="comment">########## End ##########</span></span><br></pre></td></tr></table></figure><h2 id="第7关-卷积神经网络-alexnet-模型">第7关 卷积神经网络—— AlexNet 模型</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> torch <span class="keyword">import</span> nn</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AlexNet</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(AlexNet, <span class="variable language_">self</span>).__init__()</span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        这里搭建卷积层，需要按顺序定义卷积层、</span></span><br><span class="line"><span class="string">        激活函数、最大池化层、卷积层、激活函数、</span></span><br><span class="line"><span class="string">        最大池化层、卷积层、激活函数、卷积层、</span></span><br><span class="line"><span class="string">        激活函数、卷积层、激活函数、最大池化层，</span></span><br><span class="line"><span class="string">        具体形状见测试说明</span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span></span><br><span class="line">        <span class="variable language_">self</span>.conv = nn.Sequential(</span><br><span class="line">            <span class="comment">########## Begin ##########</span></span><br><span class="line">            nn.Conv2d(<span class="number">1</span>, <span class="number">96</span>, kernel_size=(<span class="number">11</span>, <span class="number">11</span>), stride=(<span class="number">4</span>, <span class="number">4</span>)),  </span><br><span class="line">            nn.ReLU(),</span><br><span class="line">            nn.MaxPool2d(kernel_size=<span class="number">3</span>, stride=<span class="number">2</span>, padding=<span class="number">0</span>, dilation=<span class="number">1</span>, ceil_mode=<span class="literal">False</span>),  </span><br><span class="line">            nn.Conv2d(<span class="number">96</span>, <span class="number">256</span>, kernel_size=(<span class="number">5</span>, <span class="number">5</span>), stride=(<span class="number">1</span>, <span class="number">1</span>), padding=(<span class="number">2</span>, <span class="number">2</span>)),  </span><br><span class="line">            nn.ReLU(),</span><br><span class="line">            nn.MaxPool2d(kernel_size=<span class="number">3</span>, stride=<span class="number">2</span>, padding=<span class="number">0</span>, dilation=<span class="number">1</span>, ceil_mode=<span class="literal">False</span>),  </span><br><span class="line">            nn.Conv2d(<span class="number">256</span>, <span class="number">384</span>, kernel_size=(<span class="number">3</span>, <span class="number">3</span>), stride=(<span class="number">1</span>, <span class="number">1</span>), padding=(<span class="number">1</span>, <span class="number">1</span>)),  </span><br><span class="line">            nn.ReLU(),  </span><br><span class="line">            nn.Conv2d(<span class="number">384</span>, <span class="number">384</span>, kernel_size=(<span class="number">3</span>, <span class="number">3</span>), stride=(<span class="number">1</span>, <span class="number">1</span>), padding=(<span class="number">1</span>, <span class="number">1</span>)),  </span><br><span class="line">            nn.ReLU(),  </span><br><span class="line">            nn.Conv2d(<span class="number">384</span>, <span class="number">256</span>, kernel_size=(<span class="number">3</span>, <span class="number">3</span>), stride=(<span class="number">1</span>, <span class="number">1</span>), padding=(<span class="number">1</span>, <span class="number">1</span>)),  </span><br><span class="line">            nn.ReLU(),  </span><br><span class="line">            nn.MaxPool2d(kernel_size=<span class="number">3</span>, stride=<span class="number">2</span>, padding=<span class="number">0</span>, dilation=<span class="number">1</span>, ceil_mode=<span class="literal">False</span>),  </span><br><span class="line">            <span class="comment">########## End ##########</span></span><br><span class="line">        )</span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        这里搭建全连接层，需要按顺序定义</span></span><br><span class="line"><span class="string">        全连接层、激活函数、丢弃法、</span></span><br><span class="line"><span class="string">        全连接层、激活函数、丢弃法、全连接层，</span></span><br><span class="line"><span class="string">        具体形状见测试说明</span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span></span><br><span class="line">        <span class="variable language_">self</span>.fc = nn.Sequential(</span><br><span class="line">            <span class="comment">########## Begin ##########</span></span><br><span class="line">            nn.Linear(in_features=<span class="number">6400</span>, out_features=<span class="number">4096</span>, bias=<span class="literal">True</span>),</span><br><span class="line">            nn.ReLU(),  </span><br><span class="line">            nn.Dropout(p=<span class="number">0.5</span>),  </span><br><span class="line">            nn.Linear(in_features=<span class="number">4096</span>, out_features=<span class="number">4096</span>, bias=<span class="literal">True</span>),  </span><br><span class="line">            nn.ReLU(),  </span><br><span class="line">            nn.Dropout(p=<span class="number">0.5</span>),  </span><br><span class="line">            nn.Linear(in_features=<span class="number">4096</span>, out_features=<span class="number">10</span>, bias=<span class="literal">True</span>),  </span><br><span class="line">            <span class="comment">########## End ##########</span></span><br><span class="line">        )</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, img</span>):</span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        这里需要定义前向计算</span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span></span><br><span class="line">        <span class="comment">########## Begin ##########</span></span><br><span class="line">        feature = <span class="variable language_">self</span>.conv(img)     <span class="comment"># 卷积层  </span></span><br><span class="line">        output = <span class="variable language_">self</span>.fc(feature.view(img.shape[<span class="number">0</span>], -<span class="number">1</span>))     <span class="comment"># 全连接层  </span></span><br><span class="line">        <span class="keyword">return</span> output</span><br><span class="line">        <span class="comment">########## End ##########</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python实验十四</title>
      <link href="/posts/270600148/"/>
      <url>/posts/270600148/</url>
      
        <content type="html"><![CDATA[<h1 id="pytorch-之神经网络">Pytorch 之神经网络</h1><h2 id="第1关-加载数据-data-loader">第1关 加载数据——Data Loader</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> torchvision.datasets <span class="keyword">as</span> dsets</span><br><span class="line"><span class="keyword">import</span> torchvision.transforms <span class="keyword">as</span> transforms</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">path = os.path.split(os.path.abspath(os.path.realpath(sys.argv[<span class="number">0</span>])))[<span class="number">0</span>] + os.path.sep</span><br><span class="line"></span><br><span class="line">path = path[:-<span class="number">10</span>] + <span class="string">&#x27;/data/&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#/********** Begin *********/</span></span><br><span class="line"><span class="comment"># 下载训练集 MNIST 训练集,设置 root = path,train=False ,download=False,赋值给变量train_dataset</span></span><br><span class="line">train_dataset = dsets.MNIST(root=path, train=<span class="literal">False</span>, transform=transforms.ToTensor(),download=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建dataset=train_dataset,batch_size=100, shuffle=True的DataLoader变量data_loader</span></span><br><span class="line">data_loader = torch.utils.data.DataLoader(train_dataset, batch_size=<span class="number">100</span>, shuffle=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取数据集中的第四个元素的图片信息和类别</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Number of samples: &#x27;</span>,<span class="built_in">len</span>(train_dataset))</span><br><span class="line">img, target = train_dataset[<span class="number">3</span>]</span><br><span class="line"><span class="comment">#按照格式“Image Size: ...”输出该图片大小</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Image Size: &quot;</span>,img.size())</span><br><span class="line"></span><br><span class="line"><span class="comment">#按照格式“Image Target: ...”输出该图片的类别</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Image Target: &quot;</span>,target)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;\nCongratulation!&quot;</span>)</span><br><span class="line"><span class="comment">#/********** End *********/</span></span><br></pre></td></tr></table></figure><h2 id="第2关-建立模型-定义损失和优化函数">第2关 建立模型，定义损失和优化函数</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> torch.nn <span class="keyword">as</span> nn</span><br><span class="line"><span class="keyword">import</span> torchvision.datasets <span class="keyword">as</span> dsets</span><br><span class="line"><span class="keyword">import</span> torchvision.transforms <span class="keyword">as</span> transforms</span><br><span class="line"><span class="keyword">from</span> torch.autograd <span class="keyword">import</span> Variable</span><br><span class="line"></span><br><span class="line"><span class="comment"># CNN Model (2 conv layer)</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CNN</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(CNN, <span class="variable language_">self</span>).__init__()</span><br><span class="line">        <span class="variable language_">self</span>.layer1 = nn.Sequential(</span><br><span class="line">            nn.Conv2d(<span class="number">1</span>, <span class="number">16</span>, kernel_size=<span class="number">5</span>, padding=<span class="number">2</span>),</span><br><span class="line">            nn.BatchNorm2d(<span class="number">16</span>),</span><br><span class="line">            nn.ReLU(),</span><br><span class="line">            nn.MaxPool2d(<span class="number">2</span>))</span><br><span class="line">        <span class="comment">#/********** Begin *********/</span></span><br><span class="line">        <span class="variable language_">self</span>.layer2 = nn.Sequential(</span><br><span class="line">        <span class="comment">#定义卷积层Conv2d：输入16张特征图，输出32张特征图，卷积核5x5,padding为2</span></span><br><span class="line">            nn.Conv2d(<span class="number">16</span>,<span class="number">32</span>,kernel_size=<span class="number">5</span>,padding=<span class="number">2</span>),</span><br><span class="line">        <span class="comment">#定义BatchNorm2d层，参数为32</span></span><br><span class="line">            nn.BatchNorm2d(<span class="number">32</span>),</span><br><span class="line">        <span class="comment">#定义非线性层ReLU</span></span><br><span class="line">            nn.ReLU(),</span><br><span class="line">            nn.MaxPool2d(<span class="number">2</span>))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 定义全连接层：线性连接(y = Wx + b)，7*7*32个节点连接到10个节点上</span></span><br><span class="line">        <span class="variable language_">self</span>.fc = nn.Linear(<span class="number">7</span>*<span class="number">7</span>*<span class="number">32</span>,<span class="number">10</span>)</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x</span>):</span><br><span class="line">        out = <span class="variable language_">self</span>.layer1(x)</span><br><span class="line">        <span class="comment"># 输入out-&gt;layer2-&gt;更新到out</span></span><br><span class="line">        out = <span class="variable language_">self</span>.layer2(out)</span><br><span class="line">        <span class="comment">#view函数将张量x变形成一维向量形式，总特征数不变，为全连接层做准备</span></span><br><span class="line">        out = out.view(out.size(<span class="number">0</span>),-<span class="number">1</span>)</span><br><span class="line">        <span class="comment"># 输入out-&gt;fc，更新到out</span></span><br><span class="line">        out = <span class="variable language_">self</span>.fc(out)</span><br><span class="line">        <span class="keyword">return</span> out</span><br><span class="line"><span class="comment">#/********** End *********/</span></span><br><span class="line"></span><br><span class="line">cnn = CNN()</span><br><span class="line"></span><br><span class="line">params = <span class="built_in">list</span>(cnn.parameters())</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(params))</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> name, parameters <span class="keyword">in</span> cnn.named_parameters():</span><br><span class="line">    <span class="built_in">print</span>(name, <span class="string">&quot;：&quot;</span>, parameters.size())</span><br></pre></td></tr></table></figure><h2 id="第3关-训练模型">第3关 训练模型</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> torch.nn <span class="keyword">as</span> nn</span><br><span class="line"><span class="keyword">import</span> torchvision.datasets <span class="keyword">as</span> dsets</span><br><span class="line"><span class="keyword">import</span> torchvision.transforms <span class="keyword">as</span> transforms</span><br><span class="line"><span class="keyword">from</span> torch.autograd <span class="keyword">import</span> Variable</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">path = os.path.split(os.path.abspath(os.path.realpath(sys.argv[<span class="number">0</span>])))[<span class="number">0</span>] + os.path.sep</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Hyper Parameters</span></span><br><span class="line">batch_size = <span class="number">100</span></span><br><span class="line">learning_rate = <span class="number">0.001</span></span><br><span class="line">num_epochs = <span class="number">1</span></span><br><span class="line"><span class="comment"># MNIST Dataset</span></span><br><span class="line">train_dataset = dsets.MNIST(root=<span class="string">&#x27;./data/&#x27;</span>,</span><br><span class="line">                            train=<span class="literal">True</span>,</span><br><span class="line">                            transform=transforms.ToTensor(),</span><br><span class="line">                            download=<span class="literal">False</span>)</span><br><span class="line">train_loader = torch.utils.data.DataLoader(dataset=train_dataset,</span><br><span class="line">                                           batch_size=batch_size,</span><br><span class="line">                                           shuffle=<span class="literal">True</span>)</span><br><span class="line"><span class="comment"># CNN Model (2 conv layer)</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CNN</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(CNN, <span class="variable language_">self</span>).__init__()</span><br><span class="line">        <span class="variable language_">self</span>.layer1 = nn.Sequential(</span><br><span class="line">                                    nn.Conv2d(<span class="number">1</span>, <span class="number">16</span>, kernel_size=<span class="number">5</span>, padding=<span class="number">2</span>),</span><br><span class="line">                                    nn.BatchNorm2d(<span class="number">16</span>),</span><br><span class="line">                                    nn.ReLU(),</span><br><span class="line">                                    nn.MaxPool2d(<span class="number">2</span>))</span><br><span class="line">        <span class="variable language_">self</span>.layer2 = nn.Sequential(</span><br><span class="line">                                    nn.Conv2d(<span class="number">16</span>, <span class="number">32</span>, kernel_size=<span class="number">5</span>, padding=<span class="number">2</span>),</span><br><span class="line">                                    nn.BatchNorm2d(<span class="number">32</span>),</span><br><span class="line">                                    nn.ReLU(),</span><br><span class="line">                                    nn.MaxPool2d(<span class="number">2</span>))</span><br><span class="line">        <span class="variable language_">self</span>.fc = nn.Linear(<span class="number">7</span>*<span class="number">7</span>*<span class="number">32</span>, <span class="number">10</span>)</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x</span>):</span><br><span class="line">        out = <span class="variable language_">self</span>.layer1(x)</span><br><span class="line">        out = <span class="variable language_">self</span>.layer2(out)</span><br><span class="line">        out = out.view(out.size(<span class="number">0</span>), -<span class="number">1</span>)</span><br><span class="line">        out = <span class="variable language_">self</span>.fc(out)</span><br><span class="line">        <span class="keyword">return</span> out</span><br><span class="line">cnnmodel = CNN()</span><br><span class="line"><span class="comment">#创建输出文件 output.txt</span></span><br><span class="line">f = <span class="built_in">open</span>(path + <span class="string">&#x27;output.txt&#x27;</span>, <span class="string">&#x27;w&#x27;</span>)</span><br><span class="line">f.seek(<span class="number">0</span>)</span><br><span class="line">f.truncate()   <span class="comment">#清空文件</span></span><br><span class="line"><span class="comment">#/********** Begin *********/</span></span><br><span class="line"><span class="comment"># 声明一个为交叉熵损失函数的变量criterion</span></span><br><span class="line">criterion = nn.CrossEntropyLoss()</span><br><span class="line"><span class="comment"># 声明一个为Adam优化函数的变量optimizer，传入 cnn的参数，并使学习率lr为0.001</span></span><br><span class="line">optimizer = torch.optim.Adam(cnnmodel.parameters(),lr=learning_rate)</span><br><span class="line"><span class="comment"># 训练模型</span></span><br><span class="line"><span class="keyword">for</span> i, (images, labels) <span class="keyword">in</span> <span class="built_in">enumerate</span>(train_loader):</span><br><span class="line">    <span class="comment"># 将images，labels数据转换为Variable类型</span></span><br><span class="line">    images = Variable(images)</span><br><span class="line">    labels = Variable(labels)</span><br><span class="line">    <span class="comment"># optimizer梯度归零</span></span><br><span class="line">    optimizer.zero_grad()</span><br><span class="line">    <span class="comment"># 对 images 应用 cnnmodel 模型并赋值给变量 outputs</span></span><br><span class="line">    outputs = cnnmodel(images)</span><br><span class="line">    loss = criterion(outputs, labels)</span><br><span class="line">    <span class="comment">#Backward</span></span><br><span class="line">    loss.backward()</span><br><span class="line">    <span class="comment">#Optimize</span></span><br><span class="line">    optimizer.step()</span><br><span class="line">    <span class="comment">#共训练60次，分别100次输出一回loss信息，并将输出信息存到文件中</span></span><br><span class="line">    <span class="keyword">if</span> (i+<span class="number">1</span>) % <span class="number">10</span> == <span class="number">0</span>:</span><br><span class="line">        f.writelines(<span class="string">&#x27;Epoch [%d/%d], Iter [%d/%d] Loss: %.4f \n&#x27;</span></span><br><span class="line">                     %(<span class="number">1</span>, num_epochs, i+<span class="number">1</span>, <span class="built_in">len</span>(train_dataset)//<span class="number">1000</span>, loss.data[<span class="number">0</span>]))</span><br><span class="line">        <span class="built_in">print</span> (<span class="string">&#x27;Epoch [%d/%d], Iter [%d/%d] Loss: %.4f&#x27;</span></span><br><span class="line">            %(<span class="number">1</span>, num_epochs, i+<span class="number">1</span>, <span class="built_in">len</span>(train_dataset)//<span class="number">1000</span>, loss.data[<span class="number">0</span>]))</span><br><span class="line">    <span class="keyword">if</span> i &gt; <span class="number">60</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">f.close()</span><br><span class="line"><span class="comment">#/********** End *********/</span></span><br></pre></td></tr></table></figure><h2 id="第4关-测试保存模型">第4关 测试保存模型</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> torch.nn <span class="keyword">as</span> nn</span><br><span class="line"><span class="keyword">import</span> torchvision.datasets <span class="keyword">as</span> dsets</span><br><span class="line"><span class="keyword">from</span> torch.utils.data <span class="keyword">import</span> Dataset, DataLoader</span><br><span class="line"><span class="keyword">import</span> torchvision.transforms <span class="keyword">as</span> transforms</span><br><span class="line"><span class="keyword">from</span> torch.autograd <span class="keyword">import</span> Variable</span><br><span class="line"><span class="keyword">import</span> warnings</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line">warnings.filterwarnings(<span class="string">&#x27;ignore&#x27;</span>)</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"><span class="keyword">import</span> os,sys</span><br><span class="line">path = os.path.split(os.path.abspath(os.path.realpath(sys.argv[<span class="number">0</span>])))[<span class="number">0</span>] + os.path.sep</span><br><span class="line">rootpath = path[:-<span class="number">10</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">#print(&quot;validation path:&quot; ,root)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># MNIST Dataset</span></span><br><span class="line">test_dataset = dsets.MNIST(root=<span class="string">&#x27;./data/&#x27;</span>,</span><br><span class="line">                           train=<span class="literal">False</span>,</span><br><span class="line">                           transform=transforms.ToTensor(),</span><br><span class="line">                           download=<span class="literal">False</span>)</span><br><span class="line">test_loader = torch.utils.data.DataLoader(dataset=test_dataset,</span><br><span class="line">                                          batch_size=<span class="number">100</span>,</span><br><span class="line">                                          shuffle=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># CNN Model (2 conv layer)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CNN</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(CNN, <span class="variable language_">self</span>).__init__()</span><br><span class="line">        <span class="variable language_">self</span>.layer1 = nn.Sequential(</span><br><span class="line">nn.Conv2d(<span class="number">1</span>, <span class="number">16</span>, kernel_size=<span class="number">5</span>, padding=<span class="number">2</span>),</span><br><span class="line">nn.BatchNorm2d(<span class="number">16</span>),</span><br><span class="line">nn.ReLU(),</span><br><span class="line">nn.MaxPool2d(<span class="number">2</span>))</span><br><span class="line"><span class="variable language_">self</span>.layer2 = nn.Sequential(</span><br><span class="line">nn.Conv2d(<span class="number">16</span>, <span class="number">32</span>, kernel_size=<span class="number">5</span>,padding=<span class="number">2</span>),                                    nn.BatchNorm2d(<span class="number">32</span>),</span><br><span class="line">nn.ReLU(),</span><br><span class="line">nn.MaxPool2d(<span class="number">2</span>))</span><br><span class="line"><span class="variable language_">self</span>.fc = nn.Linear(<span class="number">7</span>*<span class="number">7</span>*<span class="number">32</span>, <span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x</span>):</span><br><span class="line">    out = <span class="variable language_">self</span>.layer1(x)</span><br><span class="line">    out = <span class="variable language_">self</span>.layer2(out)</span><br><span class="line">    out = out.view(out.size(<span class="number">0</span>), -<span class="number">1</span>)</span><br><span class="line">    out = <span class="variable language_">self</span>.fc(out)</span><br><span class="line">    <span class="keyword">return</span> out</span><br><span class="line"></span><br><span class="line">cnnmodel = CNN()</span><br><span class="line">cnnmodel = torch.load( rootpath + <span class="string">&#x27;src/step3/cnnModel.pkl&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#/********** Begin *********/</span></span><br><span class="line"><span class="comment"># 将模型转为测试模式</span></span><br><span class="line">cnnmodel.<span class="built_in">eval</span>()</span><br><span class="line">correct = <span class="number">0</span></span><br><span class="line">total = <span class="number">0</span></span><br><span class="line">i  = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> images, labels <span class="keyword">in</span> test_loader:</span><br><span class="line">    images = Variable(images)</span><br><span class="line">    <span class="comment">#对images 应用cnn模型，将结果赋值给 outputs</span></span><br><span class="line">   outputs = cnnmodel(images)</span><br><span class="line">    _, predicted = torch.<span class="built_in">max</span>(outputs.data, <span class="number">1</span>)</span><br><span class="line">    total += labels.size(<span class="number">0</span>)</span><br><span class="line">    correct += (predicted == labels).<span class="built_in">sum</span>()</span><br><span class="line">    i += <span class="number">1</span></span><br><span class="line">    <span class="comment"># 为了节约时间, 我们测试时只测试前10个</span></span><br><span class="line">    <span class="keyword">if</span>  i&gt; <span class="number">10</span> :</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#按格式输出正确率correct/total 的百分比</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Test Accuracy of the model on the 200 test images: %d %%&#x27;</span> % (<span class="number">100</span> * correct / total))</span><br><span class="line"><span class="comment">#/********** End *********/</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python实验十三</title>
      <link href="/posts/1559456714/"/>
      <url>/posts/1559456714/</url>
      
        <content type="html"><![CDATA[<h1 id="使用knn算法对红酒进行分类">使用kNN算法对红酒进行分类</h1><h2 id="第1关-分析红酒数据">第1关 分析红酒数据</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">alcohol_mean</span>(<span class="params">data</span>):</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    返回红酒数据中红酒的酒精平均含量</span></span><br><span class="line"><span class="string">    :param data: 红酒数据对象</span></span><br><span class="line"><span class="string">    :return: 酒精平均含量，类型为float</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="comment">#********* Begin *********#</span></span><br><span class="line">    <span class="keyword">return</span> data.data[:,<span class="number">0</span>].mean()</span><br><span class="line">    <span class="comment">#********* End **********#</span></span><br></pre></td></tr></table></figure><h2 id="第2关-对数据进行标准化">第2关 对数据进行标准化</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.preprocessing <span class="keyword">import</span> StandardScaler</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">scaler</span>(<span class="params">data</span>):</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    返回标准化后的红酒数据</span></span><br><span class="line"><span class="string">    :param data: 红酒数据对象</span></span><br><span class="line"><span class="string">    :return: 标准化后的红酒数据，类型为ndarray</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#********* Begin *********#</span></span><br><span class="line">    scaler=StandardScaler()</span><br><span class="line">    after_scaler=scaler.fit_transform(data[<span class="string">&#x27;data&#x27;</span>])</span><br><span class="line">    <span class="keyword">return</span> after_scaler</span><br><span class="line">    <span class="comment">#********* End **********#</span></span><br></pre></td></tr></table></figure><h2 id="第3关-使用knn算法进行预测">第3关 使用kNN算法进行预测</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.neighbors <span class="keyword">import</span> KNeighborsClassifier</span><br><span class="line"><span class="keyword">from</span> sklearn.preprocessing <span class="keyword">import</span> StandardScaler</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">classification</span>(<span class="params">train_feature, train_label, test_feature</span>):</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    对test_feature进行红酒分类</span></span><br><span class="line"><span class="string">    :param train_feature: 训练集数据，类型为ndarray</span></span><br><span class="line"><span class="string">    :param train_label: 训练集标签，类型为ndarray</span></span><br><span class="line"><span class="string">    :param test_feature: 测试集数据，类型为ndarray</span></span><br><span class="line"><span class="string">    :return: 测试集数据的分类结果</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#********* Begin *********#</span></span><br><span class="line">    scaler=StandardScaler()</span><br><span class="line">    train_feature=scaler.fit_transform(train_feature)</span><br><span class="line">    test_feature=scaler.transform(test_feature)</span><br><span class="line">    clf=KNeighborsClassifier()</span><br><span class="line">    clf.fit(train_feature,train_label)</span><br><span class="line">    <span class="keyword">return</span> clf.predict(test_feature)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#********* End **********#</span></span><br></pre></td></tr></table></figure><h1 id="机器学习-线性回归">机器学习-线性回归</h1><h2 id="第1关-数据载入与分析">第1关 数据载入与分析</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#encoding=utf8</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    path = os.getcwd() + <span class="string">&#x27;/ex1data1.txt&#x27;</span></span><br><span class="line">    <span class="comment">#利用pandas读入数据data，并将数据属性分别命名为&#x27;Population&#x27;和&#x27;Profit&#x27;</span></span><br><span class="line">    <span class="comment">#********* begin *********#</span></span><br><span class="line">    data = pd.read_csv(path,header=<span class="literal">None</span>,names=[<span class="string">&#x27;Population&#x27;</span>,<span class="string">&#x27;Profit&#x27;</span>])</span><br><span class="line">    <span class="comment">#********* end *********#</span></span><br><span class="line">    <span class="built_in">print</span>(data.shape)</span><br></pre></td></tr></table></figure><h2 id="第2关-计算损失函数">第2关 计算损失函数</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#encoding=utf8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">computeCost</span>(<span class="params">X, y, theta</span>):</span><br><span class="line">    <span class="comment">#根据公式编写损失函数计算函数</span></span><br><span class="line">    <span class="comment">#********* begin *********#</span></span><br><span class="line">    inner = np.power(((X * theta.T) - y), <span class="number">2</span>)</span><br><span class="line">    cost=np.<span class="built_in">sum</span>(inner) / (<span class="number">2</span> * <span class="built_in">len</span>(X))</span><br><span class="line">    cost=<span class="built_in">round</span>(cost,<span class="number">10</span>)</span><br><span class="line">    <span class="comment">#********* end *********#</span></span><br><span class="line">    <span class="keyword">return</span> cost</span><br></pre></td></tr></table></figure><h2 id="第3关-进行梯度下降得到线性模型">第3关 进行梯度下降得到线性模型</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#encoding=utf8</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">computeCost</span>(<span class="params">X, y, theta</span>):</span><br><span class="line">    inner = np.power(((X * theta.T) - y), <span class="number">2</span>)</span><br><span class="line">    <span class="keyword">return</span> np.<span class="built_in">sum</span>(inner) / (<span class="number">2</span> * <span class="built_in">len</span>(X))</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">gradientDescent</span>(<span class="params">X, y, theta, alpha, iters</span>):</span><br><span class="line">    temp = np.matrix(np.zeros(theta.shape))</span><br><span class="line">    parameters = <span class="built_in">int</span>(theta.ravel().shape[<span class="number">1</span>])</span><br><span class="line">    cost = np.zeros(iters)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(iters):</span><br><span class="line">        error = (X * theta.T) - y</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(parameters):</span><br><span class="line">            <span class="comment">#********* begin *********#</span></span><br><span class="line">            term = np.multiply(error, X[:,j])</span><br><span class="line">            temp[<span class="number">0</span>,j] = theta[<span class="number">0</span>,j] - ((alpha / <span class="built_in">len</span>(X)) * np.<span class="built_in">sum</span>(term))    </span><br><span class="line">            <span class="comment">#********* end *********#</span></span><br><span class="line">        theta = temp</span><br><span class="line">        cost[i] = computeCost(X, y, theta)</span><br><span class="line">    <span class="keyword">return</span> theta, cost</span><br></pre></td></tr></table></figure><h2 id="第4关-建立完整线性回归模型">第4关 建立完整线性回归模型</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#encoding=utf8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line"><span class="comment">#载入数据并进行数据处理</span></span><br><span class="line">path = os.getcwd() + <span class="string">&#x27;/ex1data1.txt&#x27;</span></span><br><span class="line"><span class="comment">#********* begin *********#</span></span><br><span class="line">data=pd.read_csv(path,header=<span class="literal">None</span>,names=[<span class="string">&#x27;Population&#x27;</span>,<span class="string">&#x27;Profit&#x27;</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment">#********* end *********#</span></span><br><span class="line">data.insert(<span class="number">0</span>, <span class="string">&#x27;Ones&#x27;</span>, <span class="number">1</span>)</span><br><span class="line">cols = data.shape[<span class="number">1</span>]</span><br><span class="line">X = data.iloc[:,<span class="number">0</span>:cols-<span class="number">1</span>]</span><br><span class="line">y = data.iloc[:,cols-<span class="number">1</span>:cols]</span><br><span class="line"></span><br><span class="line"><span class="comment">#初始化相关参数</span></span><br><span class="line">X = np.matrix(X.values)</span><br><span class="line">y = np.matrix(y.values)</span><br><span class="line">theta = np.matrix(np.array([<span class="number">0</span>,<span class="number">0</span>]))</span><br><span class="line">alpha = <span class="number">0.01</span></span><br><span class="line">iters = <span class="number">1000</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#定义损失函数</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">computeCost</span>(<span class="params">X, y, theta</span>):</span><br><span class="line">    <span class="comment">#********* begin *********#</span></span><br><span class="line">    inner = np.power(((X * theta.T) - y), <span class="number">2</span>)</span><br><span class="line">    cost=np.<span class="built_in">sum</span>(inner) / (<span class="number">2</span> * <span class="built_in">len</span>(X))</span><br><span class="line"></span><br><span class="line">    <span class="comment">#********* end *********#</span></span><br><span class="line">    <span class="keyword">return</span> cost</span><br><span class="line"></span><br><span class="line"><span class="comment">#定义梯度下降函数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">gradientDescent</span>(<span class="params">X, y, theta, alpha, iters</span>):</span><br><span class="line">    temp = np.matrix(np.zeros(theta.shape))</span><br><span class="line">    parameters = <span class="built_in">int</span>(theta.ravel().shape[<span class="number">1</span>])</span><br><span class="line">    cost = np.zeros(iters)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(iters):</span><br><span class="line">        error = (X * theta.T) - y</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(parameters):</span><br><span class="line">            <span class="comment">#********* begin *********#</span></span><br><span class="line">            term = np.multiply(error, X[:,j])</span><br><span class="line">            temp[<span class="number">0</span>,j] = theta[<span class="number">0</span>,j] - ((alpha / <span class="built_in">len</span>(X)) * np.<span class="built_in">sum</span>(term))</span><br><span class="line"></span><br><span class="line">            <span class="comment">#********* end *********#            </span></span><br><span class="line">        theta = temp</span><br><span class="line">        cost[i] = computeCost(X, y, theta)        </span><br><span class="line">    <span class="keyword">return</span> theta, cost</span><br><span class="line"></span><br><span class="line"><span class="comment">#根据梯度下架算法得到最终线性模型参数</span></span><br><span class="line">g, cost = gradientDescent(X, y, theta, alpha, iters)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;模型参数为:&quot;</span>, g)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计网实验报告</title>
      <link href="/posts/222697760/"/>
      <url>/posts/222697760/</url>
      
        <content type="html"><![CDATA[<p><a href="https://pan.baidu.com/s/1Ap1CJ8artgmUyghlQySWbQ?pwd=u3ew">资料下载请点此处</a></p><p>推荐网课：<a href="https://www.bilibili.com/video/BV1c4411d7jb/?spm_id_from=333.337.search-card.all.click">计算机网络微课堂（有字幕无背景音乐版）_哔哩哔哩_bilibili</a></p>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python实验十二</title>
      <link href="/posts/514850247/"/>
      <url>/posts/514850247/</url>
      
        <content type="html"><![CDATA[<h1 id="pandas-初体验">Pandas 初体验</h1><h2 id="第1关-了解数据处理对象-series">第1关 了解数据处理对象–Series</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> pandas <span class="keyword">import</span> Series,DataFrame</span><br><span class="line"><span class="keyword">import</span>  pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">create_series</span>():</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    返回值:</span></span><br><span class="line"><span class="string">    series_a: 一个Series类型数据</span></span><br><span class="line"><span class="string">    series_b: 一个Series类型数据</span></span><br><span class="line"><span class="string">    dict_a：  一个字典类型数据</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="comment"># 请在此添加代码 完成本关任务</span></span><br><span class="line">    <span class="comment"># ********** Begin *********#</span></span><br><span class="line">    series_a=Series([<span class="number">1</span>,<span class="number">2</span>,<span class="number">5</span>,<span class="number">7</span>],index=[<span class="string">&#x27;nu&#x27;</span>, <span class="string">&#x27;li&#x27;</span>, <span class="string">&#x27;xue&#x27;</span>, <span class="string">&#x27;xi&#x27;</span>])</span><br><span class="line">    dict_a=&#123;<span class="string">&#x27;ting&#x27;</span>:<span class="number">1</span>, <span class="string">&#x27;shuo&#x27;</span>:<span class="number">2</span>, <span class="string">&#x27;du&#x27;</span>:<span class="number">32</span>, <span class="string">&#x27;xie&#x27;</span>:<span class="number">44</span>&#125;</span><br><span class="line">    series_b=Series(dict_a)</span><br><span class="line">    <span class="comment"># ********** End **********#</span></span><br><span class="line">    <span class="comment"># 返回series_a,dict_a,series_b</span></span><br><span class="line">    <span class="keyword">return</span> series_a,dict_a,series_b</span><br></pre></td></tr></table></figure><h2 id="第2关-了解数据处理对象-dataframe">第2关 了解数据处理对象-DataFrame</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> pandas <span class="keyword">import</span> Series,DataFrame</span><br><span class="line"><span class="keyword">import</span>  pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">create_dataframe</span>():</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    返回值:</span></span><br><span class="line"><span class="string">    df1: 一个DataFrame类型数据</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="comment"># 请在此添加代码 完成本关任务</span></span><br><span class="line">    <span class="comment"># ********** Begin *********#</span></span><br><span class="line">    dictionary = &#123;<span class="string">&#x27;states&#x27;</span>:[<span class="string">&#x27;0hio&#x27;</span>,<span class="string">&#x27;0hio&#x27;</span>,<span class="string">&#x27;0hio&#x27;</span>,<span class="string">&#x27;Nevada&#x27;</span>,<span class="string">&#x27;Nevada&#x27;</span>],</span><br><span class="line">         <span class="string">&#x27;years&#x27;</span>:[<span class="number">2000</span>,<span class="number">2001</span>,<span class="number">2002</span>,<span class="number">2001</span>,<span class="number">2002</span>],</span><br><span class="line">         <span class="string">&#x27;pops&#x27;</span>:[<span class="number">1.5</span>,<span class="number">1.7</span>,<span class="number">3.6</span>,<span class="number">2.4</span>,<span class="number">2.9</span>]&#125;</span><br><span class="line">    df1 = DataFrame(dictionary)</span><br><span class="line">    df1=DataFrame(dictionary,index=[<span class="string">&#x27;one&#x27;</span>,<span class="string">&#x27;two&#x27;</span>,<span class="string">&#x27;three&#x27;</span>,<span class="string">&#x27;four&#x27;</span>,<span class="string">&#x27;five&#x27;</span>])</span><br><span class="line">    df1[<span class="string">&#x27;new_add&#x27;</span>]=[<span class="number">7</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">8</span>,<span class="number">2</span>]</span><br><span class="line">    <span class="comment"># ********** End **********#</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#返回df1</span></span><br><span class="line">    <span class="keyword">return</span> df1</span><br></pre></td></tr></table></figure><h2 id="第3关-读取-csv-格式数据">第3关 读取 CSV 格式数据</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> pandas <span class="keyword">import</span> Series,DataFrame</span><br><span class="line"><span class="keyword">import</span>  pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">read_csv_data</span>():</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    返回值:</span></span><br><span class="line"><span class="string">    df1: 一个DataFrame类型数据</span></span><br><span class="line"><span class="string">    length1: 一个int类型数据</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="comment"># 请在此添加代码 完成本关任务</span></span><br><span class="line">    <span class="comment"># ********** Begin *********#</span></span><br><span class="line">    df1=pd.read_csv(<span class="string">&#x27;test3/uk_rain_2014.csv&#x27;</span>,header=<span class="number">0</span>)</span><br><span class="line">    df1.columns = [<span class="string">&#x27;water_year&#x27;</span>,<span class="string">&#x27;rain_octsep&#x27;</span>,<span class="string">&#x27;outflow_octsep&#x27;</span>,<span class="string">&#x27;rain_decfeb&#x27;</span>, <span class="string">&#x27;outflow_decfeb&#x27;</span>, <span class="string">&#x27;rain_junaug&#x27;</span>, <span class="string">&#x27;outflow_junaug&#x27;</span>]</span><br><span class="line">    length1=<span class="built_in">len</span>(df1)</span><br><span class="line">    <span class="comment"># ********** End **********#</span></span><br><span class="line">    <span class="comment">#返回df1,length1</span></span><br><span class="line">    <span class="keyword">return</span> df1,length1</span><br></pre></td></tr></table></figure><h2 id="第4关-数据的基本操作-排序">第4关 数据的基本操作——排序</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> pandas <span class="keyword">import</span> Series,DataFrame</span><br><span class="line"><span class="keyword">import</span>  pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">sort_gate</span>():</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    返回值:</span></span><br><span class="line"><span class="string">    s2: 一个Series类型数据</span></span><br><span class="line"><span class="string">    d2: 一个DataFrame类型数据</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># s1是Series类型数据，d1是DataFrame类型数据</span></span><br><span class="line">    s1 = Series([<span class="number">4</span>, <span class="number">3</span>, <span class="number">7</span>, <span class="number">2</span>, <span class="number">8</span>], index=[<span class="string">&#x27;z&#x27;</span>, <span class="string">&#x27;y&#x27;</span>, <span class="string">&#x27;j&#x27;</span>, <span class="string">&#x27;i&#x27;</span>, <span class="string">&#x27;e&#x27;</span>])</span><br><span class="line">    d1 = DataFrame(&#123;<span class="string">&#x27;e&#x27;</span>: [<span class="number">4</span>, <span class="number">2</span>, <span class="number">6</span>, <span class="number">1</span>], <span class="string">&#x27;f&#x27;</span>: [<span class="number">0</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">2</span>]&#125;)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 请在此添加代码 完成本关任务</span></span><br><span class="line">    <span class="comment"># ********** Begin *********#</span></span><br><span class="line">    s2=s1.sort_index()</span><br><span class="line">    d2=d1.sort_values(by=<span class="string">&#x27;f&#x27;</span>)</span><br><span class="line">    <span class="comment"># ********** End **********#</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#返回s2,d2</span></span><br><span class="line">    <span class="keyword">return</span> s2,d2</span><br></pre></td></tr></table></figure><h2 id="第5关-数据的基本操作-删除">第5关 数据的基本操作——删除</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> pandas <span class="keyword">import</span> Series,DataFrame</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span>  pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">delete_data</span>():</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    返回值:</span></span><br><span class="line"><span class="string">    s2: 一个Series类型数据</span></span><br><span class="line"><span class="string">    d2: 一个DataFrame类型数据</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># s1是Series类型数据，d1是DataFrame类型数据</span></span><br><span class="line">    s1 = Series([<span class="number">5</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">1</span>], index=[<span class="string">&#x27;v&#x27;</span>, <span class="string">&#x27;x&#x27;</span>, <span class="string">&#x27;y&#x27;</span>, <span class="string">&#x27;z&#x27;</span>])</span><br><span class="line">    d1=DataFrame(np.arange(<span class="number">9</span>).reshape(<span class="number">3</span>,<span class="number">3</span>), columns=[<span class="string">&#x27;xx&#x27;</span>,<span class="string">&#x27;yy&#x27;</span>,<span class="string">&#x27;zz&#x27;</span>])</span><br><span class="line">    <span class="comment"># 请在此添加代码 完成本关任务</span></span><br><span class="line">    <span class="comment"># ********** Begin *********#</span></span><br><span class="line">    s2=s1.drop(<span class="string">&#x27;z&#x27;</span>)</span><br><span class="line">    d2=d1.drop(<span class="string">&#x27;yy&#x27;</span>,axis=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># ********** End **********#</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 返回s2,d2</span></span><br><span class="line">    <span class="keyword">return</span> s2, d2</span><br></pre></td></tr></table></figure><h2 id="第6关-数据的基本操作-算术运算">第6关 数据的基本操作——算术运算</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> pandas <span class="keyword">import</span> Series,DataFrame</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span>  pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">add_way</span>():</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    返回值:</span></span><br><span class="line"><span class="string">    df3: 一个DataFrame类型数据</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># df1,df2是DataFrame类型数据</span></span><br><span class="line">    df1 = DataFrame(np.arange(<span class="number">12.</span>).reshape((<span class="number">3</span>, <span class="number">4</span>)), columns=<span class="built_in">list</span>(<span class="string">&#x27;abcd&#x27;</span>))</span><br><span class="line">    df2 = DataFrame(np.arange(<span class="number">20.</span>).reshape((<span class="number">4</span>, <span class="number">5</span>)), columns=<span class="built_in">list</span>(<span class="string">&#x27;abcde&#x27;</span>))</span><br><span class="line">    <span class="comment"># 请在此添加代码 完成本关任务</span></span><br><span class="line">    <span class="comment"># ********** Begin *********#</span></span><br><span class="line">    df3=df1.add(df2,fill_value=<span class="number">4</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># ********** End **********#</span></span><br><span class="line">    <span class="comment"># 返回df3</span></span><br><span class="line">    <span class="keyword">return</span> df3</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="第7关-数据的基本操作-去重">第7关 数据的基本操作——去重</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> pandas <span class="keyword">import</span> Series,DataFrame</span><br><span class="line"><span class="keyword">import</span>  pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">delete_duplicated</span>():</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    返回值:</span></span><br><span class="line"><span class="string">    df2: 一个DataFrame类型数据</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># df1是DataFrame类型数据</span></span><br><span class="line">    df1 = DataFrame(&#123;<span class="string">&#x27;k1&#x27;</span>: [<span class="string">&#x27;one&#x27;</span>] * <span class="number">3</span> + [<span class="string">&#x27;two&#x27;</span>] * <span class="number">4</span>, <span class="string">&#x27;k2&#x27;</span>: [<span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">4</span>]&#125;)</span><br><span class="line">    <span class="comment"># 请在此添加代码 完成本关任务</span></span><br><span class="line">    <span class="comment"># ********** Begin *********#</span></span><br><span class="line">    df2=df1.drop_duplicates()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># ********** End **********#</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 返回df2</span></span><br><span class="line">    <span class="keyword">return</span> df2</span><br></pre></td></tr></table></figure><h2 id="第8关-数据重塑">第8关 数据重塑</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> pandas <span class="keyword">import</span> Series,DataFrame</span><br><span class="line"><span class="keyword">import</span>  pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">suoying</span>():</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    返回值:</span></span><br><span class="line"><span class="string">    d1: 一个DataFrame类型数据</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="comment">#s1是Series类型数据</span></span><br><span class="line">    s1=Series(np.random.randn(<span class="number">10</span>),</span><br><span class="line">           index=[[<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;d&#x27;</span>], [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>]])</span><br><span class="line">    <span class="comment"># 请在此添加代码 完成本关任务</span></span><br><span class="line">    <span class="comment"># ********** Begin *********#</span></span><br><span class="line">    d1=s1.unstack()</span><br><span class="line">    <span class="comment"># ********** End **********#</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 返回d1</span></span><br><span class="line">    <span class="keyword">return</span> d1</span><br><span class="line">suoying()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python实验十一</title>
      <link href="/posts/623891310/"/>
      <url>/posts/623891310/</url>
      
        <content type="html"><![CDATA[<h1 id="matplotlib接口和常用图形">Matplotlib接口和常用图形</h1><h2 id="第1关-画图接口">第1关 画图接口</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib</span><br><span class="line">matplotlib.use(<span class="string">&#x27;Agg&#x27;</span>)</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">student</span>(<span class="params">x,y</span>):</span><br><span class="line">    <span class="comment"># ********** Begin *********#</span></span><br><span class="line">    fig = plt.figure(figsize=(<span class="number">10</span>,<span class="number">10</span>))</span><br><span class="line">    plt.savefig(<span class="string">&quot;Task1/image1/T2.png&quot;</span>)</span><br><span class="line">    plt.show()</span><br><span class="line">    <span class="comment"># ********** End **********#</span></span><br></pre></td></tr></table></figure><h2 id="第2关-线形图">第2关 线形图</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib</span><br><span class="line">matplotlib.use(<span class="string">&quot;Agg&quot;</span>)</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">student</span>(<span class="params">input_data,input_data1</span>):</span><br><span class="line"></span><br><span class="line">    <span class="comment"># ********* Begin *********#</span></span><br><span class="line">    fig = plt.figure(figsize=(<span class="number">10</span>,<span class="number">10</span>))</span><br><span class="line">    plt.plot(input_data,<span class="string">&#x27;--g&#x27;</span>)</span><br><span class="line">    plt.plot(input_data1,<span class="string">&#x27;:r&#x27;</span>)</span><br><span class="line">    plt.legend([<span class="string">&#x27;L1&#x27;</span>,<span class="string">&#x27;L2&#x27;</span>])</span><br><span class="line">    plt.savefig(<span class="string">&quot;Task2/img/T1.png&quot;</span>)</span><br><span class="line">    plt.show()</span><br><span class="line">    <span class="comment"># ********* End *********#</span></span><br></pre></td></tr></table></figure><h2 id="第3关-散点图">第3关 散点图</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib</span><br><span class="line">matplotlib.use(<span class="string">&quot;Agg&quot;</span>)</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">plt.style.use(<span class="string">&#x27;seaborn-whitegrid&#x27;</span>)</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">student</span>(<span class="params">x,y,x2,y2,x3,y3,area</span>):</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    根据输入的三组数据绘制三组不同参数的散点图</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    :param x,y: 第一组数据，类型为array</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    :param x2,y2: 第二组数据，类型为array</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    :param x3,y3: 第三组数据，类型为array</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    :param area: 标记大小参数的值，类型为array</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    :return: None</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="comment"># ********* Begin *********#</span></span><br><span class="line">    fig = plt.figure(figsize=(<span class="number">10</span>,<span class="number">10</span>))</span><br><span class="line">    plt.scatter(x,y,s = area,alpha=<span class="number">0.5</span>)</span><br><span class="line">    plt.scatter(x2,y2,s = area,c = <span class="string">&#x27;green&#x27;</span>,alpha = <span class="number">0.6</span>)</span><br><span class="line">    plt.scatter(x3,y3,s = area,marker=<span class="string">&#x27;v&#x27;</span>,alpha = <span class="number">0.7</span>)</span><br><span class="line">    plt.savefig(<span class="string">&quot;Task3/img/T1.png&quot;</span>)</span><br><span class="line">    plt.show()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># ********* End *********#</span></span><br></pre></td></tr></table></figure><h2 id="第4关-直方图">第4关 直方图</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib</span><br><span class="line"></span><br><span class="line">matplotlib.use(<span class="string">&quot;Agg&quot;</span>)</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">student</span>(<span class="params">data,x,y</span>):</span><br><span class="line"></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    根据输入数据将直方图与线形图绘制在同一面板中，并设置直方图为红色，线形图为蓝色</span></span><br><span class="line"><span class="string">    :param data: 绘制直方图数据，类型为list</span></span><br><span class="line"><span class="string">    :param x,y: 绘制线形图数据，类型为list</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    :return: None</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="comment"># ********* Begin *********#</span></span><br><span class="line">    plt.figure(figsize=(<span class="number">10</span>,<span class="number">10</span>))</span><br><span class="line">    plt.hist(data,color = <span class="string">&#x27;red&#x27;</span>)</span><br><span class="line">    plt.plot(x,y,color = <span class="string">&#x27;blue&#x27;</span>)</span><br><span class="line">    plt.savefig(<span class="string">&quot;Task4/img/T1.png&quot;</span>)</span><br><span class="line">    plt.show()</span><br><span class="line">    <span class="comment"># ********* End *********#</span></span><br></pre></td></tr></table></figure><h2 id="第5关-饼图">第5关 饼图</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib</span><br><span class="line">matplotlib.use(<span class="string">&quot;Agg&quot;</span>)</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">student</span>(<span class="params">labels,quants</span>):</span><br><span class="line">    <span class="comment"># ********* Begin *********#</span></span><br><span class="line">    fig = plt.figure(figsize = (<span class="number">6</span>,<span class="number">6</span>))</span><br><span class="line">    explode = [<span class="number">0</span>]*<span class="built_in">len</span>(quants)</span><br><span class="line">    explode[<span class="number">1</span>] = <span class="number">0.1</span></span><br><span class="line">    plt.pie(quants,labels = labels,explode = explode,autopct=<span class="string">&#x27;%1.1f%%&#x27;</span>)</span><br><span class="line">    plt.savefig(<span class="string">&quot;Task5/img/T1.png&quot;</span>)</span><br><span class="line">    plt.show()</span><br><span class="line">    <span class="comment"># ********* End *********#</span></span><br></pre></td></tr></table></figure><h1 id="numpy基础及取值操作">NumPy基础及取值操作</h1><h2 id="第1关-ndarray对象">第1关 ndarray对象</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">print_ndarray</span>(<span class="params">input_data</span>):</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    实例化ndarray对象并打印</span></span><br><span class="line"><span class="string">    :param input_data: 测试用例，类型为字典类型</span></span><br><span class="line"><span class="string">    :return: None</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="comment">#********* Begin *********#</span></span><br><span class="line">    a = np.array(input_data[<span class="string">&#x27;data&#x27;</span>])</span><br><span class="line">    <span class="built_in">print</span>(a)</span><br><span class="line">    <span class="comment">#********* End *********#</span></span><br></pre></td></tr></table></figure><h2 id="第2关-形状操作">第2关 形状操作</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">reshape_ndarray</span>(<span class="params">input_data</span>):</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    将ipnut_data转换成ndarray后将其变形成一位数组并打印</span></span><br><span class="line"><span class="string">    :param input_data: 测试用例，类型为list</span></span><br><span class="line"><span class="string">    :return: None</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="comment">#********* Begin *********#</span></span><br><span class="line">    a = np.array(input_data)</span><br><span class="line">    a.resize(a.size)</span><br><span class="line">    <span class="built_in">print</span>(a)</span><br><span class="line">    <span class="comment">#********* End *********#</span></span><br></pre></td></tr></table></figure><h2 id="第3关-基础操作">第3关 基础操作</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_answer</span>(<span class="params">input_data</span>):</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    将input_data转换成ndarray后统计每一行中最大值的位置并打印</span></span><br><span class="line"><span class="string">    :param input_data: 测试用例，类型为list</span></span><br><span class="line"><span class="string">    :return: None</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="comment">#********* Begin *********#</span></span><br><span class="line">    a = np.array(input_data)</span><br><span class="line">    <span class="built_in">print</span>(a.argmax(axis = <span class="number">1</span>))</span><br><span class="line">    <span class="comment">#********* End *********#</span></span><br></pre></td></tr></table></figure><h2 id="第4关-随机数生成">第4关 随机数生成</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">shuffle</span>(<span class="params">input_data</span>):</span><br><span class="line"></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    打乱input_data并返回打乱结果</span></span><br><span class="line"><span class="string">    :param input_data: 测试用例输入，类型为list</span></span><br><span class="line"><span class="string">    :return: result，类型为list</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="comment"># 保存打乱的结果</span></span><br><span class="line">    result = []</span><br><span class="line">    <span class="comment">#********* Begin *********#</span></span><br><span class="line">    result = <span class="built_in">list</span>(np.random.choice((input_data),size = <span class="built_in">len</span>(input_data),replace = <span class="literal">False</span>))</span><br><span class="line">    <span class="comment">#********* End *********#</span></span><br><span class="line">    <span class="keyword">return</span> result</span><br></pre></td></tr></table></figure><h2 id="第5关-索引与切片">第5关 索引与切片</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_roi</span>(<span class="params">data, x, y, w, h</span>):</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    提取data中左上角顶点坐标为(x, y)宽为w高为h的ROI</span></span><br><span class="line"><span class="string">    :param data: 二维数组，类型为ndarray</span></span><br><span class="line"><span class="string">    :param x: ROI左上角顶点的行索引，类型为int</span></span><br><span class="line"><span class="string">    :param y: ROI左上角顶点的列索引，类型为int</span></span><br><span class="line"><span class="string">    :param w: ROI的宽，类型为int</span></span><br><span class="line"><span class="string">    :param h: ROI的高，类型为int</span></span><br><span class="line"><span class="string">    :return: ROI，类型为ndarray</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="comment">#********* Begin *********#</span></span><br><span class="line">    test = data[x:x+h+<span class="number">1</span>,y:y+w+<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">return</span> test</span><br><span class="line">    <span class="comment">#********* End *********#</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python实验十</title>
      <link href="/posts/572214903/"/>
      <url>/posts/572214903/</url>
      
        <content type="html"><![CDATA[<h1 id="python之多线程编程">Python之多线程编程</h1><h2 id="第1关-线程同步之报数">第1关 线程同步之报数</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 本关将根据测试输入创建多个线程，每个线程相当于队列中的一个人，他们报的数用全局变量x存储；</span></span><br><span class="line"><span class="comment"># 学员需要编写run()方法，使得每个线程将自己该报的数输出；</span></span><br><span class="line"><span class="comment"># 注意在输出语句之前，加入time.sleep(0.1)防止输出过快造成顺序混乱的情况。</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line">lock = threading.Lock()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">mythread</span>(threading.Thread):</span><br><span class="line">    x = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        threading.Thread.__init__(<span class="variable language_">self</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">run</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">global</span> x</span><br><span class="line">    <span class="comment"># *********begin*********#</span></span><br><span class="line">        lock.acquire()</span><br><span class="line">        x += <span class="number">1</span></span><br><span class="line">        <span class="built_in">print</span>(x,end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        time.sleep(<span class="number">0.1</span>)</span><br><span class="line">        lock.release()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># ********* end*********#</span></span><br><span class="line">num = <span class="built_in">input</span>()</span><br><span class="line">t1 = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">int</span>(num)):</span><br><span class="line">    t = mythread()</span><br><span class="line">    t1.append(t)</span><br><span class="line">x = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> t1:</span><br><span class="line">    i.start()</span><br></pre></td></tr></table></figure><h2 id="第2关-线程同步之生产者-消费者问题">第2关 线程同步之生产者-消费者问题</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line">con = threading.Condition()</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Producer</span>(threading.Thread):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, num</span>):</span><br><span class="line">        threading.Thread.__init__(<span class="variable language_">self</span>)</span><br><span class="line">        <span class="variable language_">self</span>.num = num</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">run</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">global</span> x</span><br><span class="line">        <span class="comment">#*********begin*********#</span></span><br><span class="line">        <span class="keyword">with</span> con:</span><br><span class="line">            <span class="keyword">while</span> x &gt;= <span class="variable language_">self</span>.num:</span><br><span class="line">                con.wait()</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(x, <span class="variable language_">self</span>.num+<span class="number">1</span>):</span><br><span class="line">                <span class="keyword">if</span>(i!=<span class="variable language_">self</span>.num):</span><br><span class="line">                    <span class="built_in">print</span>(i, end=<span class="string">&quot; &quot;</span>)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="built_in">print</span>(i)</span><br><span class="line">                x += <span class="number">1</span></span><br><span class="line">                time.sleep(<span class="number">0.1</span>)</span><br><span class="line">            con.notify()</span><br><span class="line">        <span class="comment">#********* end*********#</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Consumer</span>(threading.Thread):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, num</span>):</span><br><span class="line">        threading.Thread.__init__(<span class="variable language_">self</span>)</span><br><span class="line">        <span class="variable language_">self</span>.num = num</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">run</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">global</span> x</span><br><span class="line">        <span class="comment">#*********begin*********#</span></span><br><span class="line">        <span class="keyword">with</span> con:</span><br><span class="line">            <span class="keyword">while</span> x &lt;= <span class="number">0</span>:</span><br><span class="line">                con.wait()</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="variable language_">self</span>.num,-<span class="number">1</span>, -<span class="number">1</span>):</span><br><span class="line">                <span class="keyword">if</span>(i!=-<span class="number">1</span>):</span><br><span class="line">                    <span class="built_in">print</span>(i, end=<span class="string">&quot; &quot;</span>)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="built_in">print</span>(i)</span><br><span class="line">                x -= <span class="number">1</span></span><br><span class="line">                time.sleep(<span class="number">0.1</span>)</span><br><span class="line">            con.notify_all()</span><br><span class="line">        <span class="comment">#********* end*********#</span></span><br><span class="line">num = <span class="built_in">input</span>()</span><br><span class="line">x = <span class="number">0</span></span><br><span class="line">num = <span class="built_in">int</span>(num)</span><br><span class="line">p = Producer(num)</span><br><span class="line">c = Consumer(num)</span><br><span class="line">p.start()</span><br><span class="line">c.start()</span><br><span class="line">p.join()</span><br><span class="line">c.join()</span><br></pre></td></tr></table></figure><h1 id="python-进程和线程">Python–进程和线程</h1><h2 id="第1关-python多进程-求素数个数">第1关 Python多进程-求素数个数</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> math</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> multiprocessing <span class="keyword">import</span> cpu_count</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> multiprocessing <span class="keyword">import</span> Pool</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="comment"># 判断数字是否为质数</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ********** Begin *********#</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">isPrime</span>(<span class="params">n</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> n &lt; <span class="number">2</span>:</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, <span class="built_in">int</span>(math.sqrt(n)) + <span class="number">1</span>):</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> n % i == <span class="number">0</span>:</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="comment"># ********** End *********#</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="comment"># 计算给定区间含有多少个质数</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ********** Begin *********#</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">howMany</span>(<span class="params">T</span>):</span><br><span class="line">    count = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(T[<span class="number">0</span>], T[<span class="number">1</span>]):</span><br><span class="line">        <span class="keyword">if</span> isPrime(i):</span><br><span class="line">            count += <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> count</span><br><span class="line"><span class="comment"># ********** End *********#</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="comment"># 对整个数字空间N进行分段CPU_COUNT</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ********** Begin *********#</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">separateNum</span>(<span class="params">N, CPU_COUNT</span>):</span><br><span class="line">    sepList = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(CPU_COUNT):</span><br><span class="line">        sepList.append([<span class="built_in">int</span>(N / CPU_COUNT * i), <span class="built_in">int</span>(N / CPU_COUNT * (i + <span class="number">1</span>))])</span><br><span class="line">    <span class="keyword">return</span> sepList</span><br><span class="line"></span><br><span class="line"><span class="comment"># ********** End *********#</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    N = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line">    <span class="comment"># 多进程</span></span><br><span class="line">    CPU_COUNT = cpu_count()  <span class="comment"># CPU内核数 本机为8</span></span><br><span class="line">    pool = Pool(CPU_COUNT)</span><br><span class="line">    sepList = separateNum(N, CPU_COUNT)</span><br><span class="line">    result = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(CPU_COUNT):</span><br><span class="line">        result.append(pool.apply_async(howMany, (sepList[i], )))</span><br><span class="line">    pool.close()</span><br><span class="line">    pool.join()</span><br><span class="line">    ans = <span class="number">0</span></span><br><span class="line">    <span class="built_in">list</span> = [res.get() <span class="keyword">for</span> res <span class="keyword">in</span> result]</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">sum</span>(<span class="built_in">list</span>), end=<span class="string">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="第2关-python多线程-求合数个数">第2关 Python多线程-求合数个数</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line">ans = <span class="number">0</span></span><br><span class="line">lock = threading.Lock()</span><br><span class="line"><span class="comment"># 判断数字是否为质数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#********** Begin *********#</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">isPrime</span>(<span class="params">n</span>):</span><br><span class="line">    <span class="keyword">if</span> n &lt;= <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, <span class="built_in">int</span>(math.sqrt(n)) + <span class="number">1</span>):</span><br><span class="line">        <span class="keyword">if</span> n % i == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"><span class="comment">#********** End *********#</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#********** Begin *********#</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 计算给定区间含有多少个质数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">howMany</span>(<span class="params">T</span>):</span><br><span class="line">    <span class="built_in">sum</span> = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(T[<span class="number">0</span>], T[<span class="number">1</span>] + <span class="number">1</span>):</span><br><span class="line">        <span class="keyword">if</span> isPrime(i):</span><br><span class="line">            <span class="built_in">sum</span> += <span class="number">1</span></span><br><span class="line">    lock.acquire()</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">global</span> ans</span><br><span class="line">        ans += <span class="built_in">sum</span></span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        lock.release()</span><br><span class="line"><span class="comment">#********** End *********#</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#********** Begin *********#</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 对整个数字空间N进行分段CPU_COUNT</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">seprateNum</span>(<span class="params">N, CPU_COUNT</span>):</span><br><span class="line">    <span class="built_in">list</span> = [[i * (N // CPU_COUNT) + <span class="number">1</span>, (i + <span class="number">1</span>) * (N // CPU_COUNT)] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, CPU_COUNT)]</span><br><span class="line">    <span class="built_in">list</span>[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">list</span>[CPU_COUNT - <span class="number">1</span>][<span class="number">1</span>] &lt; N:</span><br><span class="line">        <span class="built_in">list</span>[CPU_COUNT - <span class="number">1</span>][<span class="number">1</span>] = N</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">list</span></span><br><span class="line"><span class="comment">#********** End *********#</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    N = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line">    threadNum = <span class="number">32</span></span><br><span class="line">    t = []</span><br><span class="line">    sepList = seprateNum(N, threadNum)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, threadNum):</span><br><span class="line">        t.append(threading.Thread(target = howMany, args = (sepList[i], )))</span><br><span class="line">        t[i].start()</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, threadNum):</span><br><span class="line">        t[i].join()</span><br><span class="line">    <span class="built_in">print</span>(N - <span class="number">1</span> - ans, end = <span class="string">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="第3关-python-threadlocal变量">第3关 Python-ThreadLocal变量</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line">x = <span class="number">10</span></span><br><span class="line">data = threading.local()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">action</span>():</span><br><span class="line">    <span class="keyword">global</span> x</span><br><span class="line">    data.num = x</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1000000</span>):</span><br><span class="line">        data.num += <span class="number">1</span></span><br><span class="line">        data.num -= <span class="number">1</span></span><br><span class="line">    x = data.num</span><br><span class="line"></span><br><span class="line">x = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line">thread = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>):</span><br><span class="line">    thread.append(threading.Thread(target = action))</span><br><span class="line">    thread[i].start()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>):</span><br><span class="line">    thread[i].join()</span><br><span class="line"><span class="built_in">print</span>(x)</span><br></pre></td></tr></table></figure><h2 id="第4关-python-进程-vs-线程">第4关 Python-进程 VS 线程</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="keyword">from</span> multiprocessing <span class="keyword">import</span> cpu_count</span><br><span class="line"><span class="keyword">from</span> multiprocessing <span class="keyword">import</span> Pool</span><br><span class="line">N = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line">a = <span class="built_in">list</span>(<span class="built_in">map</span>(<span class="built_in">int</span>, <span class="built_in">input</span>().split(<span class="string">&#x27; &#x27;</span>)))</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">howMany</span>(<span class="params">T</span>):</span><br><span class="line">    ans = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(T[<span class="number">0</span>] - <span class="number">1</span>, T[<span class="number">1</span>]):</span><br><span class="line">        ans = <span class="built_in">max</span>(ans, a[i])</span><br><span class="line">    <span class="keyword">return</span> ans</span><br><span class="line"><span class="comment"># 对整个数字空间N进行分段CPU_COUNT</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">seprateNum</span>(<span class="params">N, CPU_COUNT</span>):</span><br><span class="line">    <span class="built_in">list</span> = [[i * (N // CPU_COUNT) + <span class="number">1</span>, (i + <span class="number">1</span>) * (N // CPU_COUNT)]</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, CPU_COUNT)]</span><br><span class="line">    <span class="built_in">list</span>[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">list</span>[CPU_COUNT - <span class="number">1</span>][<span class="number">1</span>] &lt; N:</span><br><span class="line">        <span class="built_in">list</span>[CPU_COUNT - <span class="number">1</span>][<span class="number">1</span>] = N</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">list</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># 使用多线程或者多进程，求一个整数数组里的最大值</span></span><br><span class="line">    <span class="comment"># ********** Begin *********#</span></span><br><span class="line">    CPU_COUNT = cpu_count()  </span><br><span class="line">    pool = Pool(CPU_COUNT)</span><br><span class="line">    sepList = seprateNum(N, CPU_COUNT)</span><br><span class="line">    result = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(CPU_COUNT):</span><br><span class="line">        result.append(pool.apply_async(howMany, (sepList[i], )))</span><br><span class="line">    pool.close()</span><br><span class="line">    pool.join()</span><br><span class="line">    ans = <span class="number">0</span></span><br><span class="line">    <span class="built_in">list</span> = [res.get() <span class="keyword">for</span> res <span class="keyword">in</span> result]</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">max</span>(<span class="built_in">list</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># ********** End *********#</span></span><br></pre></td></tr></table></figure><h2 id="第5关-python-分布式进程">第5关 Python-分布式进程</h2><ol><li>用 Python 实现分布式程序，一般用Python里面哪个类？<br><strong>Process</strong></li></ol>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python实验九</title>
      <link href="/posts/2364705784/"/>
      <url>/posts/2364705784/</url>
      
        <content type="html"><![CDATA[<h1 id="故宫壁纸网页图片的爬取实验">故宫壁纸网页图片的爬取实验</h1><h2 id="第1关-网页爬虫选择题">第1关 网页爬虫选择题</h2><ol><li><p>湖南省政府主页URL是http://www.hunan.gov.cn/hnszf/index.html<br>其中，表示网页文件名称的是  D、index.html</p></li><li><p>python用来通过网络连接获取网页内容的外库是：requests</p></li><li><p>要将response对象r的代码格式设置为utf8格式 应该使用下列哪个代码：</p></li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">r.encoding=<span class="string">&#x27;utf8&#x27;</span></span><br></pre></td></tr></table></figure><ol start="4"><li>网页内容如下</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;content-bt&quot;</span>&gt;</span>学校简介<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span>湖南大学办学起源于公元976年创建的岳麓书院<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>要提取文本学校简介，需要使用下列哪个语句</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">oup.find(<span class="string">&quot;div&quot;</span>,attrs=&#123;<span class="string">&quot;class&quot;</span>:<span class="string">&quot;content-bt&quot;</span>&#125;).text</span><br></pre></td></tr></table></figure><h2 id="第2关-获取故宫壁纸网页的第一张图片的信息">第2关 获取故宫壁纸网页的第一张图片的信息</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span>   BeautifulSoup</span><br><span class="line">url = <span class="string">&quot;https://www.dpm.org.cn/lights/royal/p/1.html&quot;</span></span><br><span class="line"><span class="comment">#代码开始</span></span><br><span class="line">r = requests.get(url)</span><br><span class="line">r.encoding = <span class="string">&#x27;utf-8&#x27;</span></span><br><span class="line">soup =BeautifulSoup(r.text,<span class="string">&quot;html.parser&quot;</span>)</span><br><span class="line">pic=soup.find(<span class="string">&quot;div&quot;</span>, class_=<span class="string">&quot;pic&quot;</span>)</span><br><span class="line">x=pic.find(<span class="string">&quot;img&quot;</span>)</span><br><span class="line">imglj=x.attrs[<span class="string">&#x27;src&#x27;</span>]</span><br><span class="line">imgmz=x.attrs[<span class="string">&#x27;title&#x27;</span>].strip()</span><br><span class="line"><span class="comment">#代码结束</span></span><br><span class="line"><span class="built_in">print</span>(imglj)</span><br><span class="line"><span class="built_in">print</span>(imgmz)</span><br><span class="line">f1=<span class="built_in">open</span>(<span class="string">&quot;tpxx.txt&quot;</span>,<span class="string">&quot;w&quot;</span>)</span><br><span class="line">f1.write(imglj+<span class="string">&quot;\n&quot;</span>)</span><br><span class="line">f1.write(imgmz+<span class="string">&quot;\n&quot;</span>)</span><br><span class="line">f1.close()</span><br></pre></td></tr></table></figure><h2 id="第3关-下载故宫壁纸网页的第一张图片">第3关 下载故宫壁纸网页的第一张图片</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span>   BeautifulSoup</span><br><span class="line">url = <span class="string">&quot;https://www.dpm.org.cn/lights/royal/p/1.html&quot;</span></span><br><span class="line">r=requests.get(url)</span><br><span class="line">r.encoding = <span class="string">&#x27;utf-8&#x27;</span></span><br><span class="line">soup=BeautifulSoup(r.text,<span class="string">&quot;html.parser&quot;</span>)</span><br><span class="line">pic=soup.find(<span class="string">&quot;div&quot;</span>, class_=<span class="string">&quot;pic&quot;</span>)</span><br><span class="line">x=pic.find(<span class="string">&quot;img&quot;</span>)</span><br><span class="line">imglj=x.attrs[<span class="string">&quot;src&quot;</span>]</span><br><span class="line">imgmz=x.attrs[<span class="string">&quot;title&quot;</span>].strip()</span><br><span class="line"><span class="comment">#代码开始</span></span><br><span class="line">r=requests.get(imglj)</span><br><span class="line">cpmc=<span class="string">&quot;image//&quot;</span>+imgmz+<span class="string">&quot;.jpg&quot;</span></span><br><span class="line">f1=<span class="built_in">open</span>(cpmc,<span class="string">&quot;bw&quot;</span>)</span><br><span class="line">f1.write(r.content)</span><br><span class="line">f1.close()</span><br><span class="line"></span><br><span class="line"><span class="comment">#代码结束</span></span><br></pre></td></tr></table></figure><h2 id="第4关-下载故宫壁纸网页的单页的多张图片">第4关 下载故宫壁纸网页的单页的多张图片</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span>   BeautifulSoup</span><br><span class="line">url = <span class="string">&quot;https://www.dpm.org.cn/lights/royal/p/1.html&quot;</span></span><br><span class="line"><span class="comment">#代码开始</span></span><br><span class="line">r = requests.get(url)</span><br><span class="line">r.encoding = <span class="string">&#x27;utf-8&#x27;</span></span><br><span class="line">soup = BeautifulSoup(r.text,<span class="string">&quot;html.parser&quot;</span>)</span><br><span class="line">pics=soup.find_all(<span class="string">&quot;div&quot;</span>, class_=<span class="string">&quot;pic&quot;</span>)</span><br><span class="line">i=<span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> pic <span class="keyword">in</span> pics:  </span><br><span class="line">    x=pic.find(<span class="string">&quot;img&quot;</span>)  </span><br><span class="line">    imglj=x.attrs[<span class="string">&quot;src&quot;</span>]</span><br><span class="line">    imgmz=x.attrs[<span class="string">&quot;title&quot;</span>].strip()  </span><br><span class="line">    r=requests.get(imglj)  </span><br><span class="line">    f=<span class="built_in">open</span>(<span class="string">&quot;image/&quot;</span>+<span class="built_in">str</span>(i)+imgmz+<span class="string">&quot;.jpg&quot;</span>,<span class="string">&quot;wb&quot;</span>)</span><br><span class="line">    i=i+<span class="number">1</span></span><br><span class="line">    f.write(r.content)</span><br><span class="line">    f.close()</span><br><span class="line"><span class="comment">#代码结束</span></span><br></pre></td></tr></table></figure><h2 id="第5关-获取故宫壁纸前三个网页的多张图片的信息">第5关 获取故宫壁纸前三个网页的多张图片的信息</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span>   BeautifulSoup</span><br><span class="line"><span class="comment">#代码开始</span></span><br><span class="line">i=<span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">6</span>):</span><br><span class="line">    url = <span class="string">&quot;https://www.dpm.org.cn/lights/royal/p/&quot;</span>+<span class="built_in">str</span>(j)+<span class="string">&quot;.html&quot;</span></span><br><span class="line">    r = requests.get(url)</span><br><span class="line">    r.encoding = <span class="string">&#x27;utf-8&#x27;</span></span><br><span class="line">    soup = BeautifulSoup(r.text,<span class="string">&quot;html.parser&quot;</span>)</span><br><span class="line">    pics = soup.find_all(<span class="string">&quot;div&quot;</span>,class_=<span class="string">&quot;pic&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> pic <span class="keyword">in</span> pics:</span><br><span class="line">        x = pic.find(<span class="string">&quot;img&quot;</span>)</span><br><span class="line">        imglj = x.attrs[<span class="string">&quot;src&quot;</span>]</span><br><span class="line">        imgmz = x.attrs[<span class="string">&quot;title&quot;</span>].strip()</span><br><span class="line">        r = requests.get(imglj)</span><br><span class="line">        f1 = <span class="built_in">open</span>(<span class="string">&quot;image/&quot;</span>+<span class="built_in">str</span>(i)+imgmz+<span class="string">&quot;.jpg&quot;</span>,<span class="string">&quot;wb&quot;</span>)</span><br><span class="line">        f1.write(r.content)</span><br><span class="line">        f1.close()</span><br><span class="line">        i += <span class="number">1</span>        </span><br><span class="line"><span class="comment">#代码结束</span></span><br></pre></td></tr></table></figure><h1 id="正则表达式入门">正则表达式入门</h1><h2 id="第1关-查找第一个匹配的字符串">第1关 查找第一个匹配的字符串</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="comment"># 在此导入python正则库</span></span><br><span class="line"><span class="comment">########## Begin ##########</span></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="comment">########## End ##########</span></span><br><span class="line">check_name = <span class="built_in">input</span>()</span><br><span class="line"><span class="comment"># 在此使用正则匹配&#x27;张明&#x27;的信息，结果存储到is_zhangming中</span></span><br><span class="line"><span class="comment">########## Begin ##########</span></span><br><span class="line">is_zhangming = re.search(<span class="string">r&#x27;张明&#x27;</span>,check_name)</span><br><span class="line"><span class="comment">########## End ##########</span></span><br><span class="line"><span class="keyword">if</span> is_zhangming <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">    <span class="built_in">print</span>(is_zhangming.span())</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(is_zhangming)</span><br></pre></td></tr></table></figure><h2 id="第2关-基础正则表达式-字符组">第2关 基础正则表达式–字符组</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line">input_str = <span class="built_in">input</span>()</span><br><span class="line"><span class="comment"># 编写获取python和Python的正则，并存储到match_python变量中</span></span><br><span class="line"><span class="comment">########## Begin ##########</span></span><br><span class="line">match_python=re.findall(<span class="string">r&#x27;[Pp]ython&#x27;</span>,input_str)</span><br><span class="line"><span class="comment">########## End ##########</span></span><br><span class="line"><span class="built_in">print</span>(match_python)</span><br></pre></td></tr></table></figure><h2 id="第3关-基础正则表达式-区间与区间取反">第3关 基础正则表达式–区间与区间取反</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line">input_str = <span class="built_in">input</span>()</span><br><span class="line"><span class="comment"># 1、编写获取到数字的正则，并输出匹配到的信息</span></span><br><span class="line"><span class="comment">########## Begin ##########</span></span><br><span class="line">is_number = re.findall(<span class="string">r&#x27;[0-9]&#x27;</span>,input_str)</span><br><span class="line"><span class="built_in">print</span>(is_number)</span><br><span class="line"><span class="comment">########## End ##########</span></span><br><span class="line"><span class="comment"># 2、编写获取到不是数字的正则，并输出匹配到的信息</span></span><br><span class="line"><span class="comment">########## Begin ##########</span></span><br><span class="line">is_not_number = re.findall(<span class="string">r&#x27;[^0-9]&#x27;</span>,input_str)</span><br><span class="line"><span class="built_in">print</span>(is_not_number)</span><br><span class="line"><span class="comment">########## End ##########</span></span><br></pre></td></tr></table></figure><h2 id="第4关-基础正则表达式-快捷方式">第4关 基础正则表达式–快捷方式</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line">input_str = <span class="built_in">input</span>()</span><br><span class="line"><span class="comment"># 1、编写获取到单词的正则，并输出匹配到的信息</span></span><br><span class="line"><span class="comment">########## Begin ##########</span></span><br><span class="line">is_word = re.findall(<span class="string">r&#x27;\w&#x27;</span>,input_str)</span><br><span class="line"><span class="built_in">print</span>(is_word)</span><br><span class="line"><span class="comment">########## End ##########</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2、编写获取到不是单词的正则，并输出匹配到的信息</span></span><br><span class="line"><span class="comment">########## Begin ##########</span></span><br><span class="line">is_not_word = re.findall(<span class="string">r&#x27;\W&#x27;</span>,input_str)</span><br><span class="line"><span class="built_in">print</span>(is_not_word)</span><br><span class="line"><span class="comment">########## End ##########</span></span><br></pre></td></tr></table></figure><h2 id="第5关-字符串的开始与结束">第5关 字符串的开始与结束</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">input_str = <span class="built_in">input</span>()</span><br><span class="line"><span class="comment"># 1、编写获取到以educoder开头的正则，并存储到变量a</span></span><br><span class="line"><span class="comment">########## Begin ##########</span></span><br><span class="line">a = re.search(<span class="string">r&#x27;^educoder&#x27;</span>,input_str)</span><br><span class="line"><span class="comment">########## End ##########</span></span><br><span class="line"><span class="keyword">if</span> a <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">    <span class="built_in">print</span>(a.span())</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(a)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2、编写获取到以educoder结束的正则，并存储到变量b</span></span><br><span class="line"><span class="comment">########## Begin ##########</span></span><br><span class="line">b = re.search(<span class="string">r&#x27;educoder$&#x27;</span>,input_str)</span><br><span class="line"></span><br><span class="line"><span class="comment">########## End ##########</span></span><br><span class="line"><span class="keyword">if</span> b <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">    <span class="built_in">print</span>(b.span())</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(b)</span><br></pre></td></tr></table></figure><h2 id="第6关-任意字符">第6关 任意字符</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">input_str = <span class="built_in">input</span>()</span><br><span class="line"><span class="comment"># 编写获取(任意字符)+ython的字符串，并存储到变量a中</span></span><br><span class="line"><span class="comment">########## Begin ##########</span></span><br><span class="line">a = re.findall(<span class="string">r&#x27;.ython&#x27;</span>,input_str)</span><br><span class="line"><span class="comment">########## End ##########</span></span><br><span class="line"><span class="built_in">print</span>(a)</span><br></pre></td></tr></table></figure><h2 id="第7关-可选字符">第7关 可选字符</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line">input_str = <span class="built_in">input</span>()</span><br><span class="line"><span class="comment"># 编写获取she或者he的字符串，并存储到变量a中</span></span><br><span class="line"><span class="comment">########## Begin ##########</span></span><br><span class="line">a = re.findall(<span class="string">r&#x27;s?he&#x27;</span>,input_str)</span><br><span class="line"><span class="comment">########## End ##########</span></span><br><span class="line"><span class="built_in">print</span>(a)</span><br></pre></td></tr></table></figure><h2 id="第8关-重复区间">第8关 重复区间</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line">input_str = <span class="built_in">input</span>()</span><br><span class="line"><span class="comment"># 1、基于贪心模式匹配字符串中重复出现2个数字的子字符串，并存储到变量a。</span></span><br><span class="line"><span class="comment">########## Begin ##########</span></span><br><span class="line">a = re.findall(<span class="string">r&#x27;[\d]&#123;2&#125;&#x27;</span>,input_str)</span><br><span class="line"><span class="comment">########## End ##########</span></span><br><span class="line"><span class="built_in">print</span>(a)</span><br><span class="line"><span class="comment"># 2、基于贪心模式匹配字符串中重复出现4-7个数字的子字符串，并存储到变量b。</span></span><br><span class="line"><span class="comment">########## Begin ##########</span></span><br><span class="line">b = re.findall(<span class="string">r&#x27;[\d]&#123;4,7&#125;&#x27;</span>,input_str)</span><br><span class="line"><span class="comment">########## End ##########</span></span><br><span class="line"><span class="built_in">print</span>(b)</span><br></pre></td></tr></table></figure><h2 id="第9关-开闭区间与速写">第9关 开闭区间与速写</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line">input_str = <span class="built_in">input</span>()</span><br><span class="line"><span class="comment"># 1、基于贪心模式匹配字符串中连续出现5个数字以上的子字符串，并存储到变量a。</span></span><br><span class="line"><span class="comment">########## Begin ##########</span></span><br><span class="line">a = re.findall(<span class="string">r&#x27;[\d]&#123;5,&#125;&#x27;</span>,input_str)</span><br><span class="line"><span class="comment">########## End ##########</span></span><br><span class="line"><span class="built_in">print</span>(a)</span><br><span class="line"><span class="comment"># 2、匹配字符串中都为数字的子字符串，并存储到变量b。</span></span><br><span class="line"><span class="comment">########## Begin ##########</span></span><br><span class="line">b = re.findall(<span class="string">r&#x27;[\d]+&#x27;</span>,input_str)</span><br><span class="line"><span class="comment">########## End ##########</span></span><br><span class="line"><span class="built_in">print</span>(b)</span><br></pre></td></tr></table></figure><h1 id="python网络编程之udp套接字编程">Python网络编程之UDP套接字编程</h1><h2 id="第1关-udp-初体验">第1关 UDP 初体验</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="comment">#********* Begin *********#</span></span><br><span class="line"><span class="comment"># 指定服务器地址和端口</span></span><br><span class="line">serverName=<span class="string">&#x27;localhost&#x27;</span></span><br><span class="line">serverPort = <span class="number">56789</span></span><br><span class="line"><span class="comment">#********* End *********#</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#********* Begin *********#</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建UDP套接字</span></span><br><span class="line">clientSocket = socket.socket(socket.AF_INET,socket.SOCK_DGRAM)</span><br><span class="line"><span class="comment">#********* End *********#</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#********* Begin *********#</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置套接字超时值1秒</span></span><br><span class="line"></span><br><span class="line">clientSocket.settimeout(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#********* End *********#</span></span><br><span class="line"></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> i &lt; <span class="number">2</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line"></span><br><span class="line">        <span class="comment"># ********* Begin *********#</span></span><br><span class="line">        <span class="comment"># 生成数据报，编码为bytes以便发送</span></span><br><span class="line">        message = (<span class="string">&#x27;Ping %d time&#x27;</span>%(i+<span class="number">1</span>)).encode()</span><br><span class="line">        <span class="comment"># ********* End *********#</span></span><br><span class="line">  </span><br><span class="line">        <span class="comment"># ********* Begin *********#</span></span><br><span class="line">        <span class="comment"># 将信息发送到服务器</span></span><br><span class="line">        clientSocket.sendto(message,(serverName,serverPort))</span><br><span class="line">        <span class="comment"># ********* End *********#</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># ********* Begin *********#</span></span><br><span class="line">        <span class="comment"># 从服务器接收信息，同时也能得到服务器地址，并将其输出</span></span><br><span class="line">        modifiedMessage,serverAddress = clientSocket.recvfrom(<span class="number">1024</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;Receive %d: from %s&#x27;</span> %(i+<span class="number">1</span>,serverAddress))</span><br><span class="line">        <span class="comment"># ********* End *********#</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line"></span><br><span class="line">        <span class="comment"># ********* Begin *********#</span></span><br><span class="line">        <span class="comment"># 输出超时丢包的反馈信息</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;Sequence %d: Request timed out&#x27;</span> %(i+<span class="number">1</span>))</span><br><span class="line">        <span class="comment"># ********* End *********#</span></span><br><span class="line">    i = i + <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#********* Begin *********#</span></span><br><span class="line"><span class="comment"># 关闭该UDP套接字</span></span><br><span class="line">clientSocket.close()</span><br><span class="line"><span class="comment">#********* End *********#</span></span><br></pre></td></tr></table></figure><h2 id="第2关-udp-计算丢包率">第2关 UDP 计算丢包率</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="comment">#********* Begin *********#</span></span><br><span class="line"><span class="comment"># 指定服务器地址和端口</span></span><br><span class="line">address = (<span class="string">&#x27;127.0.0.1&#x27;</span>,<span class="number">56789</span>)</span><br><span class="line"><span class="comment">#********* End *********#</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#********* Begin *********#</span></span><br><span class="line"><span class="comment"># 创建UDP套接字</span></span><br><span class="line">s = socket(AF_INET,SOCK_DGRAM)</span><br><span class="line"><span class="comment">#********* End *********#</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#********* Begin *********#</span></span><br><span class="line"><span class="comment"># 设置套接字超时值1秒</span></span><br><span class="line">s.settimeout(<span class="number">1</span>)</span><br><span class="line"><span class="comment">#********* End *********#</span></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line">count = <span class="number">0</span> <span class="comment"># 可以用来记录丢包的个数</span></span><br><span class="line"><span class="keyword">while</span> i &lt; <span class="number">10</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># ********* Begin *********#</span></span><br><span class="line">        <span class="comment"># 生成数据报，编码为bytes，并发送给服务器</span></span><br><span class="line">        message = <span class="built_in">bytes</span>(<span class="string">f&#x27;Ping <span class="subst">&#123;i+<span class="number">1</span>&#125;</span> time&#x27;</span>,encoding = <span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">        s.sendto(message,address)</span><br><span class="line">        <span class="comment"># ********* End *********#</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">        <span class="comment"># ********* Begin *********#</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 从服务器接收信息，同时也能得到来自服务器的数据，需要输出该数据，具体见编程要求</span></span><br><span class="line">        data,address = s.recvfrom(<span class="number">1024</span>)</span><br><span class="line">        data = <span class="built_in">bytes</span>.decode(data)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;Receive <span class="subst">&#123;i+<span class="number">1</span>&#125;</span>: Hello, I am here&quot;</span>)</span><br><span class="line">        <span class="comment"># ********* End *********#</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line"></span><br><span class="line">        <span class="comment"># ********* Begin *********#</span></span><br><span class="line">        count += <span class="number">1</span></span><br><span class="line">        <span class="comment"># 输出超时丢包的反馈信息。记录丢包的个数，便于后面计算丢包率</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;The <span class="subst">&#123;i+<span class="number">1</span>&#125;</span> package is lost&quot;</span>)</span><br><span class="line">        <span class="comment"># ********* End *********#</span></span><br><span class="line"></span><br><span class="line">    i = i + <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ********* Begin *********#</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 计算并输出丢包率</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;Packet loss rate： <span class="subst">&#123;count/i:<span class="number">.2</span>f&#125;</span>&quot;</span>)</span><br><span class="line"><span class="comment"># ********* End *********#</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"><span class="comment">#********* Begin *********#</span></span><br><span class="line"><span class="comment"># 关闭该UDP套接字</span></span><br><span class="line">s.close()</span><br><span class="line"><span class="comment">#********* End *********#</span></span><br></pre></td></tr></table></figure><h2 id="第3关-创建基于-udp-的-ping-程序">第3关 创建基于 UDP 的 Ping 程序</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="comment">#********* Begin *********#</span></span><br><span class="line"><span class="comment"># 指定服务器地址和端口</span></span><br><span class="line">serverName=<span class="string">&#x27;localhost&#x27;</span></span><br><span class="line">serverPort = <span class="number">56789</span></span><br><span class="line"><span class="comment">#********* End *********#</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="comment">#********* Begin *********#</span></span><br><span class="line"><span class="comment"># 创建UDP套接字</span></span><br><span class="line">clientSocket = socket.socket(socket.AF_INET,socket.SOCK_DGRAM)</span><br><span class="line"><span class="comment">#********* End *********#</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="comment">#********* Begin *********#</span></span><br><span class="line"><span class="comment"># 设置套接字超时值1秒</span></span><br><span class="line">clientSocket.settimeout(<span class="number">1</span>)</span><br><span class="line"><span class="comment">#********* End *********#</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> i &lt; <span class="number">10</span>:</span><br><span class="line">    sendTime = time.time() <span class="comment"># 记录发送ping报文的当前时间戳</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># ********* Begin *********#</span></span><br><span class="line">        <span class="comment"># 生成数据报，编码为bytes，并发送给服务器</span></span><br><span class="line">        message = (<span class="string">&#x27;Ping %d time&#x27;</span> % (i + <span class="number">1</span>)).encode()</span><br><span class="line">        clientSocket.sendto(message,(serverName,serverPort))</span><br><span class="line">        <span class="comment"># ********* End *********#</span></span><br><span class="line">        <span class="comment"># ********* Begin *********#</span></span><br><span class="line">        <span class="comment"># 从服务器接收信息，同时也能得到来自服务器的地址，需要输出该地址，(不要输出端口号！)</span></span><br><span class="line">        <span class="comment"># 并且需要计算和输出RTT，具体见编程要求</span></span><br><span class="line">        modifiedMessage, serverAddress = clientSocket.recvfrom(<span class="number">1024</span>)</span><br><span class="line">        rtt = time.time() - sendTime</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;Receive %d: Reply from %s RTT = %.2fs&#x27;</span> %(i+<span class="number">1</span>,serverAddress[<span class="number">0</span>],rtt))</span><br><span class="line">        <span class="comment"># ********* End *********#</span></span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="comment"># ********* Begin *********#</span></span><br><span class="line">        <span class="comment"># 输出超时丢包的反馈信息。</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;Sequence %d: Request timed out&#x27;</span> %(i+<span class="number">1</span>))</span><br><span class="line">        <span class="comment"># ********* End *********#</span></span><br><span class="line">    i = i + <span class="number">1</span></span><br><span class="line"><span class="comment">#********* Begin *********#</span></span><br><span class="line"><span class="comment"># 关闭该UDP套接字</span></span><br><span class="line">clientSocket.close()</span><br><span class="line"><span class="comment">#********* End *********#</span></span><br></pre></td></tr></table></figure><h1 id="socket编程">Socket编程</h1><h2 id="第1关-创建连接套接字">第1关 创建连接套接字</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> *</span><br><span class="line">serverSocket = socket(AF_INET, SOCK_STREAM)  <span class="comment"># 此步已经完成socket对象的创建，无需重新创建</span></span><br><span class="line">serverSocket.setsockopt(SOL_SOCKET, SO_REUSEADDR, <span class="number">1</span>)</span><br><span class="line"><span class="comment"># 将TCP套接字绑定到指定端口</span></span><br><span class="line">serverSocket.bind((<span class="string">&#x27;&#x27;</span>, <span class="number">6789</span>))</span><br><span class="line"><span class="comment"># 进行端口监听，客户端最大连接数为1</span></span><br><span class="line">serverSocket.listen(<span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;start...&quot;</span>)</span><br><span class="line">connectionSocket, addr = serverSocket.accept()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;连接成功&quot;</span>)</span><br><span class="line">data = connectionSocket.recv(<span class="number">1024</span>)</span><br><span class="line"><span class="built_in">print</span>(data.decode())</span><br><span class="line">serverSocket.close()</span><br></pre></td></tr></table></figure><h2 id="第2关-socket传输加密图片">第2关 socket传输加密图片</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> rsa</span><br><span class="line"></span><br><span class="line">PUB = <span class="string">b&#x27;-----BEGIN RSA PUBLIC KEY-----\nMIIECgKCBAEA0clXVz1AWzgNSm7F6phzkXMoHrMywLrYKuDhh4wwnTt/08CFFN/V\nQbNk7wioAHC04D/iAe8XAH26T+i8y8zErxTTxitRN38Lrf0S1y3q+XBvQfm9z5X7\n8o6dHx/u8PMMQzwpqQZeICupLZe0+h9dP2Y05wKwnP9xRDJYelzc1VvdlNJS9x0l\nrb41+x2851ULq0z5iLUpUb4cBA2vVZ60BHKr22IhysQQ0MhUX8JnNAcQacQXJI+j\n7ROoo0dySQiHGrUKsELfUIl3XSMPBF+vF2shZnldip+uOyyMfUz35YHtlHIbyAKD\nfXWx2nkf3lMd0Fq/YfdUUcJWm6qxgvVoeCInpT2xDC4QnPQFantHEJinupajFupF\n0GBZp+/KFbgNYWqRbJzqywKA0epdMvlQsHbNfG4AkdOE4jP/WHBq73xdutajtCbd\nlFGd/VISconfpx8E0Ouj2fvoOcNIk9ed3zPF1sRJ5WsYAP7Cp1aSa98Lg9phb68E\nzsaQBMt4+bZbuJ0TC9e73P36f9j9+Cj+kFS6rVRbVbPn+oI/HWPn2BJ5W0pR5Buh\niXWhlGV+KHII63SqVx7jSmKmuTJk87FWg2q7+/joLidXvUnZbUj1eroIRtDkNA9e\n3VwCdkzUvQaBvYIEzqxE7Ej5ZL0gQHa3honCSl4aFDq7QcBnO6kti98fJIY1K0Fh\n6J94WHs80J00paSkZK77leE410Lq7ImVpq3mNwjEvp0x8K4eRMllOUWaoUcqo8tW\nS8OT5mUuP604hdK6ZAtjN5yJz9ro2ii1SkGjcx0YDVpGdK5LjKgKtWBj4ZrFMLHE\nMEquwHDpRsWZRWILrIy9gYooav43kovGMaUdRLAzlkvC2oa66aCehugvvvoW9kmE\nzihIfFuLH7W8suj69XI8v//QLQATqTc+0bBgdNlASJVk7z1m5mlNUIBX33W5V6qe\nToexbo1w1+/7Bjo80ketY1avVVWbZVIEgu1bkT+Z+DVqoU4zw6JMopu2bzlQSGbG\nF+4A3w1CK7U4dCXV/Vh7nbGSgJXjpO+EM0Hk3VcBoGReTsq5AVVOYu2I6Xrjds3b\n/Dek81JRHKCcdto4ZSpuL+73NrQwhu09EByH63cOYoSAz6mWbsUev5B12bkIheaL\nYKfCud06McA0pq5VvqEpFZDjgyszHtuVbwDcQQaXzF0Jq6X1jojjfxIakI3xUvlA\nmNk8JkFX6VdZ1NI9KbFcIBqZxbmgXQbWM6K4bJ+GXEcFZkaVZuInEMI8ak6VjmCy\nPt7Ty4WPKeDNzPSNSBi3HPPPB/yfOiMATdGXsm/jKp97RILiDi72ccdHrfzYYeei\niH7d6Dne6nKGIyXZJeFrfB1hSBvlXmIGXQIDAQAB\n-----END RSA PUBLIC KEY-----\n&#x27;</span></span><br><span class="line"></span><br><span class="line">PRI = <span class="string">b&#x27;-----BEGIN RSA PRIVATE KEY-----\nMIISSQIBAAKCBAEA0clXVz1AWzgNSm7F6phzkXMoHrMywLrYKuDhh4wwnTt/08CF\nFN/VQbNk7wioAHC04D/iAe8XAH26T+i8y8zErxTTxitRN38Lrf0S1y3q+XBvQfm9\nz5X78o6dHx/u8PMMQzwpqQZeICupLZe0+h9dP2Y05wKwnP9xRDJYelzc1VvdlNJS\n9x0lrb41+x2851ULq0z5iLUpUb4cBA2vVZ60BHKr22IhysQQ0MhUX8JnNAcQacQX\nJI+j7ROoo0dySQiHGrUKsELfUIl3XSMPBF+vF2shZnldip+uOyyMfUz35YHtlHIb\nyAKDfXWx2nkf3lMd0Fq/YfdUUcJWm6qxgvVoeCInpT2xDC4QnPQFantHEJinupaj\nFupF0GBZp+/KFbgNYWqRbJzqywKA0epdMvlQsHbNfG4AkdOE4jP/WHBq73xdutaj\ntCbdlFGd/VISconfpx8E0Ouj2fvoOcNIk9ed3zPF1sRJ5WsYAP7Cp1aSa98Lg9ph\nb68EzsaQBMt4+bZbuJ0TC9e73P36f9j9+Cj+kFS6rVRbVbPn+oI/HWPn2BJ5W0pR\n5BuhiXWhlGV+KHII63SqVx7jSmKmuTJk87FWg2q7+/joLidXvUnZbUj1eroIRtDk\nNA9e3VwCdkzUvQaBvYIEzqxE7Ej5ZL0gQHa3honCSl4aFDq7QcBnO6kti98fJIY1\nK0Fh6J94WHs80J00paSkZK77leE410Lq7ImVpq3mNwjEvp0x8K4eRMllOUWaoUcq\no8tWS8OT5mUuP604hdK6ZAtjN5yJz9ro2ii1SkGjcx0YDVpGdK5LjKgKtWBj4ZrF\nMLHEMEquwHDpRsWZRWILrIy9gYooav43kovGMaUdRLAzlkvC2oa66aCehugvvvoW\n9kmEzihIfFuLH7W8suj69XI8v//QLQATqTc+0bBgdNlASJVk7z1m5mlNUIBX33W5\nV6qeToexbo1w1+/7Bjo80ketY1avVVWbZVIEgu1bkT+Z+DVqoU4zw6JMopu2bzlQ\nSGbGF+4A3w1CK7U4dCXV/Vh7nbGSgJXjpO+EM0Hk3VcBoGReTsq5AVVOYu2I6Xrj\nds3b/Dek81JRHKCcdto4ZSpuL+73NrQwhu09EByH63cOYoSAz6mWbsUev5B12bkI\nheaLYKfCud06McA0pq5VvqEpFZDjgyszHtuVbwDcQQaXzF0Jq6X1jojjfxIakI3x\nUvlAmNk8JkFX6VdZ1NI9KbFcIBqZxbmgXQbWM6K4bJ+GXEcFZkaVZuInEMI8ak6V\njmCyPt7Ty4WPKeDNzPSNSBi3HPPPB/yfOiMATdGXsm/jKp97RILiDi72ccdHrfzY\nYeeiiH7d6Dne6nKGIyXZJeFrfB1hSBvlXmIGXQIDAQABAoIEAQCxuzV+2IrEfWlt\nLQoKZZxLltdfowwVknZ/ZURNFS0+mGEEoi9dbwD6h6S0io3iyZnD/vtYDhpbtSj6\neEAzHUlo12lPk/Vb4gugHS8wFFvldiccKxxvWS854S8mZmSFyDQUZk0ZQSbPdI4A\n7W1LFvVmOA4LxRCiAhwQ3eJt0GzbadgBNGtLpmr8lpCfLiOTjU60kyM5edoGwdx0\nZq+sByeWORx2Yd4lLhTc/UvWURokTvPN126P8A2+VhBiPK6LR2lG7CihChat4bi5\ntHENkI8DdSS374ybXAs9YNGpemLvEzOXt1DoE5EY4nSKlmG0dpBkq+1Gb0cFeXLs\nsSFwxL78QFt8OBbeLcyvXGGWQ9kCK4K2ptaHHHWHQ4nRqGp6GhNj++g2r36P/Y/r\nx/WrsON2jUAr8foTkbMb/VeQsrU2LhQurZfFkcPZ24fRTQ4J8dsEeFgZM/n+PNgS\nz+qWLm824WL0QBom/qM4fJ2nLcYhE7dqvsIb35hgIoNzPHtCfAebEaBIQT6MzLPE\nSq9n5js9Rjtdi4FRy3h2mJAmMzUBry0XdZCJhAtILNt2oMHQPERoTs/dvXJs28VK\nU3KJry2PawbWQ5tZNsWzvXQyjURD9IX8kQ81N+xz93ayiQcXGgJshhomOXlY0xHh\nHUkoPWLrvJHugdLyx8nZBCbzx7IcBTk8IzIWfOoPY6d0JpeGvX8rroWEuu+eOdAg\nq/v/6oYxvOQJEjkmooykj2V+iOp/X8Auo4TkbO2gS43VXvtDUp8fn4bxh9txzmzB\ngArNoCAXK1mAQSKwBF7aKedBfnPAPnDkC6qIvQah9GLt4KQBCw0PcYHr5Ognklz2\nipXksAk4n6tuqdnsTJtn0cMgUvvTY265M2qLf5BviC0SO3TjFat83aA3K8fMn/qO\niY2uQW8nArxc3Bh0B3N7LcGhCg5ByTPxBuXdC3dLK54DDYVjYBUxKvMN1v7zMxVT\n3ZVUmNuwKViyQhJie5T/+axvl+NQFr7eWTfPAx15TXyMSC7zxrTUPMKjgNjvOIU+\n0eCI41EY3/7aGjAG7pi/GKU43Rj5aa6rZXy+EdLWDIU+Pgqj+O/peweOCmIexQgB\niyrh07p5F9ooO9G/xTH3PaDAMbmQ/8jmaQ5TGDtCwCWJY2hKef6HueMck6VgvtLV\ntdK2ZQ4yIiwN6VLt5fMbUy7D75Ehbud7GaeMjpBEXeAYPzLcBjNzybzi/INq+z9m\n2S8mOKx9fubGluek4UarjgYHtGjYwbHwvgWTfXAxu72OXR2waYRaB6ZJYseZzjWc\n51DOiTXwrj6TGmYTVVDEpV7aodGmYqt3CitsX/C9jDHJ2VmF9vJHSXt27yg/JgwC\nv0sliSJhAoICIQDXTWX58jOkBQS3b4Dpqi5JlRbG0h5twbKZTd+h823d8fSHZhV5\n+VG7og2Fa/ReuZulCmGIR9lWICgPbt0hFB4AwuK81EWvd5XxZhujRJQI/bdV5F7Z\nyq1W4qOZCYQtqvg8F3zfKvnKL4VrzcE86zOoWqsbhMzhxjyLF5FlAHlOSKx5Q9sj\n/olPK1Wu/VVgx+znMsQsKs7mKEbFCvEzLqN4b6M10DVWtJlg2MFSNsAok0iNXoKM\n1r6piT4jw0Ubjgji36hCEiqzTdsAsO8o58ftTzdWFtmcKADSTp6Mo7hXC1OwYHVl\nakkwY/xisMDqm/Bii6dCNeESqiDgqdmtXC9U25xbr8DRP6MvYcmoZK0udOMwtaBf\n4nVZiJ0aJja+WpaOH4eOsDYWGPtj6xj2v1lbZ7KYNAwhVav4/ilQfn85uFyQdyyd\npSjUwCv8F1ngjvOUm+IH5jwhmM+BJMtdHtg2QARWs7f/g9Nj4ZUUKPxmN71a+Yhy\n51+EOvhf2pFIoEgteFR/Q2ndIZJPbudY9E4mo427bktY1rxhiJ564TOcfvH1wSVY\naTVMBgrx96UyG7GxLRsj2l30PFBkjtYwiBKT1Uj1NM//bgf0Z66FeCNDA5Pmu1wt\nSlIXtC8x4EerE/s/AL9kCgDYD4dWpM2cy3rAIgwcA2GRtwWOdwAf0rrAAbL0sR33\nNuLsG4QkK2BC2q8cILI49MILvhCjsZ4dg8zVAoIB4QD5cQce6aCBWhF5lZQ0sTUa\nOuoZ+zzxj0h7000cJPZsakNBRoFKV8LC5eoYOm6ZRkSuV8yidxFpiuA9SW49u5i9\nYzbDPqBfqyU8e8WOg5UkWh2FhoFACd9YqFZw2ZdJjxva+Rq92lI0v3kqwl5iHgpi\nJ1ulwIqUkO41ITtRrIOlzD80W+U2XemGlq7/vZ1BgFeM/1lb+j0NN/xWrloT20Bh\no4m2NjFdnQ46dc62ZK98xRcke8RRWS9ckB7VemGIJI/0UUTUOgLhqQ2ll5qEhHem\nok91VVNKti+8i+gIXqVaQsHIJA8GRcdBANRGIkQysa/XGWdzAApaYf2P8DV4FUYH\n4cYbi9wx4CQxAquI/kLj4W1vrlFX6P+sfwPLMaqZSCn/nTYrhC6e53MFnj488Vap\nWTbMWf5kwd2eBH/SsQkFLVCobL+eXI3iUIytc8K7eon6SVNA50z4ccXRgxqUKj+c\nAvVSPvbN7zUY/wCa7KJloWOkBfHljTT2T61l1ZtCReh18jNedL6B2+qj5pBKmX+j\nEInh+TSEA9KpdFIvlObmSdlqbB27gLHVkepRXEz0R1w2SFpM6ITERkkeMaZuI80C\npn/ZIIcH3f5AIx1wZYxFxd/hh+oO797hWZL53+Csd2kCggIgd3/PBP7IaNYcOxAZ\ndhft3wtv++Rt3S9wSKSvZj0tks2Tkn83ll6qXcFhTdeQZ+8PE3iCj9iJKcNpWL+I\n3q5CxNtma7ZKA00VnUm2N1V98MuZsYOynaFfumTKtstQYOSPKRNETL2WrQDZRe+K\nvJwzLNM+O2TnLr0Pp4fqPCwaKDgv+pKOFBlX7ug3g4u6kqAEvoIv3e/YrGhYd09O\ndsEBHHyiEuFAaaKNqvJDwrT+zMaKs2Rsg21Bn+m74q+kMNoR1pKa2ikpKCIjVuvd\nok+baPzZ0t+V4pVVd2UJnTfVvgJcbf3ryuFGRCSK1eATA2SP9LJcoGQ1S13AJ9I+\nLnmHD8tgqocPN1Th5w+YlO1kLe/UlZmJrQ6NYadwwy3Inri67aFUZP8q1fMBvQCk\n93dXSmNw/geNYAckD2xKVBIR3WCVh92NluYvln4fK6luSjQtwCMRPp8sat1c9uoM\nMeBH0zyO6+yOSLTLZJm1W94v0TBI2jC76kK/gi4U42b10mCcDxjFlWk+Xe0fPxVo\nNLhMlCedKBXcni95mYzxoXRTaB4Rf/y3FK44VbzY4Fo6h2hVpOhLMwgls8SyPk4F\nViSAYyszdl3cwII6yg2uEQiQUcavlZYSYFTq4ZsxwrYgMTVC80If+I+Qzls4HAAW\n21sZA4EiRX4e7niuDdfA6ujUnHOU9zlDT45YPwI6wrSMli64mJ0RLomzFj9lDuYr\nw2f/DQKCAeB+BzVp0PBfanpZy9FNrhr+XbXZ2q43/gTJS0EybxpyPF4upMi+Hwkw\nH6nfA+bNWktpKsMhcrdBdAFH9cnVNus9BNuuWf39WCNAI+j00FaSP1WbGRJEoLhP\nuv2xlr5xU/Tm9eUk9yGBtRwrFnlJaZQlc21Cmb1qwq8X+OpXoaoCIufsNGHiziAm\n+AsC+3Jwnb+eZYVoi049V4QO55hrX+NvcYkqnsbiXW/K6aq/TK+9gnbm4AGYeE8N\nnWN2yJZuisqQzl7QO18pVJioiahwO92YO3mZ9rpWjSYhRS6+y9MPf5sY298bdDXw\nCdM2fCmo003ch+FUoTiZ4diS2PKq8VSottG5KTjfmjeu64JvfMefC06XlqNSn05O\ngP4Rs85WE7fkhjHQWsCTWK0ssX8Qm38FoSWmqfF2Rt0J8YwDj57XFsYh0pAeGvU0\n2y24lTxWLNt5sYJ20GZ7QECKUosjQRVSZcw8+cMI2UsijfRoUhba8me9f6NwL6AK\nsscRJJOFMHz62pxJpQJ76fjrRpqwlk1+veRsX9TAvo25QCQmFj1zLOzEcEu1aJhx\nJ4AUC2Z2JXfZlUTKhtBNupVGxB8qlrwGEsmVknGm7+p9zUAagbQVrJwo/tqrIVai\n1PcFeK+zc8ECggIhAM6FCvyHOGVlZgUsnf9pEGPZAi4BGt2/LXlLY9s8PfuqaVcv\nPX1349WztG0DgnyighFufWrTNN5qKtaxeIEY6af4wqW2j0BmvDNCynMPvE+rqVCY\n46hDq762kpAqWniF+2xoldGiI2uTWgcTBF2/pQHqJxmTh8UvAy98f4ZPV7wzcRLO\n1lJ0Bmb3ugwqxFF3C9HLNzSoIFfpLjXvF7ACUwQqrfAGROY4VIw94n21pf7E93NS\nAEs/wmMvIPexgCkSHkxg+2m3nIenYxIKhDt3WjUHf2pao77S3pIXLFIkTeIC9F3q\nT39C2iZcm4ByWdH+aIUUW2axjuBSrtKP1rgdKZU5wueXi0FJrWsARioZ/SU8b4NH\nUsN1gTCX6+/a0CVsd9bw1u2HjOI/FjMRrj+bxqHPYm+v+LAIVLksf2EwPAKLIdj2\nfyBTsrVxO6Zhwn97oWMIoPbNFc02uGy3DQFUhNpTcUFw/bd6MUsciWfa9LKK+gc8\nK/Lb3LI1Q1iC94fmqC9snSLS1FN1stTwOcSqYoY47Wz4qpbxt+mE+Et57ndVaObK\nq0HgEBWIPi/Iudo4pyfw8rX5kV33fWwYbtNbc1pw1yJWsLG/YV1pctyVnEgws6TE\nxNVio31OCLrBkKXvNS6i46+iUjU2F++4o1hN8iDYEDezHPKj/Zeq3R2QcSJ4b23L\nwui+fB+tk56BUG9c6c0LjkQb7+Xb5Qtdf5QDtKM=\n-----END RSA PRIVATE KEY-----\n&#x27;</span></span><br><span class="line"></span><br><span class="line">pubkey = rsa.PublicKey.load_pkcs1(PUB)</span><br><span class="line">serverSocket = socket(AF_INET, SOCK_STREAM)</span><br><span class="line">serverSocket.setsockopt(SOL_SOCKET,SO_REUSEADDR,<span class="number">1</span>)</span><br><span class="line">serverSocket.bind((<span class="string">&#x27;&#x27;</span>, <span class="number">6900</span>)) <span class="comment"># 将TCP欢迎套接字绑定到指定端口</span></span><br><span class="line">serverSocket.listen(<span class="number">1</span>) <span class="comment"># 最大连接数为1</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;start...&#x27;</span>)</span><br><span class="line">conn, address = serverSocket.accept()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;连接成功&quot;</span>)</span><br><span class="line">  </span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="comment">########### begin ##########</span></span><br><span class="line">    <span class="comment"># 接受客户传来的请求，并打印消息</span></span><br><span class="line">    request = conn.recv(<span class="number">1024</span>).decode()</span><br><span class="line">    <span class="built_in">print</span>(request)</span><br><span class="line">    <span class="comment">######### end ##################</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;./src/step2/python.jpg&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        read_info = f.read()</span><br><span class="line">        <span class="comment">########## beigin #############</span></span><br><span class="line">        <span class="comment"># 对图片信息进行加密，并发送出去</span></span><br><span class="line">        encrypted_info = rsa.encrypt(read_info, pubkey)</span><br><span class="line">        conn.send(encrypted_info)</span><br><span class="line">        <span class="comment">############# end ##############</span></span><br><span class="line">    conn.close()</span><br><span class="line"><span class="keyword">except</span> IOError:</span><br><span class="line">    conn.close()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python实验八</title>
      <link href="/posts/830016937/"/>
      <url>/posts/830016937/</url>
      
        <content type="html"><![CDATA[<h1 id="学习-python异常处理之try-except-finally">学习-Python异常处理之try…except…finally…</h1><h2 id="第1关">第1关</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 请在下面的 Begin-End 之间按照注释中给出的提示编写正确的代码</span></span><br><span class="line"><span class="comment">########## Begin ##########</span></span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&quot;src/step1/test.txt&quot;</span>,<span class="string">&quot;r&quot;</span>)</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="built_in">eval</span>(<span class="built_in">input</span>())</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;错误信息为<span class="subst">&#123;e&#125;</span>&quot;</span>)</span><br><span class="line"><span class="keyword">finally</span>:</span><br><span class="line">    f.close()</span><br><span class="line"><span class="comment">########## End ##########</span></span><br><span class="line"><span class="keyword">if</span> f.closed:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;文件已关闭&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;文件未关闭&quot;</span>)</span><br></pre></td></tr></table></figure><h1 id="python异常处理">Python异常处理</h1><h2 id="第1关-python异常类与自定义异常">第1关 Python异常类与自定义异常</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyError</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="comment">#********begin*********#</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,number</span>):</span><br><span class="line">        Exception.__init__(<span class="variable language_">self</span>)</span><br><span class="line">        <span class="variable language_">self</span>.number=number</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__str__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;这是我定义的第%d个异常&#x27;</span> %(<span class="variable language_">self</span>.number)</span><br><span class="line">    <span class="comment">#******** end*********#</span></span><br></pre></td></tr></table></figure><h2 id="第2关-python中的异常处理结构">第2关 Python中的异常处理结构</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MyError</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__str__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;长度过长，大于3&#x27;</span></span><br><span class="line"><span class="keyword">def</span>  <span class="title function_">TestLength</span>(<span class="params">x</span>):</span><br><span class="line">    x=<span class="built_in">len</span>(x)</span><br><span class="line">     <span class="comment">#*********begin*********#</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">if</span> x&gt;<span class="number">3</span>:</span><br><span class="line">          <span class="keyword">raise</span> MyError(x)    </span><br><span class="line">    <span class="keyword">except</span> MyError <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(e)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;长度合适&quot;</span>)</span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;执行完毕&quot;</span>)</span><br><span class="line">    <span class="comment">#********* end*********#</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python实验七</title>
      <link href="/posts/1877379034/"/>
      <url>/posts/1877379034/</url>
      
        <content type="html"><![CDATA[<h1 id="学习-python文件之目录访问">学习-Python文件之目录访问</h1><h2 id="第1关-学习-python文件之目录访问">第1关 学习-Python文件之目录访问</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 请在下面的Begin-End之间按照注释中给出的提示编写正确的代码</span></span><br><span class="line"><span class="comment">########## Begin ##########</span></span><br><span class="line"><span class="comment"># 第一步：打印当前的工作路径</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line">os.getcwd()</span><br><span class="line"><span class="comment"># 第二步：打印当前目录下的所有文件以及文件夹的列表</span></span><br><span class="line"><span class="built_in">print</span>(os.listdir())</span><br><span class="line"><span class="comment">########## End ##########</span></span><br></pre></td></tr></table></figure><h1 id="基于python语言的文件与文件夹管理">基于Python语言的文件与文件夹管理</h1><h2 id="第1关-创建子文件夹">第1关 创建子文件夹</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">mkDir</span>():</span><br><span class="line">    <span class="comment"># ÇëÔÚÕâÀï²¹³ä´úÂë£¬Íê³É±¾¹ØÈÎÎñ</span></span><br><span class="line">    <span class="comment">#-----------Begin----------</span></span><br><span class="line">    os.mkdir(<span class="string">&quot;dst&quot;</span>)</span><br><span class="line">    <span class="comment">#------------End-----------</span></span><br></pre></td></tr></table></figure><h2 id="第2关-删除带有只读属性的文件">第2关 删除带有只读属性的文件</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os, sys</span><br><span class="line"><span class="keyword">import</span> os.path</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">removeFile</span>():</span><br><span class="line">    <span class="comment">#-----------Begin----------</span></span><br><span class="line">    fn = os.path.join(sys.path[<span class="number">0</span>],<span class="string">r&#x27;src/removeme.txt&#x27;</span>)</span><br><span class="line">    os.chmod(fn, <span class="number">0o444</span>)</span><br><span class="line">    os.remove(fn)</span><br><span class="line">    <span class="comment">#------------End-----------</span></span><br></pre></td></tr></table></figure><h2 id="第3关-批量复制文件夹中的所有文件">第3关 批量复制文件夹中的所有文件</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> os.path</span><br><span class="line"><span class="keyword">import</span> shutil</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">copyTree</span>(<span class="params">src, dst</span>):</span><br><span class="line">    <span class="comment">#-----------Begin----------</span></span><br><span class="line">    total=<span class="number">0</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">copy</span>(<span class="params">src,dst</span>):</span><br><span class="line">        <span class="keyword">nonlocal</span> total</span><br><span class="line">        <span class="keyword">for</span> item <span class="keyword">in</span> os.listdir(src):</span><br><span class="line">            srcPath=os.path.join(src,item)</span><br><span class="line">            dstPath=os.path.join(dst,item)</span><br><span class="line">            <span class="keyword">if</span> os.path.isdir(srcPath):</span><br><span class="line">                os.makedirs(dstPath)</span><br><span class="line">                total += <span class="number">1</span></span><br><span class="line">                copy(srcPath,dstPath)</span><br><span class="line">            <span class="keyword">elif</span> os.path.isfile(srcPath):</span><br><span class="line">                shutil.copyfile(srcPath,dstPath)</span><br><span class="line">                total += <span class="number">1</span></span><br><span class="line">    copy(src,dst)</span><br><span class="line">    <span class="keyword">return</span> total</span><br><span class="line">    <span class="comment">#------------End-----------</span></span><br></pre></td></tr></table></figure><h1 id="学习-python文件之二进制文件的读写">学习-Python文件之二进制文件的读写</h1><h2 id="第1关-学习-python文件之二进制文件的读写">第1关  学习-Python文件之二进制文件的读写</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 请在下面的 Begin-End 之间按照注释中给出的提示编写正确的代码</span></span><br><span class="line"><span class="comment">########## Begin ##########</span></span><br><span class="line"><span class="comment"># 使用 input 函数获取读取的字节数并打印读取的二进制文件的内容</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;src/step1/test.png&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    num = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line">    content = f.read(num)</span><br><span class="line">    <span class="built_in">print</span>(content)</span><br><span class="line"><span class="comment">########## End ##########</span></span><br></pre></td></tr></table></figure><h1 id="学习-python文件之文本文件的读取">学习-Python文件之文本文件的读取</h1><h2 id="第1关-学习-python文件之文本文件的读取">第1关 学习-Python文件之文本文件的读取</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 请在下面的Begin-End之间按照注释中给出的提示编写正确的代码</span></span><br><span class="line"><span class="comment">########## Begin ##########</span></span><br><span class="line"><span class="comment"># 使用 open 函数打开文件，打印文件的打开方式</span></span><br><span class="line">f=<span class="built_in">open</span>(<span class="string">&quot;src/step1/data.txt&quot;</span>,<span class="string">&quot;w&quot;</span>,encoding=<span class="string">&quot;utf8&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;文件打开方式为：<span class="subst">&#123;f.mode&#125;</span>&quot;</span>)</span><br><span class="line"><span class="comment">########## End ##########</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python实验六</title>
      <link href="/posts/3625625756/"/>
      <url>/posts/3625625756/</url>
      
        <content type="html"><![CDATA[<h1 id="python入门之类的其它特性">Python入门之类的其它特性</h1><h2 id="第1关-类的内建函数">第1关 类的内建函数</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> specialmethodtest</span><br><span class="line"></span><br><span class="line">sc = specialmethodtest.subClass()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 请在下面填入判断subClass是否为parentClass的子类的代码，并输出结果</span></span><br><span class="line"><span class="comment">#********** Begin *********#</span></span><br><span class="line">result=<span class="built_in">issubclass</span>(specialmethodtest.subClass,specialmethodtest.parentClass)</span><br><span class="line"><span class="built_in">print</span>(result)</span><br><span class="line"><span class="comment">#********** End **********#</span></span><br><span class="line"><span class="comment"># 请在下面填入判断sc是否为subClass实例的代码，并输出结果</span></span><br><span class="line"><span class="comment">#********** Begin *********#</span></span><br><span class="line">result=<span class="built_in">isinstance</span>(sc,specialmethodtest.subClass)</span><br><span class="line"><span class="built_in">print</span>(result)</span><br><span class="line"><span class="comment">#********** End **********#</span></span><br><span class="line"><span class="comment"># 请在下面填入判断实例sc是否包含一个属性为name的代码，并输出结果</span></span><br><span class="line"><span class="comment">#********** Begin *********#</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">hasattr</span>(sc,<span class="string">&#x27;name&#x27;</span>))</span><br><span class="line"><span class="comment">#********** End **********#</span></span><br><span class="line"><span class="comment"># 请在下面填入将sc的属性name的值设置为subclass的代码</span></span><br><span class="line"><span class="comment">#********** Begin *********#</span></span><br><span class="line"><span class="built_in">setattr</span>(sc,<span class="string">&#x27;name&#x27;</span>,<span class="string">&#x27;subclass&#x27;</span>)</span><br><span class="line"><span class="comment">#********** End **********#</span></span><br><span class="line"><span class="comment"># 请在下面填入获取sc的属性name的值的代码，并输出结果</span></span><br><span class="line"><span class="comment">#********** Begin *********#</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">getattr</span>(sc,<span class="string">&#x27;name&#x27;</span>))</span><br><span class="line"><span class="comment">#********** End **********#</span></span><br><span class="line"><span class="comment"># 请在下面填入调用subClass的父类的tell()方法的代码</span></span><br><span class="line"><span class="comment">#********** Begin *********#</span></span><br><span class="line">pc=specialmethodtest.parentClass()</span><br><span class="line">pc.tell()</span><br><span class="line"><span class="comment">#********** End **********#</span></span><br></pre></td></tr></table></figure><h2 id="第2关-类的私有化">第2关 类的私有化</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Bagtest</span><br><span class="line"></span><br><span class="line">price = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line">bag = Bagtest.Bag(price)</span><br><span class="line"><span class="comment"># 请在下面填入输出Bag类中变量__price的代码</span></span><br><span class="line"><span class="comment">#********** Begin *********#</span></span><br><span class="line"><span class="built_in">print</span>(bag._Bag__price)</span><br><span class="line"><span class="comment">#********** End **********#</span></span><br><span class="line"><span class="comment"># 请在下面填入输出Bag类中变量_price的代码</span></span><br><span class="line"><span class="comment">#********** Begin *********#</span></span><br><span class="line"><span class="built_in">print</span>(bag._price)</span><br><span class="line"><span class="comment">#********** End **********#</span></span><br></pre></td></tr></table></figure><h2 id="第3关-授权">第3关 授权</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">WrapClass</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,obj</span>):</span><br><span class="line">        <span class="variable language_">self</span>.__obj = obj</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>.__obj</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__repr__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;self.__obj&#x27;</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__str__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">str</span>(<span class="variable language_">self</span>.__obj)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 请在下面填入重写__getattr__（）实现授权的代码</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#********** Begin *********#</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__getattr__</span>(<span class="params">self,thelist</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">getattr</span>(<span class="variable language_">self</span>.__obj,thelist)</span><br><span class="line">    <span class="comment">#********** End **********#</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">thelist = []</span><br><span class="line">inputlist = <span class="built_in">input</span>()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> inputlist.split(<span class="string">&#x27;,&#x27;</span>):</span><br><span class="line">    result = i</span><br><span class="line">    thelist.append(result)</span><br><span class="line"><span class="comment"># 请在下面填入实例化类，并通过对象调用thelist，并输出thelist第三个元素的代码</span></span><br><span class="line"><span class="comment">#********** Begin *********#</span></span><br><span class="line">wc=WrapClass(thelist)</span><br><span class="line">wc_list=wc.get()</span><br><span class="line"><span class="built_in">print</span>(wc_list[<span class="number">2</span>])</span><br><span class="line"><span class="comment">#********** End **********#</span></span><br></pre></td></tr></table></figure><h2 id="第4关-对象的销毁">第4关 对象的销毁</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> delObjecttest</span><br><span class="line"><span class="comment"># 请在下面声明类delObject的实例，并将其引用赋给其它别名，然后调用del方法将其销毁</span></span><br><span class="line"><span class="comment">#********** Begin *********#</span></span><br><span class="line">test=delObjecttest.delObject()</span><br><span class="line">test2=test</span><br><span class="line"><span class="keyword">del</span>(test)</span><br><span class="line"></span><br><span class="line"><span class="comment">#********** End **********#</span></span><br></pre></td></tr></table></figure><h1 id="python基础-8-1-面向对象程序设计-类和对象">Python基础（8-1）面向对象程序设计——类和对象</h1><h2 id="第1关-tom猫原型-类">第1关 TOM猫原型 类</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">###############  begin： 完成cat类##################</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">cat</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="variable language_">self</span>.status=<span class="number">0</span></span><br><span class="line">        <span class="variable language_">self</span>.ph=<span class="number">100</span></span><br><span class="line">        <span class="variable language_">self</span>.money=<span class="number">0</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">play</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="variable language_">self</span>.ph -= <span class="number">5</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">eat</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="variable language_">self</span>.ph = <span class="number">100</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">work</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="variable language_">self</span>.money += <span class="number">20</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">show</span>(<span class="params">self</span>):                <span class="comment">#展示方法show</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;money=&#x27;</span>,<span class="variable language_">self</span>.money,<span class="string">&#x27;ph=&#x27;</span>,<span class="variable language_">self</span>.ph)</span><br><span class="line"><span class="comment">###############  end   ##############################</span></span><br></pre></td></tr></table></figure><h1 id="python入门之类的基础语法">Python入门之类的基础语法</h1><h2 id="第1关-类的声明与定义">第1关 类的声明与定义</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 请在下面填入定义Book类的代码</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#********** Begin *********#</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Book</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line"><span class="comment">#********** End *********#</span></span><br><span class="line">    <span class="comment"># &#x27;书籍类&#x27;</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,name,author,data,version</span>):</span><br><span class="line">        <span class="variable language_">self</span>.name = name</span><br><span class="line">        <span class="variable language_">self</span>.author = author</span><br><span class="line">        <span class="variable language_">self</span>.data = data</span><br><span class="line">        <span class="variable language_">self</span>.version = version</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">sell</span>(<span class="params">self,bookName,price</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;%s的销售价格为%d&quot;</span> %(bookName,price))</span><br></pre></td></tr></table></figure><h2 id="第2关-类的属性与实例化">第2关 类的属性与实例化</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">People</span>:</span><br><span class="line">    <span class="comment"># 请在下面填入声明两个变量名分别为name和country的字符串变量的代码</span></span><br><span class="line">    <span class="comment">#********** Begin *********#</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,name,country</span>):</span><br><span class="line">        <span class="variable language_">self</span>.name=name</span><br><span class="line">        <span class="variable language_">self</span>.country=country</span><br><span class="line">    <span class="comment">#********** End **********#</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">introduce</span>(<span class="params">self,name,country</span>):</span><br><span class="line">        <span class="variable language_">self</span>.name = name</span><br><span class="line">        <span class="variable language_">self</span>.country = country</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;%s来自%s&quot;</span> %(name,country))</span><br><span class="line">name = <span class="built_in">input</span>()</span><br><span class="line">country = <span class="built_in">input</span>()</span><br><span class="line"><span class="comment"># 请在下面填入对类People进行实例化的代码，对象为p</span></span><br><span class="line"><span class="comment">#********** Begin *********#</span></span><br><span class="line">p=People(name,country)</span><br><span class="line"><span class="comment">#********** End **********#</span></span><br><span class="line">p.introduce(name,country)</span><br></pre></td></tr></table></figure><h2 id="第3关-绑定与方法调用">第3关 绑定与方法调用</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> fractionSumtest</span><br><span class="line"></span><br><span class="line"><span class="comment"># 请在下面填入创建fractionSum的实例fs的代码</span></span><br><span class="line"><span class="comment">#********** Begin *********#</span></span><br><span class="line">fs=fractionSumtest.fractionSum()</span><br><span class="line"><span class="comment">#********** End **********#</span></span><br><span class="line">n = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line"><span class="keyword">if</span> n % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">    <span class="comment"># 请在下面填入调用fractionSumtest类中dcall方法的代码，计算当n为偶数时计算的和</span></span><br><span class="line">    <span class="comment">#********** Begin *********#</span></span><br><span class="line">    <span class="built_in">sum</span>=fs.dcall(fs.peven,n)</span><br><span class="line">    <span class="comment">#********** End **********#</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="comment"># 请在下面填入调用fractionSumtest类中dcall方法的代码，计算当n为奇数时计算的和</span></span><br><span class="line">    <span class="comment">#********** Begin *********#</span></span><br><span class="line">    <span class="built_in">sum</span>=fs.dcall(fs.podd,n)</span><br><span class="line">    <span class="comment">#********** End **********#</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">sum</span>)</span><br></pre></td></tr></table></figure><h2 id="第4关-静态方法与类方法">第4关 静态方法与类方法</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">BookSell</span>:</span><br><span class="line"></span><br><span class="line">    static_var = <span class="number">100</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">sell</span>(<span class="params">self,name,author,version,price</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;%s的销售价格为%d&quot;</span> %(name,<span class="built_in">int</span>(price)))</span><br><span class="line">    <span class="comment"># 请在下面填入函数修饰符将printStatic()方法声明为静态方法</span></span><br><span class="line">    <span class="comment">#********** Begin *********#</span></span><br><span class="line">    @<span class="built_in">staticmethod</span></span><br><span class="line">    <span class="comment">#********** End **********#</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">printStatic</span>():</span><br><span class="line">        <span class="built_in">print</span>(BookSell.static_var)</span><br><span class="line">    <span class="comment"># 请在下面填入函数修饰符将printVersion(cls)方法声明为类方法</span></span><br><span class="line">    <span class="comment">#********** Begin *********#</span></span><br><span class="line">    @<span class="built_in">classmethod</span></span><br><span class="line">    <span class="comment">#********** End **********#</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">printVersion</span>(<span class="params">cls</span>):</span><br><span class="line">        <span class="built_in">print</span>(cls)</span><br></pre></td></tr></table></figure><h2 id="第5关-类的导入">第5关 类的导入</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 请在下面输入调用DataChange模块中eightToten(self,p)的代码，以实现将输入的八进制转换成十进制输出</span></span><br><span class="line"><span class="comment">#********** Begin *********#</span></span><br><span class="line"><span class="keyword">from</span> DataChangetest <span class="keyword">import</span> DataChange</span><br><span class="line">n=<span class="built_in">input</span>()</span><br><span class="line">dc=DataChange()</span><br><span class="line">dc.eightToten(n)</span><br><span class="line"><span class="comment">#********** End **********#</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python实验五</title>
      <link href="/posts/3724763295/"/>
      <url>/posts/3724763295/</url>
      
        <content type="html"><![CDATA[<h1 id="经典函数实例">经典函数实例</h1><h2 id="第1关-递归函数-汉诺塔的魅力">第1关 递归函数 - 汉诺塔的魅力</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="comment"># 输入正整数n</span></span><br><span class="line">n = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line"><span class="comment"># 请在此添加代码，对输入的正整数n进行阶乘运算，并输出计算结果。</span></span><br><span class="line"><span class="comment">########## Begin ##########</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">factorial</span>(<span class="params">n</span>):</span><br><span class="line">    <span class="keyword">if</span> n == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> n * factorial(n - <span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(factorial(n))</span><br><span class="line"></span><br><span class="line"><span class="comment">########## End ##########</span></span><br></pre></td></tr></table></figure><h2 id="第2关-lambda-函数-匿名函数的使用">第2关 lambda 函数 - 匿名函数的使用</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="comment"># 请在此添加代码，使用lambda来创建匿名函数，能够判断输入的两个数值的大小</span></span><br><span class="line"><span class="comment">########## Begin ##########</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">MAXIMUM</span>(<span class="params">a, b</span>):</span><br><span class="line">    <span class="keyword">return</span> a <span class="keyword">if</span> a &gt; b <span class="keyword">else</span> b</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">MINIMUM</span>(<span class="params">a, b</span>):</span><br><span class="line">    <span class="keyword">return</span> a <span class="keyword">if</span> a &lt; b <span class="keyword">else</span> b</span><br><span class="line"><span class="comment">########## End ##########</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 输入两个正整数</span></span><br><span class="line">a = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line">b = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line"><span class="comment"># 输出较大的值和较小的值</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;较大的值是：%d&#x27;</span> % MAXIMUM(a, b))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;较小的值是：%d&#x27;</span> % MINIMUM(a, b))</span><br></pre></td></tr></table></figure><h2 id="第3关-map-reduce-映射与归约的思想">第3关 Map-Reduce - 映射与归约的思想</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="comment"># 输入一个正整数</span></span><br><span class="line">x = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line"><span class="comment"># 请在此添加代码，将输入的一个正整数分解质因数</span></span><br><span class="line"><span class="comment">########## Begin ##########</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">prime_factors</span>(<span class="params">n</span>):</span><br><span class="line">    result = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, n + <span class="number">1</span>):</span><br><span class="line">        <span class="keyword">while</span> n % i == <span class="number">0</span>:</span><br><span class="line">            result.append(i)</span><br><span class="line">            n = n // i</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line">result = prime_factors(x)</span><br><span class="line"></span><br><span class="line"><span class="comment">########## End ##########</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出结果，利用map()函数将结果按照规定字符串格式输出</span></span><br><span class="line"><span class="built_in">print</span>(x,<span class="string">&#x27;=&#x27;</span>,<span class="string">&#x27;*&#x27;</span>.join(<span class="built_in">map</span>(<span class="built_in">str</span>,result)))</span><br></pre></td></tr></table></figure><h1 id="函数调用">函数调用</h1><h2 id="第1关-内置函数-让你偷懒的工具">第1关 内置函数 - 让你偷懒的工具</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="comment"># 输入一个整数n</span></span><br><span class="line">n =  <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line"><span class="comment"># 请在此添加代码，对输入的整数进行判断，如果是素数则输出为True，不是素数则输出为False</span></span><br><span class="line"><span class="comment">########## Begin ##########</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">prime</span>(<span class="params">n</span>):</span><br><span class="line">    <span class="keyword">if</span> n &lt; <span class="number">2</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, n):</span><br><span class="line">        <span class="keyword">if</span> n % i == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"><span class="comment">########## End ##########</span></span><br><span class="line"><span class="built_in">print</span>(prime(n))</span><br></pre></td></tr></table></figure><h2 id="第2关-函数正确调用-得到想要的结果">第2关 函数正确调用 - 得到想要的结果</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="comment"># 输入数字字符串，并转换为数值列表</span></span><br><span class="line">a = <span class="built_in">input</span>()</span><br><span class="line">num1 = <span class="built_in">eval</span>(a)</span><br><span class="line">numbers = <span class="built_in">list</span>(num1)</span><br><span class="line"><span class="comment"># 请在此添加代码，对数值列表numbers实现从小到大排序</span></span><br><span class="line"><span class="comment">########## Begin ##########</span></span><br><span class="line">numbers.sort()</span><br><span class="line"><span class="built_in">print</span>(numbers)</span><br><span class="line"><span class="comment">########## End ##########</span></span><br></pre></td></tr></table></figure><h2 id="第3关-函数与函数调用-分清主次">第3关 函数与函数调用 - 分清主次</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span> pi <span class="keyword">as</span> PI</span><br><span class="line">n = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line"><span class="comment"># 请在此添加代码，实现圆的面积计算，并输出面积结果</span></span><br><span class="line"><span class="comment">########## Begin ##########</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">area</span>(<span class="params">n</span>):</span><br><span class="line">    <span class="keyword">return</span> PI * n * n</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;%.2f&quot;</span>%area(n))</span><br><span class="line"><span class="comment">########## End ##########</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python实验四</title>
      <link href="/posts/3286303450/"/>
      <url>/posts/3286303450/</url>
      
        <content type="html"><![CDATA[<h1 id="循环结构">循环结构</h1><h2 id="第1关-while-循环与-break-语句">第1关 While 循环与 break 语句</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">partcount = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line">electric = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line">count = <span class="number">0</span></span><br><span class="line"><span class="comment">#请在此添加代码，当count &lt; partcount时的while循环判断语句</span></span><br><span class="line"><span class="comment">#********** Begin *********#</span></span><br><span class="line"><span class="keyword">while</span> count &lt; partcount:</span><br><span class="line"><span class="comment">#********** End **********#</span></span><br><span class="line">    count += <span class="number">1</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;已加工零件个数:&quot;</span>,count)</span><br><span class="line">    <span class="keyword">if</span>(electric):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;停电了，停止加工&quot;</span>)</span><br><span class="line">        <span class="comment">#请在此添加代码，填入break语句</span></span><br><span class="line">        <span class="comment">#********** Begin *********#</span></span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">        <span class="comment">#********** End **********#</span></span><br></pre></td></tr></table></figure><h2 id="第2关-for-循环与-continue-语句">第2关 for 循环与 continue 语句</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">absencenum = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line">studentname = []</span><br><span class="line">inputlist = <span class="built_in">input</span>()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> inputlist.split(<span class="string">&#x27;,&#x27;</span>):</span><br><span class="line">   result = i</span><br><span class="line">   studentname.append(result)</span><br><span class="line">count = <span class="number">0</span></span><br><span class="line"><span class="comment">#请在此添加代码，填入循环遍历studentname列表的代码</span></span><br><span class="line"><span class="comment">#********** Begin *********#</span></span><br><span class="line"><span class="keyword">for</span> student <span class="keyword">in</span> studentname:</span><br><span class="line"><span class="comment">#********** End **********#</span></span><br><span class="line">    count += <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span>(count == absencenum):</span><br><span class="line">        <span class="comment">#在下面填入continue语句</span></span><br><span class="line">        <span class="comment">#********** Begin *********#</span></span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">        <span class="comment">#********** End **********#</span></span><br><span class="line">    <span class="built_in">print</span>(student,<span class="string">&quot;的试卷已阅&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="第3关-循环嵌套">第3关 循环嵌套</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">studentnum = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line"></span><br><span class="line"><span class="comment">#请在此添加代码，填入for循环遍历学生人数的代码</span></span><br><span class="line"><span class="comment">#********** Begin *********#</span></span><br><span class="line"><span class="keyword">for</span> student <span class="keyword">in</span> <span class="built_in">range</span>(studentnum):</span><br><span class="line"><span class="comment">#********** End **********#</span></span><br><span class="line">    <span class="built_in">sum</span> = <span class="number">0</span></span><br><span class="line">    subjectscore = []</span><br><span class="line">    inputlist = <span class="built_in">input</span>()</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> inputlist.split(<span class="string">&#x27;,&#x27;</span>):</span><br><span class="line">        result = i</span><br><span class="line">        subjectscore.append(result)</span><br><span class="line">    <span class="comment">#请在此添加代码，填入for循环遍历学生分数的代码</span></span><br><span class="line">    <span class="comment">#********** Begin *********#</span></span><br><span class="line">    <span class="keyword">for</span>  score <span class="keyword">in</span> subjectscore:</span><br><span class="line">    <span class="comment">#********** End **********#</span></span><br><span class="line">        score = <span class="built_in">int</span>(score)</span><br><span class="line">        <span class="built_in">sum</span> = <span class="built_in">sum</span> + score</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;第%d位同学的总分为:%d&quot;</span> %(student,<span class="built_in">sum</span>))</span><br></pre></td></tr></table></figure><h2 id="第4关-迭代器">第4关 迭代器</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">List</span> = []</span><br><span class="line">member = <span class="built_in">input</span>()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> member.split(<span class="string">&#x27;,&#x27;</span>):</span><br><span class="line">    result = i</span><br><span class="line">    <span class="type">List</span>.append(result)</span><br><span class="line"><span class="comment">#请在此添加代码，将List转换为迭代器的代码</span></span><br><span class="line"><span class="comment">#********** Begin *********#</span></span><br><span class="line">IterList=<span class="built_in">iter</span>(<span class="type">List</span>)</span><br><span class="line"><span class="comment">#********** End **********#</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment">#请在此添加代码，用next()函数遍历IterList的代码</span></span><br><span class="line">        <span class="comment">#********** Begin *********#</span></span><br><span class="line">        num=<span class="built_in">next</span>(IterList)</span><br><span class="line">        <span class="comment">#********** End **********#</span></span><br><span class="line">        result = <span class="built_in">int</span>(num) * <span class="number">2</span></span><br><span class="line">        <span class="built_in">print</span>(result)</span><br><span class="line">    <span class="keyword">except</span> StopIteration:</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><h1 id="顺序与选择结构">顺序与选择结构</h1><h2 id="第1关-顺序结构">第1关 顺序结构</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">changeOne = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line">changeTwo = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line">plus = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line"></span><br><span class="line"><span class="comment"># 请在此添加代码，交换changeOne、changeTwo的值，然后计算changeOne、plus的和result的值</span></span><br><span class="line"><span class="comment">########## Begin ##########</span></span><br><span class="line">changeOne,changeTwo=changeTwo,changeOne</span><br><span class="line">result=changeOne+plus</span><br><span class="line"><span class="comment">########## End ##########</span></span><br><span class="line"><span class="built_in">print</span>(result)</span><br></pre></td></tr></table></figure><h2 id="第2关-选择结构：if-else">第2关 选择结构：if-else</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">workYear = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line"><span class="comment"># 请在下面填入如果workYear &lt; 5的判断语句</span></span><br><span class="line"><span class="comment">########## Begin ##########</span></span><br><span class="line"><span class="keyword">if</span> workYear&lt;<span class="number">5</span>:</span><br><span class="line"><span class="comment">########## End ##########</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;工资涨幅为0&quot;</span>)</span><br><span class="line"><span class="comment"># 请在下面填入如果workYear &gt;= 5 and workYear &lt; 10的判断语句</span></span><br><span class="line"><span class="comment">########## Begin ##########</span></span><br><span class="line"><span class="keyword">elif</span> workYear &gt;= <span class="number">5</span> <span class="keyword">and</span> workYear &lt; <span class="number">10</span>:</span><br><span class="line"><span class="comment">########## End ##########</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;工资涨幅为5%&quot;</span>)</span><br><span class="line"><span class="comment"># 请在下面填入如果workYear &gt;= 10 and workYear &lt; 15的判断语句</span></span><br><span class="line"><span class="comment">########## Begin ##########</span></span><br><span class="line"><span class="keyword">elif</span> workYear &gt;= <span class="number">10</span> <span class="keyword">and</span> workYear &lt; <span class="number">15</span>:</span><br><span class="line"><span class="comment">########## End ##########</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;工资涨幅为10%&quot;</span>)</span><br><span class="line"><span class="comment"># 请在下面填入当上述条件判断都为假时的判断语句</span></span><br><span class="line"><span class="comment">########## Begin ##########</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="comment">########## End ##########</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;工资涨幅为15%&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="第3关-选择结构-：-三元操作符">第3关 选择结构 ： 三元操作符</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">jimscore = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line">jerryscore = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line"><span class="comment"># 请在此添加代码，判断若jim的得分jimscore更高，则赢家为jim，若jerry的得分jerryscore更高，则赢家为jerry，并输出赢家的名字</span></span><br><span class="line"><span class="comment">########## Begin ##########</span></span><br><span class="line">winner = <span class="string">&quot;jim&quot;</span> <span class="keyword">if</span> jimscore &gt; jerryscore <span class="keyword">else</span> <span class="string">&quot;jerry&quot;</span></span><br><span class="line"><span class="comment">########## End ##########</span></span><br><span class="line"><span class="built_in">print</span>(winner)</span><br></pre></td></tr></table></figure><h1 id="python分支结构训练">Python分支结构训练</h1><h2 id="第1关-三位水仙花数">第1关 三位水仙花数</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">n=<span class="built_in">input</span>()</span><br><span class="line">num=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> n:</span><br><span class="line">    num+=<span class="built_in">int</span>(i)**<span class="built_in">len</span>(n)</span><br><span class="line"><span class="keyword">if</span> num==<span class="built_in">int</span>(n):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;True&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;False&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="第2关-判断闰年">第2关 判断闰年</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">###begin</span></span><br><span class="line"> <span class="comment">#判断闰年</span></span><br><span class="line">year=<span class="built_in">input</span>()</span><br><span class="line">year=<span class="built_in">int</span>(year)</span><br><span class="line"><span class="keyword">if</span> year%<span class="number">4</span>==<span class="number">0</span> <span class="keyword">and</span> year%<span class="number">100</span>!=<span class="number">0</span> <span class="keyword">or</span> year%<span class="number">400</span>==<span class="number">0</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;True&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;False&quot;</span>)</span><br><span class="line"><span class="comment">###end</span></span><br></pre></td></tr></table></figure><h2 id="第3关-考试成绩统计">第3关  考试成绩统计</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">score=<span class="built_in">input</span>()</span><br><span class="line">score=score.split(<span class="string">&quot;,&quot;</span>)</span><br><span class="line">score=[<span class="built_in">int</span>(i) <span class="keyword">for</span> i <span class="keyword">in</span> score]</span><br><span class="line">result=&#123;<span class="string">&quot;优秀&quot;</span>:<span class="number">0</span>,<span class="string">&quot;良&quot;</span>:<span class="number">0</span>,<span class="string">&quot;中&quot;</span>:<span class="number">0</span>,<span class="string">&quot;及格&quot;</span>:<span class="number">0</span>,<span class="string">&quot;不及格&quot;</span>:<span class="number">0</span>&#125;</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> score:</span><br><span class="line">    <span class="keyword">if</span> i&gt;=<span class="number">90</span>:</span><br><span class="line">        result[<span class="string">&quot;优秀&quot;</span>]+=<span class="number">1</span></span><br><span class="line">    <span class="keyword">elif</span> i&gt;=<span class="number">80</span>:</span><br><span class="line">        result[<span class="string">&quot;良&quot;</span>]+=<span class="number">1</span></span><br><span class="line">    <span class="keyword">elif</span> i&gt;=<span class="number">70</span>:</span><br><span class="line">        result[<span class="string">&quot;中&quot;</span>]+=<span class="number">1</span></span><br><span class="line">    <span class="keyword">elif</span> i&gt;=<span class="number">60</span>:</span><br><span class="line">        result[<span class="string">&quot;及格&quot;</span>]+=<span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        result[<span class="string">&quot;不及格&quot;</span>]+=<span class="number">1</span></span><br><span class="line"><span class="built_in">print</span>(result)</span><br></pre></td></tr></table></figure><h2 id="第4关-简单的数字排序">第4关 简单的数字排序</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">###begin</span></span><br><span class="line">a,b,c=<span class="built_in">map</span>(<span class="built_in">int</span>,<span class="built_in">input</span>().split())</span><br><span class="line"><span class="keyword">if</span> a&gt;b:</span><br><span class="line">    a,b=b,a</span><br><span class="line"><span class="keyword">if</span> a&gt;c:</span><br><span class="line">    a,c=c,a</span><br><span class="line"><span class="keyword">if</span> b&gt;c:</span><br><span class="line">    b,c=c,b</span><br><span class="line"><span class="built_in">print</span>(a,b,c)</span><br><span class="line"><span class="comment">###end</span></span><br></pre></td></tr></table></figure><h2 id="第5关-求一元二次方程的解">第5关 求一元二次方程的解</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">###begin</span></span><br><span class="line">a,b,c=<span class="built_in">map</span>(<span class="built_in">int</span>,<span class="built_in">input</span>().split())</span><br><span class="line"><span class="keyword">if</span> a==<span class="number">0</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;不是二次方程&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    d=b*b-<span class="number">4</span>*a*c</span><br><span class="line">    <span class="keyword">if</span> d&lt;<span class="number">0</span>:</span><br><span class="line">        x1=-b/(<span class="number">2</span>*a)</span><br><span class="line">        x2=(-d)**<span class="number">0.5</span>/(<span class="number">2</span>*a)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;虚根1：%.2f+%.2fj\n虚根2：%.2f-%.2fj&#x27;</span>%(x1,x2,x1,x2))</span><br><span class="line">    <span class="keyword">elif</span> d==<span class="number">0</span>:</span><br><span class="line">        x=-b/(<span class="number">2</span>*a)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;有两个相等的实根：%.2f&quot;</span>%x)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        x1=(-b+d**<span class="number">0.5</span>)/(<span class="number">2</span>*a)</span><br><span class="line">        x2=(-b-d**<span class="number">0.5</span>)/(<span class="number">2</span>*a)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;实根1：%.2f\n实根2：%.2f&quot;</span>%(x1,x2))</span><br><span class="line"><span class="comment">###end</span></span><br></pre></td></tr></table></figure><h2 id="第6关-输入一个年份和月份-打印出该月份有多少天">第6关 输入一个年份和月份，打印出该月份有多少天。</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">year,month=<span class="built_in">map</span>(<span class="built_in">int</span>,<span class="built_in">input</span>().split())</span><br><span class="line"><span class="keyword">if</span> month <span class="keyword">in</span> [<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">10</span>,<span class="number">12</span>]:</span><br><span class="line">    <span class="built_in">print</span>(<span class="number">31</span>)</span><br><span class="line"><span class="keyword">elif</span> month <span class="keyword">in</span> [<span class="number">4</span>,<span class="number">6</span>,<span class="number">9</span>,<span class="number">11</span>]:</span><br><span class="line">    <span class="built_in">print</span>(<span class="number">30</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">if</span> year%<span class="number">4</span>==<span class="number">0</span> <span class="keyword">and</span> year%<span class="number">100</span>!=<span class="number">0</span> <span class="keyword">or</span> year%<span class="number">400</span>==<span class="number">0</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="number">29</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="number">28</span>)</span><br></pre></td></tr></table></figure><h1 id="字符串处理">字符串处理</h1><h2 id="第1关-字符串的拼接：名字的组成">第1关 字符串的拼接：名字的组成</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 存放姓氏和名字的变量</span></span><br><span class="line">first_name = <span class="built_in">input</span>()</span><br><span class="line">last_name = <span class="built_in">input</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 请在下面添加字符串拼接的代码，完成相应功能</span></span><br><span class="line"><span class="comment">########## Begin ##########</span></span><br><span class="line">full_name=<span class="string">f&quot;<span class="subst">&#123;first_name&#125;</span> <span class="subst">&#123;last_name&#125;</span>&quot;</span></span><br><span class="line"><span class="built_in">print</span>(full_name)</span><br><span class="line"></span><br><span class="line"><span class="comment">########## End ##########</span></span><br></pre></td></tr></table></figure><h2 id="第2关-字符转换">第2关 字符转换</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="comment"># 获取待处理的源字符串</span></span><br><span class="line">source_string = <span class="built_in">input</span>()</span><br><span class="line"><span class="comment"># 请在下面添加字符串转换的代码</span></span><br><span class="line"><span class="comment">########## Begin ##########</span></span><br><span class="line">title_string=source_string.title()</span><br><span class="line"><span class="built_in">print</span>(title_string.strip())</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(source_string.strip()))</span><br><span class="line"><span class="comment">########## End ##########</span></span><br></pre></td></tr></table></figure><h2 id="第3关-字符串查找与替换">第3关 字符串查找与替换</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding = utf-8</span></span><br><span class="line">source_string = <span class="built_in">input</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 请在下面添加代码</span></span><br><span class="line"><span class="comment">########## Begin ##########</span></span><br><span class="line"><span class="built_in">print</span>(source_string.find(<span class="string">&#x27;day&#x27;</span>))</span><br><span class="line">new_string=source_string.replace(<span class="string">&#x27;day&#x27;</span>,<span class="string">&#x27;time&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(new_string)</span><br><span class="line"><span class="built_in">print</span>(new_string.split(<span class="string">&#x27; &#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">########## End ##########</span></span><br></pre></td></tr></table></figure><h1 id="python字符串训练">Python字符串训练</h1><h2 id="第1关-字符串格式化">第1关 字符串格式化</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">###begin</span></span><br><span class="line"><span class="built_in">str</span>=<span class="built_in">input</span>()</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(<span class="built_in">str</span>))</span><br><span class="line">num=<span class="built_in">int</span>(<span class="built_in">str</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;%d %o %x&quot;</span>%(num,num,num))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&#123;:.6f&#125; &#123;:.6e&#125;&quot;</span>.<span class="built_in">format</span>(num,num))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;The number &#123;&#125; in hex is: &#123;&#125;, the number &#123;&#125; in oct is &#123;&#125;&quot;</span>.<span class="built_in">format</span>(num,<span class="built_in">hex</span>(num),num,<span class="built_in">oct</span>(num)))</span><br><span class="line"></span><br><span class="line"><span class="comment">###end</span></span><br></pre></td></tr></table></figure><h2 id="第2关-字符串常用方法">第2关 字符串常用方法</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">str1 = <span class="string">&quot;apple,pear,peach,banana,pear&quot;</span></span><br><span class="line">lst1 = [<span class="string">&quot;apple&quot;</span>,<span class="string">&quot;pear&quot;</span>, <span class="string">&quot;peach&quot;</span>, <span class="string">&quot;banana&quot;</span>, <span class="string">&quot;pear&quot;</span>]</span><br><span class="line"><span class="comment">###begin</span></span><br><span class="line"><span class="built_in">print</span>(str1.find(<span class="string">&#x27;pear&#x27;</span>),str1.rfind(<span class="string">&#x27;pear&#x27;</span>),str1.find(<span class="string">&#x27;p&#x27;</span>),str1.count(<span class="string">&#x27;p&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(str1.split(<span class="string">&#x27;,&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(str1.split(<span class="string">&#x27; &#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(str1.partition(<span class="string">&#x27;,&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(str1.partition(<span class="string">&#x27; &#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;:&#x27;</span>.join(lst1))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;?&#x27;</span>.join(lst1))</span><br><span class="line"><span class="comment">###end</span></span><br></pre></td></tr></table></figure><h2 id="第3关-文本规范化">第3关 文本规范化</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">text = <span class="string">&#x27;&#x27;&#x27; abcdef 姓名：张三</span></span><br><span class="line"><span class="string">年龄：39</span></span><br><span class="line"><span class="string">性别男</span></span><br><span class="line"><span class="string">职业  学生</span></span><br><span class="line"><span class="string">籍贯：  地球 &#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">###begin</span></span><br><span class="line">text = text.strip(<span class="string">&#x27; abcdef&#x27;</span>)</span><br><span class="line">text = text.replace(<span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">text = text.replace(<span class="string">&#x27;：&#x27;</span>, <span class="string">&#x27;:&#x27;</span>)</span><br><span class="line">text = text.replace(<span class="string">&#x27;姓名:&#x27;</span>, <span class="string">&#x27;姓名：&#x27;</span>)</span><br><span class="line">text = text.replace(<span class="string">&#x27;年龄:&#x27;</span>, <span class="string">&#x27;年龄：&#x27;</span>)</span><br><span class="line">text = text.replace(<span class="string">&#x27;性别&#x27;</span>, <span class="string">&#x27;性别：&#x27;</span>)</span><br><span class="line">text = text.replace(<span class="string">&#x27;职业&#x27;</span>, <span class="string">&#x27;职业：&#x27;</span>)</span><br><span class="line">text = text.replace(<span class="string">&#x27;籍贯:&#x27;</span>, <span class="string">&#x27;籍贯：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(text)</span><br><span class="line"></span><br><span class="line"><span class="comment">###end</span></span><br></pre></td></tr></table></figure><h2 id="第4关-密码强度判断">第4关 密码强度判断</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> string</span><br><span class="line">password = <span class="built_in">input</span>()</span><br><span class="line">digits = string.digits</span><br><span class="line">lowercase = string.ascii_lowercase</span><br><span class="line">uppercase = string.ascii_uppercase</span><br><span class="line">special = <span class="string">&quot;&#x27;,.!;?&lt;&gt;&#x27;&quot;</span></span><br><span class="line">flag_digits = <span class="literal">False</span></span><br><span class="line">flag_lowercase = <span class="literal">False</span></span><br><span class="line">flag_uppercase = <span class="literal">False</span></span><br><span class="line">flag_special = <span class="literal">False</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> password:</span><br><span class="line">    <span class="keyword">if</span> i <span class="keyword">in</span> digits:</span><br><span class="line">        flag_digits = <span class="literal">True</span></span><br><span class="line">    <span class="keyword">if</span> i <span class="keyword">in</span> lowercase:</span><br><span class="line">        flag_lowercase = <span class="literal">True</span></span><br><span class="line">    <span class="keyword">if</span> i <span class="keyword">in</span> uppercase:</span><br><span class="line">        flag_uppercase = <span class="literal">True</span></span><br><span class="line">    <span class="keyword">if</span> i <span class="keyword">in</span> special:</span><br><span class="line">        flag_special = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(password) &lt; <span class="number">6</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;密码过于简单。&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">if</span> (flag_digits + flag_lowercase + flag_uppercase + flag_special) == <span class="number">1</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;密码强度弱。&quot;</span>)</span><br><span class="line">    <span class="keyword">elif</span> (flag_digits + flag_lowercase + flag_uppercase + flag_special) == <span class="number">2</span> <span class="keyword">or</span> (flag_digits + flag_lowercase + flag_uppercase + flag_special) == <span class="number">3</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;密码强度中。&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;密码强度强。&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="第5关-句子倒序">第5关 句子倒序</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">###begin</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">reverse_sentence</span>(<span class="params">sentence</span>):</span><br><span class="line">    sentence = sentence.strip()</span><br><span class="line">    <span class="keyword">if</span> sentence[-<span class="number">1</span>] <span class="keyword">in</span> [<span class="string">&#x27;.&#x27;</span>, <span class="string">&#x27;!&#x27;</span>, <span class="string">&#x27;?&#x27;</span>]:</span><br><span class="line">        symbol=sentence[-<span class="number">1</span>]</span><br><span class="line">        sentence = sentence[:-<span class="number">1</span>]</span><br><span class="line">    words = sentence.split()</span><br><span class="line">    words.reverse()</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27; &#x27;</span>.join(words)+symbol</span><br><span class="line">sentence = <span class="built_in">input</span>()</span><br><span class="line"><span class="built_in">print</span>(reverse_sentence(sentence))</span><br><span class="line"></span><br><span class="line"><span class="comment">###end</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python实验三</title>
      <link href="/posts/2402512580/"/>
      <url>/posts/2402512580/</url>
      
        <content type="html"><![CDATA[<h1 id="python循环训练">Python循环训练</h1><h2 id="第1关-正整数n以内累加求和">第1关 正整数n以内累加求和</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">###begin</span></span><br><span class="line">n=<span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line">sum1=<span class="number">0</span></span><br><span class="line">sum2=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,n+<span class="number">1</span>):</span><br><span class="line">    <span class="keyword">if</span> i%<span class="number">2</span>!=<span class="number">0</span>:</span><br><span class="line">        sum1+=i</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        sum2+=i</span><br><span class="line"><span class="built_in">print</span>(sum1,sum2)</span><br><span class="line"></span><br><span class="line"><span class="comment">###end</span></span><br></pre></td></tr></table></figure><h2 id="第2关-整数的条件判断">第2关 整数的条件判断</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">###begin</span></span><br><span class="line">list1=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">101</span>):</span><br><span class="line">    <span class="keyword">if</span> i%<span class="number">7</span>==<span class="number">0</span> <span class="keyword">and</span> i%<span class="number">5</span>!=<span class="number">0</span>:</span><br><span class="line">        list1.append(i)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;,&quot;</span>.join(<span class="built_in">map</span>(<span class="built_in">str</span>,list1)))</span><br><span class="line"></span><br><span class="line">list2=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">501</span>):</span><br><span class="line">    <span class="keyword">if</span> i%<span class="number">17</span>==<span class="number">0</span>:</span><br><span class="line">        list2.append(i)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">max</span>(list2))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">###end</span></span><br></pre></td></tr></table></figure><h2 id="第3关-素数判断">第3关 素数判断</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">###begin</span></span><br><span class="line">x = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line"><span class="keyword">if</span> x &lt; <span class="number">2</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;False&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, x):</span><br><span class="line">        <span class="keyword">if</span> x % i == <span class="number">0</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;False&#x27;</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;True&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">###end</span></span><br></pre></td></tr></table></figure><h2 id="第4关-循环之序列解包">第4关 循环之序列解包</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">###begin</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">print_combinations</span>(<span class="params">string</span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(string)):</span><br><span class="line">        <span class="built_in">print</span>(string[i], [char <span class="keyword">for</span> char <span class="keyword">in</span> string[i+<span class="number">1</span>:]])</span><br><span class="line"></span><br><span class="line"><span class="comment"># Test input</span></span><br><span class="line"><span class="built_in">str</span>=<span class="built_in">input</span>()</span><br><span class="line"><span class="comment"># Output format</span></span><br><span class="line">print_combinations(<span class="built_in">str</span>)</span><br><span class="line"><span class="comment">###end</span></span><br></pre></td></tr></table></figure><h2 id="第5关-求n以内的所有自幂数">第5关 求n以内的所有自幂数</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">###begin</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">Judgement</span>(<span class="params">num</span>):</span><br><span class="line">    str_num=<span class="built_in">str</span>(num)</span><br><span class="line">    num_digits=<span class="built_in">len</span>(str_num)</span><br><span class="line">    sum_of_powers = <span class="built_in">sum</span>(<span class="built_in">int</span>(digit) ** num_digits <span class="keyword">for</span> digit <span class="keyword">in</span> str_num)</span><br><span class="line">    <span class="keyword">return</span> sum_of_powers == num</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">Find</span>(<span class="params">n</span>):</span><br><span class="line">    list1=[]</span><br><span class="line">    <span class="keyword">for</span> num <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,n+<span class="number">1</span>):</span><br><span class="line">        <span class="keyword">if</span> Judgement(num):</span><br><span class="line">            list1.append(num)</span><br><span class="line">    <span class="keyword">return</span> list1</span><br><span class="line">n=<span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line">list1=Find(n)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot; &quot;</span>.join(<span class="built_in">map</span>(<span class="built_in">str</span>,list1)))</span><br><span class="line"><span class="comment">###end</span></span><br></pre></td></tr></table></figure><h2 id="第6关-打印九九乘法表">第6关 打印九九乘法表</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">###begin</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">10</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,i+<span class="number">1</span>):</span><br><span class="line">        <span class="built_in">str</span> = <span class="string">f&quot;<span class="subst">&#123;i&#125;</span>*<span class="subst">&#123;j&#125;</span>=<span class="subst">&#123;i*j&#125;</span>&quot;</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;<span class="built_in">str</span>:<span class="number">7</span>&#125;</span>&quot;</span>, end=<span class="string">&quot; &quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment">###end</span></span><br></pre></td></tr></table></figure><h2 id="第7关-数字组合">第7关 数字组合</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">###begin</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">5</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">5</span>):</span><br><span class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">5</span>):</span><br><span class="line">            <span class="keyword">if</span> i!=j <span class="keyword">and</span> j!=k <span class="keyword">and</span> i!=k:</span><br><span class="line">                <span class="built_in">print</span>(i*<span class="number">100</span>+j*<span class="number">10</span>+k)</span><br><span class="line"></span><br><span class="line"><span class="comment">###end</span></span><br></pre></td></tr></table></figure><h2 id="第8关-阶乘之和">第8关 阶乘之和</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">###begin</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">factorial</span>(<span class="params">n</span>):</span><br><span class="line">    <span class="keyword">if</span> n == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> n * factorial(n-<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">n=<span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line"><span class="built_in">sum</span>=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,n+<span class="number">1</span>):</span><br><span class="line">    <span class="built_in">sum</span>+=factorial(i)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">sum</span>)</span><br><span class="line"><span class="comment">###end</span></span><br></pre></td></tr></table></figure><h2 id="第9关-因式分解">第9关 因式分解</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">####begin</span></span><br><span class="line">n=<span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line">factors=[]</span><br><span class="line">i=<span class="number">2</span></span><br><span class="line"><span class="keyword">while</span> i&lt;=n:</span><br><span class="line">    <span class="keyword">if</span> n%i==<span class="number">0</span>:</span><br><span class="line">        factors.append(i)</span><br><span class="line">        n=n//i</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        i+=<span class="number">1</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;*&quot;</span>.join(<span class="built_in">map</span>(<span class="built_in">str</span>,factors)))</span><br><span class="line"></span><br><span class="line"><span class="comment">####end</span></span><br></pre></td></tr></table></figure><h1 id="元组与字典">元组与字典</h1><h2 id="第1关-元组的使用：这份菜单能修改吗？">第1关 元组的使用：这份菜单能修改吗？</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="comment"># 创建并初始化menu_list列表</span></span><br><span class="line">menu_list = []</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        food = <span class="built_in">input</span>()</span><br><span class="line">        menu_list.append(food)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 请在此添加代码，对menu_list进行元组转换以及元组计算等操作，并打印输出元组及元组最大的元素</span></span><br><span class="line"><span class="comment">###### Begin ######</span></span><br><span class="line">menu=<span class="built_in">tuple</span>(menu_list)</span><br><span class="line"><span class="built_in">print</span>(menu)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">max</span>(menu))</span><br><span class="line"></span><br><span class="line"><span class="comment">#######  End #######</span></span><br></pre></td></tr></table></figure><h2 id="第2关-字典的使用：这份菜单可以修改">第2关 字典的使用：这份菜单可以修改</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="comment"># 创建并初始化menu_dict字典</span></span><br><span class="line">menu_dict = &#123;&#125;</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        food = <span class="built_in">input</span>()</span><br><span class="line">        price = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line">        menu_dict[food]= price</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"><span class="comment"># 请在此添加代码，实现对menu_dict的添加、查找、修改等操作，并打印输出相应的值</span></span><br><span class="line"><span class="comment">########## Begin ##########</span></span><br><span class="line">menu_dict[<span class="string">&#x27;lamb&#x27;</span>]=<span class="number">50</span></span><br><span class="line"><span class="built_in">print</span>(menu_dict[<span class="string">&#x27;fish&#x27;</span>])</span><br><span class="line">menu_dict[<span class="string">&#x27;fish&#x27;</span>]=<span class="number">100</span></span><br><span class="line"><span class="keyword">del</span> menu_dict[<span class="string">&#x27;noodles&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(menu_dict)</span><br><span class="line"></span><br><span class="line"><span class="comment">########## End ##########</span></span><br></pre></td></tr></table></figure><h2 id="第3关-字典的遍历：菜名和价格的展示">第3关  字典的遍历：菜名和价格的展示</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建并初始化menu_dict字典</span></span><br><span class="line">menu_dict = &#123;&#125;</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        food = <span class="built_in">input</span>()</span><br><span class="line">        price = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line">        menu_dict[food]= price</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 请在此添加代码，实现对menu_dict的遍历操作并打印输出键与值</span></span><br><span class="line"><span class="comment">########## Begin ##########</span></span><br><span class="line"><span class="keyword">for</span> key <span class="keyword">in</span> menu_dict.keys():</span><br><span class="line">    <span class="built_in">print</span>(key)</span><br><span class="line"><span class="keyword">for</span> value <span class="keyword">in</span> menu_dict.values():</span><br><span class="line">    <span class="built_in">print</span>(value)</span><br><span class="line"></span><br><span class="line"><span class="comment">########## End ##########</span></span><br></pre></td></tr></table></figure><h2 id="第4关-嵌套-菜单的信息量好大">第4关 嵌套 - 菜单的信息量好大</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="comment"># 初始化menu1字典，输入两道菜的价格</span></span><br><span class="line">menu1 = &#123;&#125;</span><br><span class="line">menu1[<span class="string">&#x27;fish&#x27;</span>]=<span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line">menu1[<span class="string">&#x27;pork&#x27;</span>]=<span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line"></span><br><span class="line"><span class="comment"># menu_total列表现在只包含menu1字典</span></span><br><span class="line">menu_total = [menu1]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 请在此添加代码，实现编程要求</span></span><br><span class="line"><span class="comment">########## Begin ##########</span></span><br><span class="line">menu2 = menu1.copy()</span><br><span class="line"><span class="keyword">for</span> value <span class="keyword">in</span> menu2:</span><br><span class="line">    menu2[value] = menu2[value]*<span class="number">2</span></span><br><span class="line">menu_total.append(menu2)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">########## End ##########</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出menu_total列表</span></span><br><span class="line"><span class="built_in">print</span>(menu_total)</span><br></pre></td></tr></table></figure><h1 id="python基础-5-2-列表-元组-字典-集合-元组">python基础(5-2)列表、元组、字典、集合——元组</h1><h2 id="第1关-列表转元组">第1关 列表转元组</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#此部分为读入测试数据到list1中</span></span><br><span class="line">list1 = []</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        item= <span class="built_in">input</span>()</span><br><span class="line">        list1.append(item)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="comment">######### Begin ##########</span></span><br><span class="line"><span class="comment">#将读入的list1转换为tup并整体打印</span></span><br><span class="line">list1=<span class="built_in">tuple</span>(list1)</span><br><span class="line"><span class="built_in">print</span>(list1)</span><br><span class="line"></span><br><span class="line"><span class="comment">##########  End  #########</span></span><br></pre></td></tr></table></figure><h2 id="第2关-字符串按单词转元组">第2关 字符串按单词转元组</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#此部分为读入测试字符串到变量s中</span></span><br><span class="line">s= <span class="built_in">input</span>()</span><br><span class="line"><span class="comment">##########  Begin  #########</span></span><br><span class="line"><span class="comment">#将读入的s按单词转换为tup并整体打印</span></span><br><span class="line">s=s.split()</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">tuple</span>(s))</span><br><span class="line"></span><br><span class="line"><span class="comment">##########  End  #########</span></span><br></pre></td></tr></table></figure><h2 id="第3关-在元组中找最大值">第3关 在元组中找最大值</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#此部分为读入测试数据到list1中</span></span><br><span class="line">list1 = []</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        n= <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line">        list1.append(n)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"><span class="comment">##########  Begin  #########</span></span><br><span class="line"><span class="comment">#（1）定义元组，将list1中元素按顺序保存在元组中，输出整个元组</span></span><br><span class="line">list1=<span class="built_in">tuple</span>(list1)</span><br><span class="line"><span class="built_in">print</span>(list1)</span><br><span class="line"><span class="comment">#（2）查找元组中最大值，输出最大值和对应下标</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">max</span>(list1),list1.index(<span class="built_in">max</span>(list1)))</span><br><span class="line"></span><br><span class="line"><span class="comment">##########  End  #########</span></span><br></pre></td></tr></table></figure><h2 id="第4关-盘点订单">第4关 盘点订单</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#此部分为读入订单测试数据到list1中</span></span><br><span class="line">list1 = []</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        order= <span class="built_in">input</span>()</span><br><span class="line">        list1.append(order)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##########  Begin  #########</span></span><br><span class="line"><span class="comment">#（1）定义元组，将list1中元素按顺序去掉重复值并保存在元组中，输出整个元组</span></span><br><span class="line">list2=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> list1:</span><br><span class="line">    <span class="keyword">if</span> i <span class="keyword">not</span> <span class="keyword">in</span> list2:</span><br><span class="line">        list2.append(i)</span><br><span class="line">list3=<span class="built_in">tuple</span>(list2)</span><br><span class="line"><span class="built_in">print</span>(list3)</span><br><span class="line"><span class="comment">#（2）查找最大当日订单数，并输出年月日：格式如下：180101</span></span><br><span class="line">date_dict=&#123;&#125;</span><br><span class="line"><span class="keyword">for</span> date <span class="keyword">in</span> list2:</span><br><span class="line">    date=date[:<span class="number">6</span>]</span><br><span class="line">    <span class="keyword">if</span> date <span class="keyword">in</span> date_dict:</span><br><span class="line">        date_dict[date]+=<span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        date_dict[date]=<span class="number">1</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">max</span>(date_dict,key=date_dict.get))</span><br><span class="line"><span class="comment">##########  End  #########</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python实验二</title>
      <link href="/posts/3446667465/"/>
      <url>/posts/3446667465/</url>
      
        <content type="html"><![CDATA[<h1 id="学习-python列表之列表应用之降序排序">学习-Python列表之列表应用之降序排序</h1><h2 id="第1关">第1关</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">任务：给定一个列表，使用 for 循环来复制它，对复制后的列表进行倒序排序。打印原列表和排序后的列表。</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">list1 = [<span class="number">6</span>,<span class="number">9</span>,<span class="number">12</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">8</span>,<span class="number">1</span>,<span class="number">8</span>,<span class="number">131</span>,<span class="number">58</span>,<span class="number">1</span>,<span class="number">581</span>,<span class="number">31</span>,<span class="number">8</span>,<span class="number">46</span>,<span class="number">13</span>,<span class="number">8</span>,<span class="number">4</span>,<span class="number">613</span>,<span class="number">30</span>,<span class="number">546</span>,<span class="number">0</span>,<span class="number">68</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">16</span>,<span class="number">99</span>,<span class="number">61</span>,-<span class="number">102</span>,-<span class="number">290</span>,<span class="number">116.5</span>,<span class="number">165</span>,-<span class="number">2.3</span>]</span><br><span class="line"><span class="comment"># 请在下面的Begin-End之间按照注释中给出的提示编写正确的代码</span></span><br><span class="line"><span class="comment">##########Begin##########</span></span><br><span class="line"><span class="comment"># 使用for循环复制列表，对复制后的列表进行倒序排序，并打印原列表和排序后的列表</span></span><br><span class="line"></span><br><span class="line">list2=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> list1:</span><br><span class="line">    list2.append(i)</span><br><span class="line">list2.sort()</span><br><span class="line">list2.reverse()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;原列表为：&quot;</span>,end=<span class="string">&quot;&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(list1)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;复制后的列表为：&quot;</span>,end=<span class="string">&quot;&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(list2)</span><br><span class="line"></span><br><span class="line"><span class="comment">##########End##########</span></span><br></pre></td></tr></table></figure><h1 id="学习-python列表之列表推导式">学习-Python列表之列表推导式</h1><h2 id="第1关">第1关</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">任务：给定一个列表，使用列表推导式来复制它，并筛选掉其中的负数，打印复制后的列表。</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">list1 =[<span class="number">2</span>,<span class="number">3</span>,-<span class="number">43</span>,<span class="number">4</span>,<span class="number">5</span>,-<span class="number">5</span>,<span class="number">4</span>,-<span class="number">535</span>,<span class="number">34</span>,<span class="number">5</span>,<span class="number">345</span>,-<span class="number">3</span>,<span class="number">45</span>,<span class="number">3</span>,<span class="number">6</span>,<span class="number">345</span>,-<span class="number">546</span>,<span class="number">546</span>,<span class="number">34</span>,-<span class="number">56</span>,<span class="number">34</span>,<span class="number">5</span>,<span class="number">86</span>,<span class="number">7</span>,<span class="number">0</span>,<span class="number">12341</span>,<span class="number">979</span>,<span class="number">7</span>,<span class="number">67</span>,-<span class="number">856</span>,<span class="number">454</span>,<span class="number">8</span>,-<span class="number">64</span>,<span class="number">342</span>,-<span class="number">63</span>,<span class="number">568</span>]</span><br><span class="line"><span class="comment"># 请在下面的Begin-End之间按照注释中给出的提示编写正确的代码</span></span><br><span class="line"><span class="comment">########### Begin ###########</span></span><br><span class="line"><span class="comment"># 使用列表推导式来复制给定的列表，并筛选掉其中的负数，打印复制后的列表</span></span><br><span class="line"><span class="built_in">list</span>=[i <span class="keyword">for</span> i <span class="keyword">in</span> list1 <span class="keyword">if</span> i&gt;=<span class="number">0</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>)</span><br><span class="line"><span class="comment">########### End ###########</span></span><br></pre></td></tr></table></figure><h1 id="玩转列表">玩转列表</h1><h2 id="第1关-列表元素的增删改：客人名单的变化">第1关 列表元素的增删改：客人名单的变化</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="comment"># 创建并初始化Guests列表</span></span><br><span class="line">guests = []</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        guest = <span class="built_in">input</span>()</span><br><span class="line">        guests.append(guest)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 请在此添加代码，对guests列表进行插入、删除等操作</span></span><br><span class="line"></span><br><span class="line"><span class="comment">########## Begin ##########</span></span><br><span class="line">deleted_obj=guests.pop()</span><br><span class="line">guests.insert(<span class="number">2</span>,deleted_obj)</span><br><span class="line"><span class="keyword">del</span> guests[<span class="number">1</span>]</span><br><span class="line"><span class="built_in">print</span>(deleted_obj)</span><br><span class="line"><span class="built_in">print</span>(guests)</span><br><span class="line"><span class="comment">########## End ##########</span></span><br></pre></td></tr></table></figure><h2 id="第2关-列表元素的排序：给客人排序">第2关 列表元素的排序：给客人排序</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="comment"># 创建并初始化`source_list`列表</span></span><br><span class="line">source_list = []</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        list_element = <span class="built_in">input</span>()</span><br><span class="line">        source_list.append(list_element)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"><span class="comment"># 请在此添加代码，对source_list列表进行排序等操作并打印输出排序后的列表</span></span><br><span class="line"><span class="comment">########## Begin ##########</span></span><br><span class="line">source_list.sort()</span><br><span class="line"><span class="built_in">print</span>(source_list)</span><br><span class="line"><span class="comment">########## End ##########</span></span><br></pre></td></tr></table></figure><h2 id="第3关-数值列表：用数字说话">第3关 数值列表：用数字说话</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="comment"># 创建并读入range函数的相应参数</span></span><br><span class="line">lower = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line">upper = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line">step = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line"></span><br><span class="line"><span class="comment"># 请在此添加代码，实现编程要求</span></span><br><span class="line"><span class="comment">########## Begin ##########</span></span><br><span class="line">data=<span class="built_in">list</span>(<span class="built_in">range</span>(lower,upper,step))</span><br><span class="line">length=<span class="built_in">len</span>(data)</span><br><span class="line">value=<span class="built_in">max</span>(data)-<span class="built_in">min</span>(data)</span><br><span class="line"><span class="built_in">print</span>(length)</span><br><span class="line"><span class="built_in">print</span>(value)</span><br><span class="line"></span><br><span class="line"><span class="comment">########## End ##########</span></span><br></pre></td></tr></table></figure><h2 id="第4关-列表切片：你的菜单和我的菜单">第4关 列表切片：你的菜单和我的菜单</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="comment"># 创建并初始化my_menu列表</span></span><br><span class="line">my_menu = []</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        food = <span class="built_in">input</span>()</span><br><span class="line">        my_menu.append(food)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"><span class="comment"># 请在此添加代码，对my_menu列表进行切片操作</span></span><br><span class="line"><span class="comment">########## Begin ##########</span></span><br><span class="line"><span class="built_in">print</span>(my_menu[::<span class="number">3</span>])</span><br><span class="line"><span class="built_in">print</span>(my_menu[-<span class="number">3</span>:])</span><br><span class="line"><span class="comment">########## End ##########</span></span><br></pre></td></tr></table></figure><h1 id="python基础-5-1-列表-元组-字典-集合-列表">python基础(5-1)列表、元组、字典、集合——列表</h1><h2 id="第1关-列表实训说明">第1关 列表实训说明</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#要求一、创建列表</span></span><br><span class="line"><span class="comment">#(1)</span></span><br><span class="line">ls1=[]                <span class="comment">#创建空列表ls1</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>):    <span class="comment">#循环4次</span></span><br><span class="line">    item=<span class="built_in">input</span>( )    <span class="comment">#读入一个测试数据并保存在item中</span></span><br><span class="line">    ls1.append(item)    <span class="comment">#将读入的数据加入到ls1中</span></span><br><span class="line"><span class="comment">#(2)</span></span><br><span class="line">n=<span class="built_in">int</span>(<span class="built_in">input</span>())        <span class="comment">#读入下一个测试数据并转成整型n</span></span><br><span class="line">ls2=<span class="built_in">list</span>(<span class="built_in">range</span>(n))    <span class="comment">#使用range(n)生成整数序列并转换成列表ls2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#(3)</span></span><br><span class="line">str1=<span class="built_in">input</span>()        <span class="comment">#读入下一个测试数据</span></span><br><span class="line">ls3=<span class="built_in">list</span>(str1)        <span class="comment">#将读入的str1转换为字符列表ls3</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#要求二、打印列表</span></span><br><span class="line"><span class="comment">#（1）直接打印列表1</span></span><br><span class="line"><span class="built_in">print</span>(ls1)</span><br><span class="line"><span class="comment">#(2)使用循环程序将列表2中所有元素打印出来</span></span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> ls2:        <span class="comment">#使用in循环遍历ls2</span></span><br><span class="line">    <span class="built_in">print</span>(item,end=<span class="string">&#x27; &#x27;</span>)    <span class="comment">#将所有元素打印在一行并用空格隔开</span></span><br><span class="line"><span class="built_in">print</span>()                    <span class="comment">#打印换行</span></span><br><span class="line"><span class="comment">#(3)逆序打印列表3</span></span><br><span class="line"><span class="built_in">print</span>(ls3[ :  : -<span class="number">1</span>])    <span class="comment">#切片选择，start为空，end为空，step=-1，表示逆序打印所有元素</span></span><br><span class="line"><span class="comment">#(4)循环逆序打印所有列表1中元素</span></span><br><span class="line">i=<span class="built_in">len</span>(ls1)-<span class="number">1</span>        <span class="comment">#获取ls1的最大下标</span></span><br><span class="line"><span class="keyword">while</span> i&gt;=<span class="number">0</span>:            <span class="comment">#终止下标为0</span></span><br><span class="line">    <span class="built_in">print</span>(ls1[i])    <span class="comment">#逆序打印一个元素</span></span><br><span class="line">    i=i-<span class="number">1</span>            <span class="comment">#下标减1</span></span><br></pre></td></tr></table></figure><h2 id="第2关-调位置">第2关 调位置</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#此段程序为循环读入测试数据到列表ls中，阅读但不要修改</span></span><br><span class="line">ls=[ ]                <span class="comment">#创建列表ls</span></span><br><span class="line">item=<span class="built_in">input</span>()        <span class="comment">#读入第一个测试数据</span></span><br><span class="line"><span class="keyword">while</span> item!=<span class="string">&quot;end&quot;</span>:    <span class="comment">#判断是否结尾</span></span><br><span class="line">    ls.append(item)    <span class="comment">#加入到ls中</span></span><br><span class="line">    item=<span class="built_in">input</span>()    <span class="comment">#再读一个数据    </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">####   begin，请在此编程实现功能   ##</span></span><br><span class="line">ls[<span class="number">0</span>], ls[<span class="built_in">len</span>(ls)-<span class="number">1</span>]=ls[<span class="built_in">len</span>(ls)-<span class="number">1</span>], ls[<span class="number">0</span>]</span><br><span class="line">i=<span class="built_in">len</span>(ls)-<span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> i&gt;=<span class="number">0</span>:</span><br><span class="line">    <span class="built_in">print</span>(ls[i])</span><br><span class="line">    i=i-<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">####  end    #########</span></span><br></pre></td></tr></table></figure><h2 id="第3关-追加列表元素">第3关 追加列表元素</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#此段程序为循环读入测试数据到列表ls中，阅读但不要修改</span></span><br><span class="line">ls=[ ]                <span class="comment">#创建列表ls</span></span><br><span class="line">item=<span class="built_in">input</span>()        <span class="comment">#读入第一个测试数据</span></span><br><span class="line"><span class="keyword">while</span> item!=<span class="string">&quot;end&quot;</span>:    <span class="comment">#判断是否结尾</span></span><br><span class="line">    ls.append(item)    <span class="comment">#加入到ls中</span></span><br><span class="line">    item=<span class="built_in">input</span>()    <span class="comment">#再读一个数据    </span></span><br><span class="line"></span><br><span class="line"><span class="comment">####   begin，请在此编程实现功能   ##</span></span><br><span class="line">ls.extend([<span class="string">&#x27;tom&#x27;</span>,<span class="string">&#x27;jack&#x27;</span>,<span class="string">&#x27;山东&#x27;</span>,<span class="string">&#x27;北京&#x27;</span>])</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">50</span>,<span class="number">100</span>):</span><br><span class="line">    <span class="keyword">if</span> i%<span class="number">7</span>==<span class="number">0</span>:</span><br><span class="line">        ls.append(i)</span><br><span class="line"><span class="built_in">print</span> (ls,end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">####  end    #########</span></span><br></pre></td></tr></table></figure><h2 id="第4关-去除重复数字">第4关 去除重复数字</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#此段程序为循环读入测试数据到列表ls中，阅读但不要修改</span></span><br><span class="line">ls=[ ]                <span class="comment">#创建列表ls</span></span><br><span class="line">item=<span class="built_in">input</span>()        <span class="comment">#读入第一个测试数据</span></span><br><span class="line"><span class="keyword">while</span> item!=<span class="string">&quot;end&quot;</span>:    <span class="comment">#判断是否结尾</span></span><br><span class="line">    ls.append(<span class="built_in">int</span>(item))    <span class="comment">#加入到ls中</span></span><br><span class="line">    item=<span class="built_in">input</span>()    <span class="comment">#再读一个数据    </span></span><br><span class="line"><span class="comment">####   begin，请在此编程实现功能   ##</span></span><br><span class="line">ls1=[ ]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> ls:</span><br><span class="line">    <span class="keyword">if</span> i <span class="keyword">not</span> <span class="keyword">in</span> ls1:</span><br><span class="line">        ls1.append(i)</span><br><span class="line">ls=ls1</span><br><span class="line"><span class="built_in">print</span> (ls,end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">####  end    #########</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python实验一</title>
      <link href="/posts/4142913120/"/>
      <url>/posts/4142913120/</url>
      
        <content type="html"><![CDATA[<h1 id="python初体验-hello-world">Python初体验——Hello World</h1><h2 id="第1关-hello-python-我来了">第1关  Hello Python，我来了</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#请在此处添加代码完成输出“Hello Python”,注意要区分大小写！</span></span><br><span class="line"><span class="comment">###### Begin ######</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Hello Python&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">###### End ######</span></span><br></pre></td></tr></table></figure><h2 id="第2关-我想看世界">第2关 我想看世界</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">name=<span class="built_in">input</span>(<span class="string">&quot;请输入一个人的名字：&quot;</span>)</span><br><span class="line">country=<span class="built_in">input</span>(<span class="string">&quot;请输入一个国家的名字：&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;世界那么大，&#123;&#125;想去&#123;&#125;看看。&quot;</span>.<span class="built_in">format</span>(name,country))</span><br></pre></td></tr></table></figure><h2 id="第3关-学好python">第3关 学好Python</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">name=<span class="built_in">input</span>(<span class="string">&quot;输入姓名：&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&#123;&#125;同学，学好Python，前途无量！&quot;</span>.<span class="built_in">format</span>(name))  </span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;name[<span class="number">0</span>]&#125;</span>大侠，学好Python，大展拳脚！&quot;</span> )              </span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;name[<span class="number">1</span>:]&#125;</span>哥哥，学好Python，人见人爱！&quot;</span> )</span><br></pre></td></tr></table></figure><h1 id="python入门之基础语法">Python入门之基础语法</h1><h2 id="第1关">第1关</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#有错误的函数1 </span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">wrong1</span>(): </span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;wrong1&quot;</span>) </span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;这里有一个错误缩进&quot;</span>) </span><br><span class="line"><span class="comment">#有错误的函数2 </span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">wrong2</span>(): </span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;wrong2&quot;</span>) </span><br><span class="line"><span class="keyword">if</span> <span class="literal">False</span>: </span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;这个不应该输出&quot;</span>) </span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;这个也不应该输出&quot;</span>) </span><br><span class="line"><span class="comment">#有错误的函数3 </span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">wrong3</span>(): </span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;wrong3&quot;</span>); <span class="built_in">print</span>(<span class="string">&quot;hello world&quot;</span>) </span><br><span class="line"><span class="comment">#这里是调用三个函数的代码 </span></span><br><span class="line"><span class="comment">#不要修改 if __name__ == &#x27;__main__&#x27;: </span></span><br><span class="line">wrong1() </span><br><span class="line">wrong2() </span><br><span class="line">wrong3()</span><br></pre></td></tr></table></figure><h2 id="第2关-标识符与保留字">第2关 标识符与保留字</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> keyword</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment">#错误1</span></span><br><span class="line">    _str1 = <span class="string">&quot;string&quot;</span></span><br><span class="line">    <span class="built_in">print</span>(_str1)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#错误2</span></span><br><span class="line">    a1024 = <span class="number">1024</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="number">1024</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#错误3</span></span><br><span class="line">    float_1024 = <span class="number">1.024</span></span><br><span class="line">    <span class="built_in">print</span>(float_1024)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#错误3</span></span><br><span class="line">    false = <span class="literal">False</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="literal">False</span>)</span><br><span class="line">  </span><br><span class="line">    <span class="comment">#在此处输出保留关键字</span></span><br><span class="line">    <span class="built_in">print</span>(keyword.kwlist)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;end&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="第3关">第3关</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line"></span><br><span class="line">    <span class="comment">#以下是要修改的代码</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="number">1</span>)</span><br><span class="line">    <span class="comment">#print(2)</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="number">3</span>)</span><br><span class="line">    <span class="comment">#print(4)</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="number">5</span>)</span><br><span class="line">    <span class="comment">#print(6)</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;hello world&quot;</span>)</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    print(&quot;这个不应该输出&quot;)</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    print(1)</span></span><br><span class="line"><span class="string">    print(2)</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="number">3</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="number">4</span>)</span><br></pre></td></tr></table></figure><h2 id="第4关">第4关</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    a = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line">    b = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;%d + %d = %d&quot;</span> % (a,b,a+b))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;%d - %d = %d&quot;</span> % (a,b,a-b))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;%d * %d = %d&quot;</span> % (a,b,a*b))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;%d / %d = %f&quot;</span> % (a,b,a/b))</span><br></pre></td></tr></table></figure><h1 id="运算符的使用">运算符的使用</h1><h2 id="第1关-算术-比较-赋值运算符">第1关 算术，比较，赋值运算符</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义theOperation方法，包括apple和pear两个参数，分别表示苹果和梨子的数量</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">theOperation</span>(<span class="params">apple,pear</span>):</span><br><span class="line">    <span class="comment"># 请在此处填入计算苹果个数加梨的个数的代码，并将结果存入sum_result变量</span></span><br><span class="line">    <span class="comment">########## Begin ##########</span></span><br><span class="line">    sum_result=apple+pear;</span><br><span class="line">    <span class="comment">########## End ##########</span></span><br><span class="line">    <span class="built_in">print</span>(sum_result)</span><br><span class="line">    <span class="comment"># 请在此处填入苹果个数除以梨的个数的代码，并将结果存入div_result变量</span></span><br><span class="line">    <span class="comment">########## Begin ##########</span></span><br><span class="line">    div_result=apple/pear</span><br><span class="line">    <span class="comment">########## End ##########</span></span><br><span class="line">    <span class="built_in">print</span>(div_result)</span><br><span class="line">    <span class="comment"># 请在此处填入苹果个数的2次幂的代码，并将结果存入exp_result变量</span></span><br><span class="line">    <span class="comment">########## Begin ##########</span></span><br><span class="line">    exp_result=apple**<span class="number">2</span></span><br><span class="line">    <span class="comment">########## End ##########</span></span><br><span class="line">    <span class="built_in">print</span>(exp_result)</span><br><span class="line">    <span class="comment"># 请在此处填入判断苹果个数是否与梨的个数相等的代码，并将结果存入isequal变量</span></span><br><span class="line">    <span class="comment">########## Begin ##########</span></span><br><span class="line">    isequal=apple==pear</span><br><span class="line"></span><br><span class="line">    <span class="comment">########## End ##########</span></span><br><span class="line">    <span class="built_in">print</span>(isequal)</span><br><span class="line">    <span class="comment"># 请在此处填入判断苹果个数是否大于等于梨的个数的代码，并将结果存入ismax变量</span></span><br><span class="line">    <span class="comment">########## Begin ##########</span></span><br><span class="line">    ismax=apple&gt;=pear</span><br><span class="line">    <span class="comment">########## End ##########</span></span><br><span class="line">    <span class="built_in">print</span>(ismax)</span><br><span class="line">    <span class="comment"># 请在此处填入用赋值乘法运算符计算梨个数乘以2的代码，并将结果存入multi_result变量</span></span><br><span class="line">    <span class="comment">########## Begin ##########</span></span><br><span class="line">    pear*=<span class="number">2</span></span><br><span class="line">    multi_result=pear</span><br><span class="line">    <span class="comment">########## End ##########</span></span><br><span class="line">    <span class="built_in">print</span>(multi_result)</span><br></pre></td></tr></table></figure><h2 id="第2关-逻辑运算符">第2关 逻辑运算符</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义逻辑运算处理函数theLogic,其中tom与Jerry分别代表两个输入参数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">theLogic</span>(<span class="params">tom,jerry</span>):</span><br><span class="line">    <span class="comment"># 请在此处填入jerry的布尔“非”代码,并将结果存入到not_result这个变量</span></span><br><span class="line">    <span class="comment">########## Begin ##########</span></span><br><span class="line">    not_result=<span class="keyword">not</span> jerry</span><br><span class="line"></span><br><span class="line">    <span class="comment">########## End ##########</span></span><br><span class="line">    <span class="built_in">print</span>(not_result)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 请在此处填入tom,jerry的逻辑与代码，并将结果存入到and_result这个变量</span></span><br><span class="line">    <span class="comment">########## Begin ##########</span></span><br><span class="line">    and_result=tom <span class="keyword">and</span> jerry</span><br><span class="line">    <span class="comment">########## End ##########</span></span><br><span class="line">    <span class="built_in">print</span>(and_result)</span><br></pre></td></tr></table></figure><h2 id="第3关-位运算符">第3关 位运算符</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义位运算处理函数bit, 其中bitone和bittwo两个参数为需要进行位运算的变量，由测试程序读入。</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">bit</span>(<span class="params">bitone,bittwo</span>):</span><br><span class="line">    <span class="comment"># 请在此处填入将bitone,bittwo按位与的代码，并将运算结果存入result变量</span></span><br><span class="line">    <span class="comment">########## Begin ##########</span></span><br><span class="line">    result=bitone&amp;bittwo</span><br><span class="line"></span><br><span class="line">    <span class="comment">########## End ##########</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(result)</span><br><span class="line">    <span class="comment"># 请在此处填入将bitone,bittwo按位或的代码，并将运算结果存入result变量</span></span><br><span class="line">    <span class="comment">########## Begin ##########</span></span><br><span class="line">    result=bitone|bittwo</span><br><span class="line"></span><br><span class="line">    <span class="comment">########## End ##########</span></span><br><span class="line">    <span class="built_in">print</span>(result)</span><br><span class="line">    <span class="comment"># 请在此处填入将bitone,bittwo按位异或的代码，并将运算结果存入result变量</span></span><br><span class="line">    <span class="comment">########## Begin ##########</span></span><br><span class="line">    result=bitone^bittwo</span><br><span class="line"></span><br><span class="line">    <span class="comment">########## End ##########</span></span><br><span class="line">    <span class="built_in">print</span>(result)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 请在此处填入将bitone按位取反的代码，并将运算结果存入result变量</span></span><br><span class="line">    <span class="comment">########## Begin ##########</span></span><br><span class="line">    result=~bitone</span><br><span class="line"></span><br><span class="line">    <span class="comment">########## End #########</span></span><br><span class="line">    <span class="built_in">print</span>(result)</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">    <span class="comment"># 请在此处填入将bittwo左移动两位的代码，并将运算结果存入result变量</span></span><br><span class="line">    <span class="comment">########## Begin ##########</span></span><br><span class="line">    result=bittwo&lt;&lt;<span class="number">2</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">########## End ##########</span></span><br><span class="line">    <span class="built_in">print</span>(result)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 请在此处填入将bittwo右移动两位的代码，并将运算结果存入result变量</span></span><br><span class="line">    <span class="comment">########## Begin ##########</span></span><br><span class="line">    result=bittwo&gt;&gt;<span class="number">2</span></span><br><span class="line">    <span class="comment">########## End ##########</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(result)</span><br></pre></td></tr></table></figure><h2 id="第4关-成员运算符">第4关 成员运算符</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义成员片段函数member，参数me为待判断的人名，member_list为成员名单</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">member</span>(<span class="params">me,member_list = []</span>):</span><br><span class="line">    <span class="comment"># 请在if后面的括号中填入判断变量me是否存在于list中的语句</span></span><br><span class="line">    <span class="comment">########## Begin ##########</span></span><br><span class="line">    <span class="keyword">if</span>(me <span class="keyword">in</span> member_list ):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;我是篮球社成员&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;我不是篮球社成员&quot;</span>)</span><br><span class="line">    <span class="comment">########## End ##########</span></span><br><span class="line">    <span class="comment"># 请在if后面的括号中填入判断变量me是否存在于list中的语句</span></span><br><span class="line">    <span class="comment">########## Begin ##########</span></span><br><span class="line">    <span class="keyword">if</span>(me <span class="keyword">not</span> <span class="keyword">in</span> member_list ):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;我不是篮球社成员&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;我是篮球社成员&quot;</span>)</span><br><span class="line">   <span class="comment">########## End ##########</span></span><br></pre></td></tr></table></figure><h2 id="第5关-身份运算符">第5关 身份运算符</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义addressone和addresstwo两个变量，并为其赋值</span></span><br><span class="line">addressone = <span class="number">20</span></span><br><span class="line">addresstwo = <span class="number">20</span></span><br><span class="line">addressthree = <span class="number">12</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在if后面的括号中填入判断变量addressone与变量addresstwo是否有相同的存储单元的语句</span></span><br><span class="line"><span class="comment">########## Begin ##########</span></span><br><span class="line"><span class="keyword">if</span>(addressone <span class="keyword">is</span> addresstwo):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;变量addressone与变量addresstwo有相同的存储单元&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;变量addressone与变量addresstwo的存储单元不同&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">########## End ##########</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在if后面的括号中填入判断变量addresstwo与变量addressthree是否没有相同的存储单元的语句</span></span><br><span class="line"><span class="comment">########## Begin ##########</span></span><br><span class="line"><span class="keyword">if</span>(addresstwo <span class="keyword">is</span> <span class="keyword">not</span> addressthree):</span><br><span class="line">       <span class="built_in">print</span>(<span class="string">&quot;变量addresstwo与变量addressthree的存储单元不同&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">       <span class="built_in">print</span>(<span class="string">&quot;变量addresstwo与变量addressthree有相同的存储单元&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">########## End ##########</span></span><br></pre></td></tr></table></figure><h2 id="第6关-运算符的优先级">第6关 运算符的优先级</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义并实现优先级运算函数theProirity</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">thePriority</span>(<span class="params">var1,var2,var3,var4</span>):</span><br><span class="line">    <span class="comment"># 先将var1左移两位，然后计算var1与var2的和，最后后将这个值乘以var3，并将最终结果存入result变量</span></span><br><span class="line">    <span class="comment">########## Begin ##########</span></span><br><span class="line">    result=((var1&lt;&lt;<span class="number">2</span>)+var2)*var3</span><br><span class="line">    <span class="comment">########## End ##########</span></span><br><span class="line">    <span class="built_in">print</span>(result)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 先将var1与var2按位与，然后计算得到的值与var3的和，最后后将这个值乘以var4，并将最终结果存入result变量</span></span><br><span class="line">    <span class="comment">########## Begin ##########</span></span><br><span class="line">    result=((var1&amp;var2)+var3)*var4</span><br><span class="line">    <span class="comment">########## End ##########</span></span><br><span class="line">    <span class="built_in">print</span>(result)</span><br></pre></td></tr></table></figure><h1 id="python常用内置函数的使用">Python常用内置函数的使用</h1><h2 id="第1关-输入输出函数训练">第1关 输入输出函数训练</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">num=<span class="built_in">input</span>()</span><br><span class="line"><span class="built_in">print</span>(num[<span class="number">0</span>],num[<span class="number">1</span>],num[<span class="number">2</span>],sep=<span class="string">&quot;:&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(num[<span class="number">0</span>],num[<span class="number">1</span>],num[<span class="number">2</span>],sep=<span class="string">&quot;,&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(num[<span class="number">0</span>],num[<span class="number">1</span>],num[<span class="number">2</span>])</span><br></pre></td></tr></table></figure><h2 id="第2关-简单的数字操作">第2关 简单的数字操作</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">num=<span class="built_in">input</span>()</span><br><span class="line">_num=<span class="built_in">list</span>(<span class="built_in">map</span>(<span class="built_in">int</span>,num))</span><br><span class="line"><span class="built_in">print</span>(_num[<span class="number">0</span>],_num[<span class="number">1</span>],_num[<span class="number">2</span>],_num[<span class="number">3</span>])</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">int</span>(num[::-<span class="number">1</span>]))</span><br></pre></td></tr></table></figure><h2 id="第3关计算三角形面积及周长">第3关计算三角形面积及周长</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> math</span><br><span class="line">a,b,c=<span class="built_in">map</span>(<span class="built_in">int</span>,<span class="built_in">input</span>().split())</span><br><span class="line">perimeter=a+b+c</span><br><span class="line">p=perimeter/<span class="number">2</span></span><br><span class="line">area=math.sqrt(p*(p-a)*(p-b)*(p-c))</span><br><span class="line"><span class="built_in">print</span>(perimeter)</span><br><span class="line"><span class="built_in">print</span>(area)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>头歌——python实验</title>
      <link href="/posts/1029327720/"/>
      <url>/posts/1029327720/</url>
      
        <content type="html"><![CDATA[<ol class="series-items"><li><a href="/posts/4142913120/" title="Python实验一">Python实验一</a></li><li><a href="/posts/3446667465/" title="Python实验二">Python实验二</a></li><li><a href="/posts/2402512580/" title="Python实验三">Python实验三</a></li><li><a href="/posts/3286303450/" title="Python实验四">Python实验四</a></li><li><a href="/posts/3724763295/" title="Python实验五">Python实验五</a></li><li><a href="/posts/3625625756/" title="Python实验六">Python实验六</a></li><li><a href="/posts/1877379034/" title="Python实验七">Python实验七</a></li><li><a href="/posts/830016937/" title="Python实验八">Python实验八</a></li><li><a href="/posts/2364705784/" title="Python实验九">Python实验九</a></li><li><a href="/posts/572214903/" title="Python实验十">Python实验十</a></li><li><a href="/posts/623891310/" title="Python实验十一">Python实验十一</a></li><li><a href="/posts/514850247/" title="Python实验十二">Python实验十二</a></li><li><a href="/posts/1559456714/" title="Python实验十三">Python实验十三</a></li><li><a href="/posts/270600148/" title="Python实验十四">Python实验十四</a></li><li><a href="/posts/230909329/" title="Python实验十五">Python实验十五</a></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>CPP_第15周</title>
      <link href="/posts/1935878460/"/>
      <url>/posts/1935878460/</url>
      
        <content type="html"><![CDATA[<h1 id="a-一-会员积分-期末模拟">A.一、会员积分（期末模拟）</h1><h2 id="题目描述">题目描述</h2><p>某电商网站的会员分为：普通、贵宾两个级别</p><p>普通会员类Member，包含编号、姓名、积分三个属性，编号和积分是整数，姓名是字符串<br>操作包括构造、打印、积分累加、积分兑换，操作定义如下：<br>1、积分累加add，是根据消费金额累加积分，无返回值，参数是消费金额（整数），积分根据消费金额按1比1的比例累加。<br>2、积分兑换exchange，是按照每100积分换1元的比例，把积分兑换成现金。参数是要兑换的积分数量，返回值是兑换的现金数量。<br>注意：兑换积分数量不足100的部分是不能兑换的，例如会员原有500积分，要兑换积分数量为450，则450/100=4，最终用400积分兑换4元，会员余100积分。<br>3、打印是输出会员信息，格式参考输出样例</p><p>贵宾会员类VIP，继承了普通会员的属性与操作，新增两个属性：累加比例(整数)、兑换比例(整数)。并且重定义了所有操作：<br>1、积分累加中，积分按累加比例进行累加。例如累加比例是2，消费金额100元，则累加积分=100*2=200<br>2、积分兑换中，按照兑换比例的数值把积分抵扣消费金额。例如兑换比例是90，会员原有500积分，要兑换积分数量为420，则420/90=4，最终用360积分兑换4元，会员余140积分。<br>3、打印是输出会员信息，格式参考输出样例</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Member</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line"><span class="type">int</span> number;</span><br><span class="line"><span class="type">int</span> points;</span><br><span class="line">string name;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Member</span>(<span class="type">int</span> num,<span class="type">int</span> p,string na):<span class="built_in">number</span>(num),<span class="built_in">points</span>(p),<span class="built_in">name</span>(na)&#123;&#125;</span><br><span class="line"> <span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> a)</span></span>;</span><br><span class="line"> <span class="function"><span class="keyword">virtual</span> <span class="type">int</span> <span class="title">exchange</span><span class="params">(<span class="type">int</span> p)</span></span>;</span><br><span class="line"> <span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">print</span><span class="params">()</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Member::add</span><span class="params">(<span class="type">int</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">points += a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">Member::exchange</span><span class="params">(<span class="type">int</span> p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> amount;</span><br><span class="line"><span class="keyword">if</span> (p % <span class="number">100</span> != <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">p -= p % <span class="number">100</span>;</span><br><span class="line">points -= p;</span><br><span class="line">amount = p / <span class="number">100</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">points -= p;</span><br><span class="line">amount = p / <span class="number">100</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> amount;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Member::print</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;普通会员&quot;</span> &lt;&lt; number &lt;&lt; <span class="string">&quot;--&quot;</span> &lt;&lt; name &lt;&lt; <span class="string">&quot;--&quot;</span> &lt;&lt; points &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Vip</span>:<span class="keyword">public</span> Member</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line"><span class="type">int</span> add_page;</span><br><span class="line"><span class="type">int</span> exchange_page;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Vip</span>(<span class="type">int</span> num, <span class="type">int</span> p, string na, <span class="type">int</span> ap, <span class="type">int</span> ep) :<span class="built_in">Member</span>(num, p, na)</span><br><span class="line">&#123;</span><br><span class="line">add_page = ap;</span><br><span class="line">exchange_page = ep;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> a)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">int</span> <span class="title">exchange</span><span class="params">(<span class="type">int</span> p)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">print</span><span class="params">()</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Vip::add</span><span class="params">(<span class="type">int</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> po;</span><br><span class="line">po = a * add_page;</span><br><span class="line">points += po;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">Vip::exchange</span><span class="params">(<span class="type">int</span> p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> amount;</span><br><span class="line"><span class="keyword">if</span> (p % exchange_page != <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">p -= p % exchange_page;</span><br><span class="line">points -= p;</span><br><span class="line">amount = p / exchange_page;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">points -= p;</span><br><span class="line">amount = p / exchange_page;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> amount;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Vip::print</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;贵宾会员&quot;</span> &lt;&lt; number &lt;&lt; <span class="string">&quot;--&quot;</span> &lt;&lt; name &lt;&lt; <span class="string">&quot;--&quot;</span> &lt;&lt; points &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Member* pm;</span><br><span class="line"><span class="type">int</span> number, points, apage, epage;</span><br><span class="line"><span class="type">int</span> amount, change_point;</span><br><span class="line">string name;</span><br><span class="line"></span><br><span class="line">cin &gt;&gt; number &gt;&gt; name &gt;&gt; points;</span><br><span class="line"><span class="function">Member <span class="title">mm</span><span class="params">(number, points, name)</span></span>;</span><br><span class="line">pm = &amp;mm;</span><br><span class="line">cin &gt;&gt; amount &gt;&gt; change_point;</span><br><span class="line">pm-&gt;<span class="built_in">add</span>(amount);</span><br><span class="line">pm-&gt;<span class="built_in">exchange</span>(change_point);</span><br><span class="line">pm-&gt;<span class="built_in">print</span>();</span><br><span class="line"></span><br><span class="line">cin &gt;&gt; number &gt;&gt; name &gt;&gt; points &gt;&gt; apage &gt;&gt; epage;</span><br><span class="line"><span class="function">Vip <span class="title">vv</span><span class="params">(number, points, name, apage, epage)</span></span>;</span><br><span class="line">pm = &amp;vv;</span><br><span class="line">cin &gt;&gt; amount &gt;&gt; change_point;</span><br><span class="line">pm-&gt;<span class="built_in">add</span>(amount);</span><br><span class="line">pm-&gt;<span class="built_in">exchange</span>(change_point);</span><br><span class="line">pm-&gt;<span class="built_in">print</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="b-二-金属加工-期末模拟">B.二、金属加工（期末模拟）</h1><h2 id="题目描述">题目描述</h2><p>在金属加工中，金属具有硬度、重量、体积的属性（都是整数），包括四种操作：<br>1、合并，每两块金属可以合并成一块新的金属。新金属的重量等于原两块金属的重量之和，体积和硬度也类似计算。<br>2、巨化，金属通过熔炼风吹的方法会巨化，体积变大n倍，重量和硬度不变<br>3、硬化，在金属中加入高分子材料可以硬化金属，每提升硬度一级，重量和体积都增加10%。<br>4、软化，在金属中加入特殊化学溶液可以降低金属硬度，每降低硬度一级，重量和体积都减少10%</p><p>用类来描述金属，用运算符重载方式实现金属的四种操作，并定义打印函数，具体要求如下<br>1、用加法运算符、友元的方式实现合并<br>2、用乘法运算符、友元的方式实现巨化，含两个参数：金属对象、巨化倍数<br>3、用++运算符、成员函数、前增量的方式实现硬化<br>4、用–运算符、成员函数、后增量的方式实现软化<br>5、打印函数用来输出金属的信息，输出格式看参考样本</p><p>操作中所有属性的运算结果都只保留整数部分。</p><p>上述所有类属性都不是public，用面向对象思想和C++语言实现上述要求</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Mental</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line"><span class="type">int</span> hardness;</span><br><span class="line"><span class="type">int</span> weight;</span><br><span class="line"><span class="type">int</span> volume;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Mental</span>()&#123;&#125;</span><br><span class="line"><span class="built_in">Mental</span>(<span class="type">int</span> h,<span class="type">int</span> w,<span class="type">int</span> v):<span class="built_in">hardness</span>(h),<span class="built_in">weight</span>(w),<span class="built_in">volume</span>(v)&#123;&#125;</span><br><span class="line"><span class="keyword">friend</span> Mental <span class="keyword">operator</span>+ (Mental m1,Mental m2);</span><br><span class="line"><span class="keyword">friend</span> Mental <span class="keyword">operator</span>*(Mental m, <span class="type">int</span> n);</span><br><span class="line">Mental &amp;<span class="keyword">operator</span>++()</span><br><span class="line">&#123;</span><br><span class="line">hardness++;</span><br><span class="line">volume *= <span class="number">1.1</span>;</span><br><span class="line">weight *= <span class="number">1.1</span>;</span><br><span class="line"><span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">&#125;</span><br><span class="line">Mental&amp; <span class="keyword">operator</span>--(<span class="type">int</span>)</span><br><span class="line">&#123;</span><br><span class="line">hardness--;</span><br><span class="line">volume *= <span class="number">0.9</span>;</span><br><span class="line">weight *= <span class="number">0.9</span>;</span><br><span class="line"><span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">print</span><span class="params">()</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">Mental <span class="keyword">operator</span>+(Mental m1, Mental m2)</span><br><span class="line">&#123;</span><br><span class="line">Mental m3;</span><br><span class="line">m<span class="number">3.</span>hardness = m<span class="number">1.</span>hardness + m<span class="number">2.</span>hardness;</span><br><span class="line">m<span class="number">3.</span>volume = m<span class="number">1.</span>volume + m<span class="number">2.</span>volume;</span><br><span class="line">m<span class="number">3.</span>weight = m<span class="number">1.</span>weight + m<span class="number">2.</span>weight;</span><br><span class="line"><span class="keyword">return</span> m3;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Mental <span class="keyword">operator</span>*(Mental m, <span class="type">int</span> n)</span><br><span class="line">&#123;</span><br><span class="line">m.volume *= n;</span><br><span class="line"><span class="keyword">return</span> m;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Mental::print</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;硬度&quot;</span> &lt;&lt; hardness &lt;&lt; <span class="string">&quot;--重量&quot;</span> &lt;&lt; weight &lt;&lt; <span class="string">&quot;--体积&quot;</span> &lt;&lt; volume &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> h, w, v;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">cin &gt;&gt; h &gt;&gt; w &gt;&gt; v;</span><br><span class="line"><span class="function">Mental <span class="title">m1</span><span class="params">(h, w, v)</span></span>;</span><br><span class="line">cin &gt;&gt; h &gt;&gt; w &gt;&gt; v;</span><br><span class="line"><span class="function">Mental <span class="title">m2</span><span class="params">(h, w, v)</span></span>;</span><br><span class="line">Mental m3;</span><br><span class="line">m3 = m1 + m2;</span><br><span class="line">m<span class="number">3.</span><span class="built_in">print</span>();</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line">m3 = m1 * n;</span><br><span class="line">m<span class="number">3.</span><span class="built_in">print</span>();</span><br><span class="line">++m1;</span><br><span class="line">m<span class="number">1.</span><span class="built_in">print</span>();</span><br><span class="line">m2--;</span><br><span class="line">m<span class="number">2.</span><span class="built_in">print</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="c-三-加密模板-期末模拟">C.三、加密模板（期末模拟）</h1><h2 id="题目描述">题目描述</h2><p>加密机制包括明文、密文、密钥。用密钥对明文进行加密后就得到密文。<br>在古典加密机制中，偏离值是一种常见的方法，加密过程为<br>1、在已知数据中找出最大值<br>2、用最大值减去各个数值，得到相应的偏离值<br>3、偏离值加上密钥就得到密文</p><p>例如明文为1 2 3 4 5，密钥是10，加密过程为：<br>1、找出明文的最大值是5<br>2、用5减去明文的各个数值，得到偏离值4 3 2 1 0<br>3、用偏离值加上密钥，得到密文14 13 12 11 10<br>定义一个函数模板，名为max，参数包括数组和数组长度，返回值是数组中的最大值，要求支持整数、浮点数和字符三种类型。</p><p>用类模板定义一个加密类，包含四个属性：明文、密文、密钥、长度，前三个属性都是同一种类型，长度是整数。长度是指明文的长度。<br>类模板包含操作构造、加密、打印，说明如下：<br>1、加密是调用函数模板max得到数组最大值，按照前面的方法使用最大值和密钥进行加密，得到密文<br>2、打印是输出密文</p><p>要求类模板支持整数、浮点数和字符三种类型。<br>参考代码给出了加密类界面（只支持整数类型）、主函数（支持三种数据类型），程序要求<br>1、根据要求编写函数模板max<br>2、使用类模板方法改造加密类界面，不能增加任何属性和操作，必须在类外实现构造函数和加密方法<br>3、主函数不能有任何修改<br>上述所有类属性都不是public，用面向对象思想和C++语言实现上述要求</p><p>----参考代码----</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//只支持整数类型的加密类界面</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Cryption</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="type">int</span> ptxt[<span class="number">100</span>]; <span class="comment">//明文</span></span><br><span class="line"><span class="type">int</span> ctxt[<span class="number">100</span>]; <span class="comment">//密文</span></span><br><span class="line"><span class="type">int</span> key; <span class="comment">//密钥</span></span><br><span class="line"><span class="type">int</span> len; <span class="comment">//长度</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Cryption</span>(<span class="type">int</span> tk, <span class="type">int</span> tt[], <span class="type">int</span> n); <span class="comment">//参数依次对应密钥、明文、长度</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">encrypt</span><span class="params">()</span></span>; <span class="comment">//加密</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">print</span><span class="params">()</span> <span class="comment">//打印，无需改造</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; len - <span class="number">1</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; ctxt[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; ctxt[i] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//支持三种类型的主函数</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line"><span class="type">int</span> length; <span class="comment">//长度</span></span><br><span class="line"><span class="type">int</span> ik, itxt[<span class="number">100</span>];</span><br><span class="line"><span class="type">double</span> dk, dtxt[<span class="number">100</span>];</span><br><span class="line"><span class="type">char</span> ck, ctxt[<span class="number">100</span>];</span><br><span class="line"><span class="comment">//整数加密</span></span><br><span class="line">cin &gt;&gt; ik &gt;&gt; length;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; length; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; itxt[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">Cryption&lt;<span class="type">int</span>&gt; <span class="title">ic</span><span class="params">(ik, itxt, length)</span></span>;</span><br><span class="line">ic.<span class="built_in">encrypt</span>();</span><br><span class="line">ic.<span class="built_in">print</span>();</span><br><span class="line"><span class="comment">//浮点数加密</span></span><br><span class="line">cin &gt;&gt; dk &gt;&gt; length;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; length; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; dtxt[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">Cryption&lt;<span class="type">double</span>&gt; <span class="title">dc</span><span class="params">(dk, dtxt, length)</span></span>;</span><br><span class="line">dc.<span class="built_in">encrypt</span>();</span><br><span class="line">dc.<span class="built_in">print</span>();</span><br><span class="line"><span class="comment">//字符加密</span></span><br><span class="line">cin &gt;&gt; ck &gt;&gt; length;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; length; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; ctxt[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">Cryption&lt;<span class="type">char</span>&gt; <span class="title">cc</span><span class="params">(ck, ctxt, length)</span></span>;</span><br><span class="line">cc.<span class="built_in">encrypt</span>();</span><br><span class="line">cc.<span class="built_in">print</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">template</span>&lt;<span class="keyword">class</span> Type&gt;</span></span><br><span class="line"><span class="function">Type <span class="title">max</span><span class="params">(Type *p,<span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Type max = p[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (max &lt; p[i])</span><br><span class="line">        &#123;</span><br><span class="line">max = p[i];</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> max;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">class</span> <span class="title class_">Type</span>&gt;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Cryption</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">Type ptxt[<span class="number">100</span>]; <span class="comment">//明文</span></span><br><span class="line">Type ctxt[<span class="number">100</span>]; <span class="comment">//密文</span></span><br><span class="line">Type key; <span class="comment">//密钥</span></span><br><span class="line"><span class="type">int</span> len; <span class="comment">//长度</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Cryption</span>(Type tk, Type tt[], <span class="type">int</span> n) :<span class="built_in">key</span>(tk), <span class="built_in">len</span>(n) <span class="comment">//参数依次对应密钥、明文、长度</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">&#123;</span><br><span class="line">ptxt[i] = tt[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">encrypt</span><span class="params">()</span></span>; <span class="comment">//加密</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">print</span><span class="params">()</span></span>; <span class="comment">//打印，无需改造</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">class</span> <span class="title class_">Type</span>&gt;</span><br><span class="line"><span class="type">void</span> Cryption&lt;Type&gt;::<span class="built_in">encrypt</span>()</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">&#123;</span><br><span class="line">ctxt[i] = key + (<span class="built_in">max</span>(ptxt, len) - ptxt[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">class</span> <span class="title class_">Type</span>&gt;</span><br><span class="line"><span class="type">void</span> Cryption&lt;Type&gt;::<span class="built_in">print</span>()</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; len - <span class="number">1</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; ctxt[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; ctxt[i] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//支持三种类型的主函数</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line"><span class="type">int</span> length; <span class="comment">//长度</span></span><br><span class="line"><span class="type">int</span> ik, itxt[<span class="number">100</span>];</span><br><span class="line"><span class="type">double</span> dk, dtxt[<span class="number">100</span>];</span><br><span class="line"><span class="type">char</span> ck, ctxt[<span class="number">100</span>];</span><br><span class="line"><span class="comment">//整数加密</span></span><br><span class="line">cin &gt;&gt; ik &gt;&gt; length;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; length; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; itxt[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">Cryption&lt;<span class="type">int</span>&gt; <span class="title">ic</span><span class="params">(ik, itxt, length)</span></span>;</span><br><span class="line">ic.<span class="built_in">encrypt</span>();</span><br><span class="line">ic.<span class="built_in">print</span>();</span><br><span class="line"><span class="comment">//浮点数加密</span></span><br><span class="line">cin &gt;&gt; dk &gt;&gt; length;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; length; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; dtxt[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">Cryption&lt;<span class="type">double</span>&gt; <span class="title">dc</span><span class="params">(dk, dtxt, length)</span></span>;</span><br><span class="line">dc.<span class="built_in">encrypt</span>();</span><br><span class="line">dc.<span class="built_in">print</span>();</span><br><span class="line"><span class="comment">//字符加密</span></span><br><span class="line">cin &gt;&gt; ck &gt;&gt; length;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; length; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; ctxt[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">Cryption&lt;<span class="type">char</span>&gt; <span class="title">cc</span><span class="params">(ck, ctxt, length)</span></span>;</span><br><span class="line">cc.<span class="built_in">encrypt</span>();</span><br><span class="line">cc.<span class="built_in">print</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="d-四-加湿风扇-期末模拟">D.四、加湿风扇（期末模拟）</h1><h2 id="题目描述">题目描述</h2><p>已知家电有编号、功率的属性，属性都是整数，操作包括构造和打印等</p><p>电风扇继承家电的特点，新增两个属性（整数）：风向和风力，其中风向为0表示定向吹风，状态为1表示旋转吹风。<br>风扇包含两个新操作：风向控制和风力控制<br>1、风向控制含一个整数参数，无返回，把风向设置为参数值，参数为0表示定向吹风，为1表示旋转吹风。<br>2、风力控制含一个整数参数，无返回，把风力设置为参数值，参数表示风力级别，例如1级、2级、3级等。<br>加湿器继承家电的特点，新增两个属性（浮点数）：实际水容量和最大水容量</p><p>新增操作是预警，无参数，返回值为整数，当实际水容量不小于最大水容量的50%，则返回1；小于50%且不小于10%则返回2，小于10%则返回3<br>加湿风扇继承了风扇和加湿器的特点，新增属性档位（整数）<br>新增操作调整档位，含一个参数，无返回值，先设置档位为参数值，再调用风向控制和风力控制来设置相关属性，包括：<br>1、参数为0，不做其他属性修改<br>2、参数为1，设置定向吹风且风力1级<br>3、参数为2，设置旋转吹风且风力2级<br>4、参数为3，设置旋转吹风且风力3级</p><p>档位只可能是0、1、2、3四个数值，其他数值忽略。<br>加湿风扇重载打印操作，输出格式参考样本。输出要求如下：<br>1、如果风向为0，则输出定向吹风，风向为1则输出旋转吹风。<br>2、调用预警操作，并根据返回结果1、2、3输出不同信息，分别是：水量正常、水量偏低、水量不足</p><p>程序要求<br>1、采用虚拟继承机制实现上述电器的关系，明确谁是虚基类、基类、派生类<br>2、基类和派生类的构造要考虑虚基类、基类的属性构造<br>上述所有类属性都不是public，用面向对象思想和C++语言实现上述要求</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">appliance</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line"><span class="type">int</span> number;</span><br><span class="line"><span class="type">int</span> power;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">appliance</span>()&#123;&#125;</span><br><span class="line"><span class="built_in">appliance</span>(<span class="type">int</span> n,<span class="type">int</span> p):<span class="built_in">number</span>(n),<span class="built_in">power</span>(p)&#123;&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">print</span><span class="params">()</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Fan</span>:<span class="keyword">virtual</span> <span class="keyword">public</span> appliance</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line"><span class="type">int</span> w_direction;</span><br><span class="line"><span class="type">int</span> w_power;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Fan</span>()&#123;&#125;</span><br><span class="line"><span class="built_in">Fan</span>(<span class="type">int</span> n,<span class="type">int</span> p,<span class="type">int</span> w_d,<span class="type">int</span> w_p):<span class="built_in">appliance</span>(n,p),<span class="built_in">w_direction</span>(w_d),<span class="built_in">w_power</span>(w_p)&#123;&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">d_control</span><span class="params">(<span class="type">int</span> d)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">w_direction = d;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">p_control</span><span class="params">(<span class="type">int</span> p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">w_power = p;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Hum</span>:<span class="keyword">virtual</span> <span class="keyword">public</span> appliance</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line"><span class="type">double</span>  volume;</span><br><span class="line"><span class="type">double</span> max_volume;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Hum</span>()&#123;&#125;</span><br><span class="line"><span class="built_in">Hum</span>(<span class="type">int</span> n,<span class="type">int</span> p,<span class="type">int</span> v,<span class="type">int</span> max):<span class="built_in">appliance</span>(n,p),<span class="built_in">volume</span>(v),<span class="built_in">max_volume</span>(max)&#123;&#125;</span><br><span class="line"><span class="function"><span class="type">int</span>  <span class="title">warning</span><span class="params">()</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">Hum::warning</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (volume &gt;= <span class="number">0.5</span> * max_volume)</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (volume &gt;= (<span class="number">0.1</span> * max_volume) &amp;&amp; volume &lt; (<span class="number">0.5</span> * max_volume))</span><br><span class="line"><span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (volume &lt; (<span class="number">0.1</span> * max_volume))</span><br><span class="line"><span class="keyword">return</span> <span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Hum_Fan</span> :<span class="keyword">public</span> Fan, <span class="keyword">public</span> Hum</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line"><span class="type">int</span> state;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line"><span class="built_in">Hum_Fan</span>(<span class="type">int</span> n, <span class="type">int</span> p, <span class="type">int</span> w_d, <span class="type">int</span> w_p, <span class="type">int</span> v, <span class="type">int</span> max, <span class="type">int</span> s) </span><br><span class="line">&#123;</span><br><span class="line">number = n;</span><br><span class="line">power = p;</span><br><span class="line">w_direction = w_d;</span><br><span class="line">w_power = w_p;</span><br><span class="line">volume = v;</span><br><span class="line">max_volume = max;</span><br><span class="line">state = s;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">control</span><span class="params">(<span class="type">int</span> x)</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">print</span><span class="params">()</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Hum_Fan::control</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">state = x;</span><br><span class="line"><span class="keyword">if</span> (state == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (state == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">d_control</span>(<span class="number">0</span>);</span><br><span class="line"><span class="built_in">p_control</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (state == <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">d_control</span>(<span class="number">1</span>);</span><br><span class="line"><span class="built_in">p_control</span>(<span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (state == <span class="number">3</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">d_control</span>(<span class="number">1</span>);</span><br><span class="line"><span class="built_in">p_control</span>(<span class="number">3</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Hum_Fan::print</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;加湿风扇--档位&quot;</span> &lt;&lt; state &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;编号&quot;</span> &lt;&lt; number &lt;&lt; <span class="string">&quot;--功率&quot;</span> &lt;&lt; power &lt;&lt; <span class="string">&quot;W&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">if</span> (w_direction == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;定向吹风--风力&quot;</span> &lt;&lt; w_power &lt;&lt; <span class="string">&quot;级&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (w_direction == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;旋转吹风--风力&quot;</span> &lt;&lt; w_power &lt;&lt; <span class="string">&quot;级&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">warning</span>() == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;实际水容量&quot;</span> &lt;&lt; volume &lt;&lt; <span class="string">&quot;升--水量正常&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">warning</span>() == <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;实际水容量&quot;</span> &lt;&lt; volume &lt;&lt; <span class="string">&quot;升--水量偏低&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">warning</span>() == <span class="number">3</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;实际水容量&quot;</span> &lt;&lt; volume &lt;&lt; <span class="string">&quot;升--水量不足&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> t;</span><br><span class="line"><span class="type">int</span> number, power, w_direction, w_power, volume, max_volume, state;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">cin &gt;&gt; t;</span><br><span class="line"><span class="keyword">while</span> (t--)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; number &gt;&gt; power &gt;&gt; w_direction &gt;&gt; w_power &gt;&gt; volume &gt;&gt; max_volume &gt;&gt; state;</span><br><span class="line"><span class="function">Hum_Fan <span class="title">app</span><span class="params">(number, power, w_direction, w_power, volume, max_volume, state)</span></span>;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line">app.<span class="built_in">control</span>(n);</span><br><span class="line">app.<span class="built_in">print</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="e-计重转换-期末模拟">E.计重转换（期末模拟）</h1><h2 id="题目描述">题目描述</h2><p>目前国际计重最基本的单位是克。在古代各个国家的计重单位是不同的。<br>中国使用斤、两、钱来表示重量，其中1斤=10两，1两=10钱<br>中国计重单位与克的关系为：1斤=500克，1两=50克，1钱=5克</p><p>英国使用磅、盎司、打兰来表示重量，其中1磅=16盎司，1盎司=16打兰<br>英国计重单位与克的关系为：1磅=512克，1盎司=32克，1打兰=2克</p><p>以下参考代码包含了抽象类Weight，中国计重和英国计重都继承了抽象类。<br>中国计重类新增了斤、两、钱三个属性，并新增了一个操作：计重转换Convert。<br>Convert能够把输入的克数转成中国计重，例如1234克转成2斤4两6钱4克，并且把数值放入斤、两、钱、克四个属性中<br>英国计重类新增了磅、盎司、打兰三个属性，并新增了两个操作：<br>1、计重转换Convert，功能与上述类似，例如2345克转成4磅9盎司4打兰1克，并且把数值放入对应的四个属性中<br>2、计重等价，重载类型转换运算符，实现将英国计重类的对象转换成中国计重类的对象，例如英国计重类对象en（2磅2盎司11打兰1克）等价于（转换成）中国计重类对象cn（2斤2两2钱1克）。</p><p>程序要求如下<br>1、参考代码框架不能做任何修改，在要求的地方添加代码<br>2、主函数不能有任何修改<br>以上数据纯粹为题目设计，方便计算，实际换算数据是不同的。</p><p>上述所有类属性都不是public，用面向对象思想和C++语言实现上述要求</p><p>----参考代码----</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">CN</span>; <span class="comment">//提前声明</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">EN</span>; <span class="comment">//提前声明</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 抽象类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Weight</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line"><span class="type">char</span> kind[<span class="number">20</span>]; <span class="comment">//计重类型</span></span><br><span class="line"><span class="type">int</span> gram; <span class="comment">// 克</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Weight</span>(<span class="type">const</span> <span class="type">char</span> tk[] = <span class="string">&quot;no name&quot;</span>, <span class="type">int</span> tg = <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">strcpy</span>(kind, tk);</span><br><span class="line">gram = tg;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">print</span><span class="params">(ostream&amp; out)</span> </span>= <span class="number">0</span>; <span class="comment">// 输出不同类型的计重信息</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 中国计重</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CN</span> : <span class="keyword">public</span> Weight</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// ....类定义自行编写</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 英国计重</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">EN</span> : <span class="keyword">public</span> Weight</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// ....类定义自行编写</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 以全局函数方式重载输出运算符，代码3-5行....自行编写</span></span><br><span class="line"><span class="comment">// 重载函数包含两个参数：ostream流对象、Weight类对象，参数可以是对象或对象引用</span></span><br><span class="line"><span class="comment">// 重载函数必须调用参数Weight对象的print方法</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 主函数</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> tw;</span><br><span class="line"><span class="comment">// 创建一个中国计重类对象cn</span></span><br><span class="line"><span class="comment">// 构造参数对应斤、两、钱、克、类型，其中克和类型是对应基类属性gram和kind</span></span><br><span class="line"><span class="function">CN <span class="title">cn</span><span class="params">(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="string">&quot;中国计重&quot;</span>)</span></span>;</span><br><span class="line">cin &gt;&gt; tw;</span><br><span class="line">cn.<span class="built_in">Convert</span>(tw); <span class="comment">// 把输入的克数转成中国计重</span></span><br><span class="line">cout &lt;&lt; cn;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建英国计重类对象en</span></span><br><span class="line"><span class="comment">// 构造参数对应磅、盎司、打兰、克、类型，其中克和类型是对应基类属性gram和kind</span></span><br><span class="line"><span class="function">EN <span class="title">en</span><span class="params">(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="string">&quot;英国计重&quot;</span>)</span></span>;</span><br><span class="line">cin &gt;&gt; tw;</span><br><span class="line">en.<span class="built_in">Convert</span>(tw); <span class="comment">// 把输入的克数转成英国计重</span></span><br><span class="line">cout &lt;&lt; en;</span><br><span class="line">cn = en; <span class="comment">// 把英国计重转成中国计重</span></span><br><span class="line">cout &lt;&lt; cn;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CN</span>; <span class="comment">//提前声明</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">EN</span>; <span class="comment">//提前声明</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 抽象类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Weight</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line"><span class="type">char</span> kind[<span class="number">20</span>]; <span class="comment">//计重类型</span></span><br><span class="line"><span class="type">int</span> gram; <span class="comment">// 克</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Weight</span>(<span class="type">const</span> <span class="type">char</span> tk[] = <span class="string">&quot;no name&quot;</span>, <span class="type">int</span> tg = <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">strcpy</span>(kind, tk);</span><br><span class="line">gram = tg;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">print</span><span class="params">(ostream&amp; out)</span> </span>= <span class="number">0</span>; <span class="comment">// 输出不同类型的计重信息</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 中国计重</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CN</span> : <span class="keyword">public</span> Weight</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line"><span class="type">int</span> jin, liang, qian;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">CN</span>(<span class="type">int</span> j,<span class="type">int</span> l,<span class="type">int</span> q,<span class="type">int</span> g,<span class="type">const</span> <span class="type">char</span> *p):<span class="built_in">jin</span>(j),<span class="built_in">liang</span>(l),<span class="built_in">qian</span>(q)</span><br><span class="line">&#123;</span><br><span class="line">gram = g;</span><br><span class="line"><span class="built_in">strcpy</span>(kind, p);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Convert</span><span class="params">(<span class="type">int</span> g)</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">print</span><span class="params">(ostream&amp; out)</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> CN :: <span class="built_in">Convert</span>(<span class="type">int</span> g)</span><br><span class="line">&#123;</span><br><span class="line">jin = g / <span class="number">500</span>;</span><br><span class="line">liang = g % <span class="number">500</span> / <span class="number">50</span>;</span><br><span class="line">qian = g % <span class="number">500</span> % <span class="number">50</span> / <span class="number">5</span>;</span><br><span class="line">gram = g % <span class="number">500</span> % <span class="number">50</span> % <span class="number">5</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CN::print</span><span class="params">(ostream&amp; out)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">out &lt;&lt; <span class="string">&quot;中国计重:&quot;</span> &lt;&lt; jin &lt;&lt; <span class="string">&quot;斤&quot;</span> &lt;&lt; liang &lt;&lt; <span class="string">&quot;两&quot;</span> &lt;&lt; qian &lt;&lt; <span class="string">&quot;钱&quot;</span> &lt;&lt; gram &lt;&lt; <span class="string">&quot;克&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 英国计重</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">EN</span> : <span class="keyword">public</span> Weight</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line"><span class="type">int</span> pound, ounce, beaten;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">EN</span>(<span class="type">int</span> p,<span class="type">int</span> o,<span class="type">int</span> b,<span class="type">int</span> g,<span class="type">const</span> <span class="type">char</span> *q):<span class="built_in">pound</span>(p),<span class="built_in">ounce</span>(o),<span class="built_in">beaten</span>(b)</span><br><span class="line">&#123;</span><br><span class="line">gram = g;</span><br><span class="line"><span class="built_in">strcpy</span>(kind, q);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Convert</span><span class="params">(<span class="type">int</span> g)</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">print</span><span class="params">(ostream&amp; out)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">operator</span> <span class="title">CN</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> g;</span><br><span class="line">g = pound * <span class="number">512</span> + ounce * <span class="number">32</span> + beaten * <span class="number">2</span> + gram;</span><br><span class="line"><span class="function">CN <span class="title">cn</span><span class="params">(g / <span class="number">500</span>, g % <span class="number">500</span> / <span class="number">50</span>, g % <span class="number">500</span> % <span class="number">50</span> / <span class="number">5</span>, g % <span class="number">500</span> % <span class="number">50</span> % <span class="number">5</span>, <span class="string">&quot;中国计重&quot;</span>)</span></span>;</span><br><span class="line"><span class="keyword">return</span> cn;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">EN::Convert</span><span class="params">(<span class="type">int</span> g)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">pound = g / <span class="number">512</span>;</span><br><span class="line">ounce = g % <span class="number">512</span> / <span class="number">32</span>;</span><br><span class="line">beaten = g % <span class="number">512</span> % <span class="number">32</span> / <span class="number">2</span>;</span><br><span class="line">gram = g % <span class="number">512</span> % <span class="number">32</span> % <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">EN::print</span><span class="params">(ostream&amp;out)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">out &lt;&lt; <span class="string">&quot;英国计重:&quot;</span> &lt;&lt; pound &lt;&lt; <span class="string">&quot;磅&quot;</span> &lt;&lt; ounce &lt;&lt; <span class="string">&quot;盎司&quot;</span> &lt;&lt; beaten &lt;&lt; <span class="string">&quot;打兰&quot;</span> &lt;&lt; gram &lt;&lt; <span class="string">&quot;克&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 以全局函数方式重载输出运算符，代码3-5行....自行编写</span></span><br><span class="line"><span class="comment">// 重载函数包含两个参数：ostream流对象、Weight类对象，参数可以是对象或对象引用</span></span><br><span class="line"><span class="comment">// 重载函数必须调用参数Weight对象的print方法</span></span><br><span class="line">ostream&amp; <span class="keyword">operator</span>&lt;&lt;(ostream&amp; out, Weight&amp; w)</span><br><span class="line">&#123;</span><br><span class="line">w.<span class="built_in">print</span>(out);</span><br><span class="line"><span class="keyword">return</span> out;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 主函数</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> tw;</span><br><span class="line"><span class="comment">// 创建一个中国计重类对象cn</span></span><br><span class="line"><span class="comment">// 构造参数对应斤、两、钱、克、类型，其中克和类型是对应基类属性gram和kind</span></span><br><span class="line"><span class="function">CN <span class="title">cn</span><span class="params">(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="string">&quot;中国计重&quot;</span>)</span></span>;</span><br><span class="line">cin &gt;&gt; tw;</span><br><span class="line">cn.<span class="built_in">Convert</span>(tw); <span class="comment">// 把输入的克数转成中国计重</span></span><br><span class="line">cout &lt;&lt; cn;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建英国计重类对象en</span></span><br><span class="line"><span class="comment">// 构造参数对应磅、盎司、打兰、克、类型，其中克和类型是对应基类属性gram和kind</span></span><br><span class="line"><span class="function">EN <span class="title">en</span><span class="params">(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="string">&quot;英国计重&quot;</span>)</span></span>;</span><br><span class="line">cin &gt;&gt; tw;</span><br><span class="line">en.<span class="built_in">Convert</span>(tw); <span class="comment">// 把输入的克数转成英国计重</span></span><br><span class="line">cout &lt;&lt; en;</span><br><span class="line">cn = en; <span class="comment">// 把英国计重转成中国计重</span></span><br><span class="line">cout &lt;&lt; cn;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面向对象程序设计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CPP_第14周</title>
      <link href="/posts/3420409433/"/>
      <url>/posts/3420409433/</url>
      
        <content type="html"><![CDATA[<h1 id="a-元素查找-函数模板">A.元素查找（函数模板）</h1><h2 id="题目描述">题目描述</h2><p>编写一个在数组中进行查找的函数模板，其中数组为具有_n_个元素，类型为T，要查找的元素为key。</p><p>注意：必须使用模板函数</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">template</span>&lt;<span class="keyword">class</span> Type&gt;</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">search</span><span class="params">(Type *a,Type key,<span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (a[i] == key)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; i + <span class="number">1</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&#x27;0&#x27;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> t;</span><br><span class="line"><span class="type">char</span> ch;</span><br><span class="line">cin &gt;&gt; t;</span><br><span class="line"><span class="keyword">while</span> (t--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">cin &gt;&gt; ch &gt;&gt; n;</span><br><span class="line"><span class="keyword">if</span> (ch == <span class="string">&#x27;I&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span>* a = <span class="keyword">new</span> <span class="type">int</span>[n];</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> key;</span><br><span class="line">cin &gt;&gt; key;</span><br><span class="line"><span class="built_in">search</span>(a, key, n);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (ch == <span class="string">&#x27;D&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">double</span>* a = <span class="keyword">new</span> <span class="type">double</span>[n];</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">double</span> key;</span><br><span class="line">cin &gt;&gt; key;</span><br><span class="line"><span class="built_in">search</span>(a, key, n);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (ch == <span class="string">&#x27;C&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span>* a = <span class="keyword">new</span> <span class="type">char</span>[n];</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">char</span> key;</span><br><span class="line">cin &gt;&gt; key;</span><br><span class="line"><span class="built_in">search</span>(a, key, n);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (ch == <span class="string">&#x27;S&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">string* a = <span class="keyword">new</span> string[n];</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a[i];</span><br><span class="line">&#125;</span><br><span class="line">string key;</span><br><span class="line">cin &gt;&gt; key;</span><br><span class="line"><span class="built_in">search</span>(a, key, n);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="b-谁的票数最高-函数模板">B.谁的票数最高（函数模板）</h1><h2 id="题目描述">题目描述</h2><p>某小镇要票选镇长，得票最高者当选。但由于投票机制不健全，导致每届投票时，候选人在投票系统的识别码类型不一致。请编写函数模板，能针对多种类型的数据，查找出得票最高的元素。其中，每届投票的选票有<em>n</em>张，识别码类型为T</p><p><strong>注意：必须使用模板函数</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> <span class="title class_">Type</span>&gt;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Max</span><span class="params">(Type *a, <span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> i, j;</span><br><span class="line">Type tmp;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n<span class="number">-1</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (j = i + <span class="number">1</span>; j &lt; n; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i]&gt;a[j])</span><br><span class="line">&#123;</span><br><span class="line">tmp = a[i];</span><br><span class="line">a[i] = a[j];</span><br><span class="line">a[j] = tmp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">Type max_person = a[<span class="number">0</span>];</span><br><span class="line">Type person = a[<span class="number">0</span>];</span><br><span class="line"><span class="type">int</span> max = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> num = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (person == a[i + <span class="number">1</span>])</span><br><span class="line">&#123;</span><br><span class="line">num++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (num &gt; max)</span><br><span class="line">&#123;</span><br><span class="line">max = num;</span><br><span class="line">max_person = person;</span><br><span class="line">&#125;</span><br><span class="line">num = <span class="number">1</span>;</span><br><span class="line">person = a[i + <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; max_person &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; max &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> t;</span><br><span class="line">cin &gt;&gt; t;</span><br><span class="line"><span class="keyword">while</span> (t--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> ch;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">cin &gt;&gt; ch &gt;&gt; n;</span><br><span class="line"><span class="keyword">if</span> (ch == <span class="string">&#x27;I&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span>* a = <span class="keyword">new</span> <span class="type">int</span>[n<span class="number">+1</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Max</span>(a, n);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (ch == <span class="string">&#x27;C&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span>* a = <span class="keyword">new</span> <span class="type">char</span>[n<span class="number">+1</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Max</span>(a, n);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (ch == <span class="string">&#x27;S&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">string* a = <span class="keyword">new</span> string[n<span class="number">+1</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Max</span>(a, n);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="c-抢票验证码-函数模板">C.抢票验证码（函数模板）</h1><h2 id="题目描述">题目描述</h2><p>对于某抢票系统，存在一个长度为六的验证码，验证码可以为整形，字符型，浮点型，我们认为验证码是有效的当且仅当验证码是非递减序列（递增或者相等）。现请你利用函数模板，完成对验证码的检验</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> <span class="title class_">Type</span>&gt;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">check</span><span class="params">(Type* a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt; <span class="number">6</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (a[i] - a[i - <span class="number">1</span>] &lt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Invalid&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Valid&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">char</span> ch;</span><br><span class="line"><span class="keyword">while</span> (cin &gt;&gt; ch)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (ch == <span class="string">&#x27;i&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span>* a = <span class="keyword">new</span> <span class="type">int</span>[<span class="number">6</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">6</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">check</span>(a);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (ch == <span class="string">&#x27;c&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span>* a = <span class="keyword">new</span> <span class="type">char</span>[<span class="number">6</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">6</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">check</span>(a);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (ch == <span class="string">&#x27;f&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">double</span>* a = <span class="keyword">new</span> <span class="type">double</span>[<span class="number">6</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">6</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">check</span>(a);</span><br><span class="line">&#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="d-矩阵类模板-类模板">D.矩阵类模板（类模板）</h1><h2 id="题目描述">题目描述</h2><p>设计一个矩阵类模板Matrix，支持任意数据类型的数据。</p><p>要求至少包含2个成员函数：矩阵转置函数transport、以及打印输出函数print</p><p>编写main函数进行测试，调用类的成员函数完成转置和输出。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">class</span> <span class="title class_">Type</span>&gt;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Matrix</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line"><span class="type">int</span> m;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">Type** mat;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Matrix</span>(<span class="type">int</span> _m, <span class="type">int</span> _n, Type** set);</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">transport</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">print</span><span class="params">()</span></span>;</span><br><span class="line">~<span class="built_in">Matrix</span>();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">class</span> <span class="title class_">Type</span>&gt;</span><br><span class="line">Matrix&lt;Type&gt;::<span class="built_in">Matrix</span>(<span class="type">int</span> _m, <span class="type">int</span> _n, Type** set) :<span class="built_in">m</span>(_m), <span class="built_in">n</span>(_n)</span><br><span class="line">&#123;</span><br><span class="line">mat = <span class="keyword">new</span> Type * [m];</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; m; i++)</span><br><span class="line">&#123;</span><br><span class="line">mat[i] = <span class="keyword">new</span> Type[n];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; m; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">&#123;</span><br><span class="line">mat[i][j]=set[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">class</span> <span class="title class_">Type</span>&gt;</span><br><span class="line"><span class="type">void</span> Matrix&lt;Type&gt;::<span class="built_in">transport</span>()</span><br><span class="line">&#123;</span><br><span class="line">Type** middle;</span><br><span class="line"><span class="type">int</span> i, j;</span><br><span class="line">middle = <span class="keyword">new</span> Type * [n];</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line">middle[i] = <span class="keyword">new</span> Type[m];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; m; j++)</span><br><span class="line">&#123;</span><br><span class="line">middle[i][j] = mat[j][i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; m; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">delete</span>[]mat[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">delete</span>[]mat;</span><br><span class="line"></span><br><span class="line">mat = <span class="keyword">new</span> Type *[n];</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line">mat[i] = <span class="keyword">new</span> Type[m];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; m; j++)</span><br><span class="line">&#123;</span><br><span class="line">mat[i][j] = middle[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> tmp;</span><br><span class="line">tmp = m;</span><br><span class="line">m = n;</span><br><span class="line">n = tmp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">class</span> <span class="title class_">Type</span>&gt;</span><br><span class="line"><span class="type">void</span> Matrix&lt;Type&gt;::<span class="built_in">print</span>()</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i, j;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; m; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; n - <span class="number">1</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; mat[i][j] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; mat[i][j] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">class</span> <span class="title class_">Type</span>&gt;</span><br><span class="line">Matrix&lt;Type&gt;::~<span class="built_in">Matrix</span>()</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; m; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">delete</span>[]mat[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">delete</span>[]mat;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> t;</span><br><span class="line"><span class="type">int</span> i, j;</span><br><span class="line"><span class="type">char</span> ch;</span><br><span class="line"><span class="type">int</span> m, n;</span><br><span class="line">cin &gt;&gt; t;</span><br><span class="line"><span class="keyword">while</span> (t--)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; ch &gt;&gt; m &gt;&gt; n;</span><br><span class="line"><span class="keyword">if</span> (ch == <span class="string">&#x27;I&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span>** mat = <span class="keyword">new</span> <span class="type">int</span>* [m];</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; m; i++)</span><br><span class="line">&#123;</span><br><span class="line">mat[i] = <span class="keyword">new</span> <span class="type">int</span>[n];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; m; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; mat[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">Matrix&lt;<span class="type">int</span>&gt; <span class="title">Mat</span><span class="params">(m, n, mat)</span></span>;</span><br><span class="line">Mat.<span class="built_in">transport</span>();</span><br><span class="line">Mat.<span class="built_in">print</span>();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (ch == <span class="string">&#x27;D&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">double</span>** mat = <span class="keyword">new</span> <span class="type">double</span>* [m];</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; m; i++)</span><br><span class="line">&#123;</span><br><span class="line">mat[i] = <span class="keyword">new</span> <span class="type">double</span>[n];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; m; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; mat[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">Matrix&lt;<span class="type">double</span>&gt; <span class="title">Mat</span><span class="params">(m, n, mat)</span></span>;</span><br><span class="line">Mat.<span class="built_in">transport</span>();</span><br><span class="line">Mat.<span class="built_in">print</span>();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (ch == <span class="string">&#x27;C&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span>** mat = <span class="keyword">new</span> <span class="type">char</span>* [m];</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; m; i++)</span><br><span class="line">&#123;</span><br><span class="line">mat[i] = <span class="keyword">new</span> <span class="type">char</span>[n];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; m; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; mat[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">Matrix&lt;<span class="type">char</span>&gt; <span class="title">Mat</span><span class="params">(m, n, mat)</span></span>;</span><br><span class="line">Mat.<span class="built_in">transport</span>();</span><br><span class="line">Mat.<span class="built_in">print</span>();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="e-简单类模板-类模板">E.简单类模板(类模板)</h1><h2 id="题目描述">题目描述</h2><p>定义一个列表类，该列表包含属性：数值列表（用长度为100的数组表示），数据长度（实际的数据个数）；包含的方法：初始化、插入、删除、打印，方法定义为：</p><p>1）初始化，接受外来参数，把数据保存在数值列表中，未使用的列表部分全部初始化为-1<br>2）插入，接受外来参数的插入位置和插入数值，插入位置从0开始计算，注意从插入位置开始，原有数据都要往后移动一位，且数据长度+1<br>3）删除，接受外来参数的删除位置，删除位置从0开始计算，注意从删除位置后一位开始，原有数据都要往前移动一位，且数据长度-1<br>4）打印，把包含的数据按位置顺序输出一行，数据之间单个空格隔开</p><p>使用类模板的方法，使得这个类支持整数int类型和浮点数double类型</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">class</span> <span class="title class_">Type</span>&gt;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">List</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">Type list[<span class="number">100</span>];</span><br><span class="line"><span class="type">int</span> num;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">List</span>(<span class="type">int</span> n);</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">insert</span><span class="params">(<span class="type">int</span> a,Type cl)</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">back</span><span class="params">(<span class="type">int</span> a)</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">print</span><span class="params">(<span class="type">int</span> n)</span></span>;</span><br><span class="line">~<span class="built_in">List</span>() &#123;&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">class</span> <span class="title class_">Type</span>&gt;</span><br><span class="line">List &lt;Type&gt;::<span class="built_in">List</span>(<span class="type">int</span> n): <span class="built_in">num</span>(n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; num; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; list[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = num; i &lt; <span class="number">100</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">list[i] = <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">class</span> <span class="title class_">Type</span>&gt;</span><br><span class="line"><span class="type">void</span> List&lt;Type&gt;::<span class="built_in">insert</span>(<span class="type">int</span> a,Type n)</span><br><span class="line">&#123;</span><br><span class="line">num++;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = num; i &gt; a; i--)</span><br><span class="line">&#123;</span><br><span class="line">list[i] = list[i - <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line">list[a] = n;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">class</span> <span class="title class_">Type</span>&gt;</span><br><span class="line"><span class="type">void</span> List&lt;Type&gt;::<span class="built_in">back</span>(<span class="type">int</span> a)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = a; i &lt; num; i++)</span><br><span class="line">&#123;</span><br><span class="line">list[i] = list[i + <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line">num++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">class</span> <span class="title class_">Type</span>&gt;</span><br><span class="line"><span class="type">void</span> List&lt;Type&gt;::<span class="built_in">print</span>(<span class="type">int</span> n)</span><br><span class="line">&#123;</span><br><span class="line">num = n;</span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; num<span class="number">-1</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; list[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; list[i] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> tmp = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (cin &gt;&gt; n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> start, end;</span><br><span class="line"><span class="keyword">if</span> (tmp == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> sta;</span><br><span class="line">List &lt;<span class="type">int</span>&gt;<span class="built_in">L1</span>(n);</span><br><span class="line">cin &gt;&gt; start &gt;&gt; sta;</span><br><span class="line">L<span class="number">1.</span><span class="built_in">insert</span>(start, sta);</span><br><span class="line">cin &gt;&gt; end;</span><br><span class="line">L<span class="number">1.</span><span class="built_in">back</span>(end);</span><br><span class="line">L<span class="number">1.</span><span class="built_in">print</span>(n);</span><br><span class="line">tmp = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (tmp == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">double</span> sta;</span><br><span class="line">List&lt;<span class="type">double</span>&gt;<span class="built_in">L2</span>(n);</span><br><span class="line">cin &gt;&gt; start &gt;&gt; sta;</span><br><span class="line">L<span class="number">2.</span><span class="built_in">insert</span>(start, sta);</span><br><span class="line">cin &gt;&gt; end;</span><br><span class="line">L<span class="number">2.</span><span class="built_in">back</span>(end);</span><br><span class="line">L<span class="number">2.</span><span class="built_in">print</span>(n);</span><br><span class="line">tmp = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面向对象程序设计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CPP_第13周</title>
      <link href="/posts/1443395296/"/>
      <url>/posts/1443395296/</url>
      
        <content type="html"><![CDATA[<h1 id="a-三维坐标点的平移-运算符重载">A.三维坐标点的平移（运算符重载）</h1><h2 id="题目描述">题目描述</h2><p>定义一个三维点Point类，利用友元函数重载&quot;++“和”–&quot;运算符，并区分这两种运算符的前置和后置运算。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">point</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> x;</span><br><span class="line"><span class="type">int</span> y;</span><br><span class="line"><span class="type">int</span> z;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">point</span>(<span class="type">int</span> X=<span class="number">0</span>,<span class="type">int</span> Y=<span class="number">0</span>,<span class="type">int</span> Z=<span class="number">0</span>);</span><br><span class="line">&#123;x=X;y=Y;z=Z;&#125;</span><br><span class="line"><span class="keyword">friend</span> point <span class="keyword">operator</span> ++(point &amp;a);</span><br><span class="line"><span class="keyword">friend</span> point <span class="keyword">operator</span> ++(point &amp;,<span class="type">int</span>);</span><br><span class="line"><span class="keyword">friend</span> point <span class="keyword">operator</span> --(point &amp;);</span><br><span class="line"><span class="keyword">friend</span> point <span class="keyword">operator</span> --(point &amp;,<span class="type">int</span>);</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">show</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;x=&quot;</span>&lt;&lt;x&lt;&lt;<span class="string">&#x27; &#x27;</span>&lt;&lt;<span class="string">&quot;y=&quot;</span>&lt;&lt;y&lt;&lt;<span class="string">&#x27;&#x27;&lt;&lt;&quot;z=&quot;&lt;&lt;z&lt;&lt;endl;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><p>要求如下：<br>1.实现Point类；<br>2.编写main函数，初始化1个Point对象，将这个对象++或–后赋给另外一个对象，并输出计算后对象的坐标信息。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">point</span> </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line"><span class="type">int</span> x;</span><br><span class="line"><span class="type">int</span> y;</span><br><span class="line"><span class="type">int</span> z;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">point</span>(<span class="type">int</span> X = <span class="number">0</span>, <span class="type">int</span> Y = <span class="number">0</span>, <span class="type">int</span> Z = <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">x = X;</span><br><span class="line">y = Y;</span><br><span class="line">z = Z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">set</span><span class="params">(<span class="type">int</span> _x, <span class="type">int</span> _y, <span class="type">int</span> _z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">x = _x;</span><br><span class="line">y = _y;</span><br><span class="line">z = _z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">friend</span> point <span class="keyword">operator</span>++(point&amp; a)</span><br><span class="line">&#123;</span><br><span class="line">a.x++;</span><br><span class="line">a.y++;</span><br><span class="line">a.z++;</span><br><span class="line"><span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">friend</span> point <span class="keyword">operator</span>++(point&amp; a, <span class="type">int</span> x)</span><br><span class="line">&#123;</span><br><span class="line"><span class="function">point <span class="title">p</span><span class="params">(a)</span></span>;</span><br><span class="line">a.x++;</span><br><span class="line">a.y++;</span><br><span class="line">a.z++;</span><br><span class="line"><span class="keyword">return</span> p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">friend</span> point <span class="keyword">operator</span>--(point&amp; a)</span><br><span class="line">&#123;</span><br><span class="line">a.x--;</span><br><span class="line">a.y--;</span><br><span class="line">a.z--;</span><br><span class="line"><span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">friend</span> point <span class="keyword">operator</span>--(point&amp; a, <span class="type">int</span> x)</span><br><span class="line">&#123;</span><br><span class="line"><span class="function">point <span class="title">p</span><span class="params">(a)</span></span>;</span><br><span class="line">a.x--;</span><br><span class="line">a.y--;</span><br><span class="line">a.z--;</span><br><span class="line"><span class="keyword">return</span> p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">show</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;x=&quot;</span> &lt;&lt; x &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; <span class="string">&quot;y=&quot;</span> &lt;&lt; y &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; <span class="string">&quot;z=&quot;</span> &lt;&lt; z &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> x, y, z;</span><br><span class="line">cin &gt;&gt; x &gt;&gt; y &gt;&gt; z;</span><br><span class="line"><span class="function">point <span class="title">p1</span><span class="params">(x, y, z)</span></span>;</span><br><span class="line">point p2;</span><br><span class="line">p1++;</span><br><span class="line">p<span class="number">1.</span><span class="built_in">show</span>();</span><br><span class="line">p<span class="number">1.</span><span class="built_in">set</span>(x, y, z);</span><br><span class="line">p2 = p1;</span><br><span class="line">p<span class="number">2.</span><span class="built_in">show</span>();</span><br><span class="line">p<span class="number">1.</span><span class="built_in">set</span>(x, y, z);</span><br><span class="line">(++p1).<span class="built_in">show</span>();</span><br><span class="line">p<span class="number">1.</span><span class="built_in">show</span>();</span><br><span class="line">p<span class="number">1.</span><span class="built_in">set</span>(x, y, z);</span><br><span class="line">p1--;</span><br><span class="line">p<span class="number">1.</span><span class="built_in">show</span>();</span><br><span class="line">p<span class="number">1.</span><span class="built_in">set</span>(x, y, z);</span><br><span class="line">p<span class="number">1.</span><span class="built_in">show</span>();</span><br><span class="line">p<span class="number">1.</span><span class="built_in">set</span>(x, y, z);</span><br><span class="line">(--p1).<span class="built_in">show</span>();</span><br><span class="line">p<span class="number">1.</span><span class="built_in">show</span>();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="b-货币加减-运算符重载">B.货币加减（运算符重载）</h1><h2 id="题目描述">题目描述</h2><p>定义CMoney类，包含元、角、分三个数据成员，<strong>友元函数重载‘+’、’-’，实现货币的加减运算</strong>（假设a-b中a的金额始终大于等于b的金额），<strong>重载输入及输出，实现货币的输入，输出</strong>。<br>读入最初的货币值，对其不断进行加、减操作，输出结果。<br>可根据需要，为CMoney类添加构造函数或其它成员函数。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CMoney</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line"><span class="type">int</span> yuan;</span><br><span class="line"><span class="type">int</span> corn;</span><br><span class="line"><span class="type">int</span> coin;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">CMoney</span>()&#123;&#125;</span><br><span class="line"><span class="built_in">CMoney</span>(<span class="type">int</span> y,<span class="type">int</span> cr,<span class="type">int</span> ci):<span class="built_in">yuan</span>(y),<span class="built_in">corn</span>(cr),<span class="built_in">coin</span>(ci)&#123;&#125;</span><br><span class="line"><span class="keyword">friend</span> CMoney <span class="keyword">operator</span> +(CMoney&amp; a, CMoney&amp; b)</span><br><span class="line">&#123;</span><br><span class="line">CMoney c;</span><br><span class="line"><span class="type">int</span> c1, c2, sum;</span><br><span class="line">c1 = a.yuan * <span class="number">100</span> + a.corn * <span class="number">10</span> + a.coin;</span><br><span class="line">c2 = b.yuan * <span class="number">100</span> + b.corn * <span class="number">10</span> + b.coin;</span><br><span class="line">sum = c1 + c2;</span><br><span class="line">c.yuan = sum / <span class="number">100</span>;</span><br><span class="line">c.corn = (sum / <span class="number">10</span>) % <span class="number">10</span>;</span><br><span class="line">c.coin = sum % <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line"><span class="keyword">return</span> c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">friend</span> CMoney <span class="keyword">operator</span>-(CMoney&amp; a, CMoney&amp; b)</span><br><span class="line">&#123;</span><br><span class="line">CMoney c;</span><br><span class="line"><span class="type">int</span> c1, c2, sum;</span><br><span class="line">c1 = a.yuan * <span class="number">100</span> + a.corn * <span class="number">10</span> + a.coin;</span><br><span class="line">c2 = b.yuan * <span class="number">100</span> + b.corn * <span class="number">10</span> + b.coin;</span><br><span class="line">sum = c1 - c2;</span><br><span class="line">c.yuan = sum / <span class="number">100</span>;</span><br><span class="line">c.corn = (sum / <span class="number">10</span>) % <span class="number">10</span>;</span><br><span class="line">c.coin = sum % <span class="number">10</span>;</span><br><span class="line"><span class="keyword">return</span> c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">friend</span> ostream&amp; <span class="keyword">operator</span> &lt;&lt;(ostream&amp; out, CMoney&amp; a)</span><br><span class="line">&#123;</span><br><span class="line">out &lt;&lt; a.yuan &lt;&lt; <span class="string">&quot;元&quot;</span> &lt;&lt; a.corn &lt;&lt; <span class="string">&quot;角&quot;</span> &lt;&lt; a.coin &lt;&lt; <span class="string">&quot;分&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> out;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">friend</span> istream&amp; <span class="keyword">operator</span>&gt;&gt;(istream&amp; input, CMoney&amp; a)</span><br><span class="line">&#123;</span><br><span class="line">input &gt;&gt; a.yuan &gt;&gt; a.corn &gt;&gt; a.coin;</span><br><span class="line"><span class="keyword">return</span> input;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> t;</span><br><span class="line"><span class="type">int</span> y, j, f;</span><br><span class="line">string a;</span><br><span class="line">cin &gt;&gt; t;</span><br><span class="line"><span class="keyword">while</span> (t--)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; y &gt;&gt; j &gt;&gt; f;</span><br><span class="line"><span class="function">CMoney <span class="title">m1</span><span class="params">(y, j, f)</span></span>;</span><br><span class="line">CMoney m;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line"><span class="keyword">while</span>(a!=<span class="string">&quot;stop&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (a == <span class="string">&quot;add&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; y &gt;&gt; j &gt;&gt; f;</span><br><span class="line"><span class="function">CMoney <span class="title">m2</span><span class="params">(y, j, f)</span></span>;</span><br><span class="line">m = m1 + m2;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (a == <span class="string">&quot;minus&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; y &gt;&gt; j &gt;&gt; f;</span><br><span class="line"><span class="function">CMoney <span class="title">m2</span><span class="params">(y, j, f)</span></span>;</span><br><span class="line">m = m1 - m2;</span><br><span class="line">&#125;</span><br><span class="line">m1 = m;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; m;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="c-时钟调整-运算符前后增量">C.时钟调整（运算符前后增量）</h1><h2 id="题目描述">题目描述</h2><p>假定一个时钟包含时、分、秒三个属性，取值范围分别为0~11，0~59，0~59，具体要求如下：<br>1、用一元运算符++，并且是前增量的方法，实现时钟的调快操作。例如要把时钟调快5秒，则执行5次”  ++&lt;对象&gt; “ 的操作<br>2、用一元运算符–，并且是后增量的方法，实现时钟的调慢操作。例如要把时钟调慢10秒，则执行10次” &lt;对象&gt;-- “的操作<br>3、用构造函数的方法实现时钟对象的初始化，用输出函数实现时钟信息的输出<br>clock和time是系统内部函数，所以不要用来做类名或者其他</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CClock</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line"><span class="type">int</span> hour;</span><br><span class="line"><span class="type">int</span> minute;</span><br><span class="line"><span class="type">int</span> second;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">CClock</span>(<span class="type">int</span> h, <span class="type">int</span> m, <span class="type">int</span> s) :<span class="built_in">hour</span>(h), <span class="built_in">minute</span>(m), <span class="built_in">second</span>(s) &#123;&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">show</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; hour &lt;&lt; <span class="string">&quot;:&quot;</span> &lt;&lt; minute &lt;&lt; <span class="string">&quot;:&quot;</span> &lt;&lt; second &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"> CClock <span class="keyword">operator</span>++()</span><br><span class="line">&#123;</span><br><span class="line">second++;</span><br><span class="line"><span class="keyword">if</span> (second &gt; <span class="number">59</span>)</span><br><span class="line">&#123;</span><br><span class="line">     second = <span class="number">0</span>;</span><br><span class="line">minute++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (minute &gt; <span class="number">59</span>)</span><br><span class="line">&#123;</span><br><span class="line">minute = <span class="number">0</span>;</span><br><span class="line">hour++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (hour &gt; <span class="number">11</span>)</span><br><span class="line">&#123;</span><br><span class="line">hour = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">&#125;</span><br><span class="line"> CClock <span class="keyword">operator</span>--(<span class="type">int</span>)</span><br><span class="line">&#123;</span><br><span class="line"> <span class="function">CClock <span class="title">temp</span><span class="params">(*<span class="keyword">this</span>)</span></span>;</span><br><span class="line">second--;</span><br><span class="line"><span class="keyword">if</span> (second &lt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">second = <span class="number">59</span>;</span><br><span class="line">minute--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (minute &lt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">minute = <span class="number">59</span>;</span><br><span class="line">hour--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (hour &lt; <span class="number">0</span>)</span><br><span class="line">hour = <span class="number">11</span>;</span><br><span class="line"><span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> hour, minute, second;</span><br><span class="line"><span class="type">int</span> t;</span><br><span class="line">cin &gt;&gt; hour &gt;&gt; minute &gt;&gt; second;</span><br><span class="line"><span class="function">CClock <span class="title">c</span><span class="params">(hour, minute, second)</span></span>;</span><br><span class="line">cin &gt;&gt; t;</span><br><span class="line"><span class="keyword">while</span> (t--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> tmp;</span><br><span class="line">cin &gt;&gt; tmp;</span><br><span class="line"><span class="type">int</span> num = <span class="built_in">abs</span>(tmp);</span><br><span class="line"><span class="keyword">while</span> (num--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (tmp &gt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">++c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">c--;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">c.<span class="built_in">show</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="d-x的放大与缩小-运算符重载">D.X的放大与缩小（运算符重载）</h1><h2 id="题目描述">题目描述</h2><p>X字母可以放大和缩小，变为n行X（n=1,3,5,7,9,…,21）。例如，3行x图案如下：<br><img src="https://raw.githubusercontent.com/crayz-l/Learning_picgo/main/img/CPP_week13_1" alt="image.png"></p><p>现假设一个n行（n&gt;0，奇数）X图案，遥控器可以控制X图案的放大与缩小。遥控器有5个按键，1）show，显示当前X图案；2）show++, 显示当前X图案，再放大图案，n+2；3）++show，先放大图案，n+2，再显示图案；4）show–，显示当前X图案，再缩小图案，n-2；5）–show，先缩小图案，n-2，再显示图案。假设X图案的放大和缩小在1-21之间。n=1时，缩小不起作用，n=21时，放大不起作用。</p><p>用类CXGraph表示X图案及其放大、缩小、显示。主函数模拟遥控器，代码如下，不可修改。请补充CXGraph类的定义和实现。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> t, n;</span><br><span class="line">    string command;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="function">CXGraph <span class="title">xGraph</span><span class="params">(n)</span></span>;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span> (t--)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; command;</span><br><span class="line">        <span class="keyword">if</span> (command == <span class="string">&quot;show++&quot;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; xGraph++ &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(command == <span class="string">&quot;++show&quot;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; ++xGraph &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (command == <span class="string">&quot;show--&quot;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; xGraph-- &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (command == <span class="string">&quot;--show&quot;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; --xGraph &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (command == <span class="string">&quot;show&quot;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; xGraph &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CXGraph</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">CXGraph</span>(<span class="type">int</span> _n):<span class="built_in">n</span>(_n)&#123;&#125;</span><br><span class="line"><span class="keyword">friend</span> CXGraph <span class="keyword">operator</span> ++(CXGraph&amp; a)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(a.n!=<span class="number">21</span>)</span><br><span class="line">&#123;</span><br><span class="line">a.n+=<span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">friend</span> CXGraph <span class="keyword">operator</span> ++(CXGraph&amp; a, <span class="type">int</span>)</span><br><span class="line">&#123;</span><br><span class="line">CXGraph b=a;</span><br><span class="line"><span class="keyword">if</span> (a.n != <span class="number">21</span>)</span><br><span class="line">&#123;</span><br><span class="line">a.n+=<span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">friend</span> CXGraph <span class="keyword">operator</span> --(CXGraph&amp; a)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (a.n != <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">a.n-=<span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">friend</span> CXGraph <span class="keyword">operator</span> --(CXGraph&amp; a, <span class="type">int</span>)</span><br><span class="line">&#123;</span><br><span class="line">CXGraph b = a;</span><br><span class="line"><span class="keyword">if</span> (a.n != <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">a.n-=<span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">friend</span> ostream&amp; <span class="keyword">operator</span>&lt;&lt;(ostream&amp; out, CXGraph <span class="type">const</span>&amp; a)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i, j, k;</span><br><span class="line">k = a.n;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;(a.n<span class="number">+1</span>)/<span class="number">2</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; (a.n - k) / <span class="number">2</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line">out &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (j = k; j &gt; <span class="number">0</span>; j--)</span><br><span class="line">&#123;</span><br><span class="line">out &lt;&lt; <span class="string">&quot;X&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">out &lt;&lt; endl;</span><br><span class="line">k -= <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line">k = <span class="number">3</span>;</span><br><span class="line"><span class="keyword">for</span> (i = (a.n + <span class="number">1</span>) / <span class="number">2</span>; i &lt; a.n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (j = (a.n - k) / <span class="number">2</span>; j &gt; <span class="number">0</span>; j--)</span><br><span class="line">&#123;</span><br><span class="line">out &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; k; j++)</span><br><span class="line">&#123;</span><br><span class="line">out &lt;&lt; <span class="string">&quot;X&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">out &lt;&lt; endl;</span><br><span class="line">k += <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> out;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> t, n;</span><br><span class="line">string command;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="function">CXGraph <span class="title">xGraph</span><span class="params">(n)</span></span>;</span><br><span class="line">cin &gt;&gt; t;</span><br><span class="line"><span class="keyword">while</span> (t--)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; command;</span><br><span class="line"><span class="keyword">if</span> (command == <span class="string">&quot;show++&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; xGraph++ &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (command == <span class="string">&quot;++show&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; ++xGraph &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (command == <span class="string">&quot;show--&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; xGraph-- &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (command == <span class="string">&quot;--show&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; --xGraph &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (command == <span class="string">&quot;show&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; xGraph &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="e-矩形关系-运算符重载">E.矩形关系（运算符重载）</h1><h2 id="题目描述">题目描述</h2><p>假设坐标采用二维平面坐标。</p><p>定义点类CPoint，包含属性x,y（整型）。方法有：带参构造函数，getX，getY分别返回点的x坐标，y坐标。<br>定义矩形类CRectangle，包含属性：矩形的左上角坐标leftPoint，右下角坐标rightPoint。类中方法有：<br>1）带参构造函数，初始化矩形的左上角、右下角<br>2）重载&gt;运算符，参数为CPoint点对象，假设为p，若p在矩形内，返回true,否则返回false。<br>3）重载&gt;运算符，第一个矩形若包含第二个矩形（部分边界可以相等），返回true，否则返回false。（要求该函数调用2）实现）<br>4）重载==运算符，判断两个矩形是否一致，返回true或false。<br>5）重载*运算符，判断两个矩形是否有重叠部分，返回true或false。<br>6）重载类型转换运算符，计算矩形的面积并返回，面积是整型。<br>7）重载&lt;&lt;运算符，输出矩形的两个角坐标，具体格式见样例。<br>输入2个矩形，计算面积，判断矩形的关系。主函数如下，不可修改。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> t, x1, x2, y1, y2;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span> (t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 矩形1的左上角、右下角</span></span><br><span class="line">        cin &gt;&gt; x1 &gt;&gt; y1 &gt;&gt; x2 &gt;&gt; y2;</span><br><span class="line">        <span class="function">CRectangle <span class="title">rect1</span><span class="params">(x1, y1, x2, y2)</span></span>;</span><br><span class="line">        <span class="comment">// 矩形2的左上角、右下角</span></span><br><span class="line">        cin &gt;&gt; x1 &gt;&gt; y1 &gt;&gt; x2 &gt;&gt; y2;</span><br><span class="line">        <span class="function">CRectangle <span class="title">rect2</span><span class="params">(x1, y1, x2, y2)</span></span>;</span><br><span class="line">        <span class="comment">// 输出矩形1的坐标及面积</span></span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;矩形1:&quot;</span> &lt;&lt; rect1 &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; (<span class="type">int</span>)rect1 &lt;&lt; endl;</span><br><span class="line">        <span class="comment">// 输出矩形2的坐标及面积</span></span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;矩形2:&quot;</span> &lt;&lt; rect2 &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; (<span class="type">int</span>)rect2 &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">if</span> (rect1 == rect2)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;矩形1和矩形2相等&quot;</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (rect2 &gt; rect1)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;矩形2包含矩形1&quot;</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (rect1 &gt; rect2)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;矩形1包含矩形2&quot;</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (rect1 * rect2)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;矩形1和矩形2相交&quot;</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;矩形1和矩形2不相交&quot;</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可根据需要，添加构造函数和析构函数。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CPoint</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="type">int</span> x;</span><br><span class="line"><span class="type">int</span> y;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">CPoint</span>() &#123;&#125;</span><br><span class="line"><span class="built_in">CPoint</span>(<span class="type">int</span> _x, <span class="type">int</span> _y) :<span class="built_in">x</span>(_x), <span class="built_in">y</span>(_y) &#123;&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">getX</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">getY</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> y;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CRectangele</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">CPoint leftPoint;</span><br><span class="line">CPoint rightPoint;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">CRectangele</span>() &#123;&#125;</span><br><span class="line"><span class="built_in">CRectangele</span>(<span class="type">int</span> x1, <span class="type">int</span> y1, <span class="type">int</span> x2, <span class="type">int</span> y2) :<span class="built_in">leftPoint</span>(x1, y1), <span class="built_in">rightPoint</span>(x2, y2) &#123;&#125;</span><br><span class="line"><span class="keyword">friend</span>  ostream&amp; <span class="keyword">operator</span>&lt;&lt;(ostream&amp; out, CRectangele&amp; a)</span><br><span class="line">&#123;</span><br><span class="line">out &lt;&lt; a.leftPoint.<span class="built_in">getX</span>() &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; a.leftPoint.<span class="built_in">getY</span>() &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; a.rightPoint.<span class="built_in">getX</span>() &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; a.rightPoint.<span class="built_in">getY</span>();</span><br><span class="line"><span class="keyword">return</span> out;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">bool</span>  <span class="keyword">operator</span>&gt;(CPoint&amp; p)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (p.<span class="built_in">getX</span>() &gt;= leftPoint.<span class="built_in">getX</span>() &amp;&amp; p.<span class="built_in">getX</span>() &lt;= rightPoint.<span class="built_in">getX</span>() &amp;&amp; p.<span class="built_in">getY</span>() &gt;= rightPoint.<span class="built_in">getY</span>() &amp;&amp; p.<span class="built_in">getY</span>() &lt;= leftPoint.<span class="built_in">getY</span>())</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">bool</span> <span class="keyword">operator</span>&gt;(CRectangele&amp; r)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (r.leftPoint.<span class="built_in">getX</span>() &gt;= leftPoint.<span class="built_in">getX</span>() &amp;&amp; r.leftPoint.<span class="built_in">getX</span>() &lt;= rightPoint.<span class="built_in">getX</span>() &amp;&amp; r.leftPoint.<span class="built_in">getY</span>() &gt;= rightPoint.<span class="built_in">getY</span>() &amp;&amp; r.leftPoint.<span class="built_in">getY</span>() &lt;= leftPoint.<span class="built_in">getY</span>() &amp;&amp; r.rightPoint.<span class="built_in">getX</span>() &gt;= leftPoint.<span class="built_in">getX</span>() &amp;&amp; r.rightPoint.<span class="built_in">getX</span>() &lt;= rightPoint.<span class="built_in">getX</span>() &amp;&amp; r.rightPoint.<span class="built_in">getY</span>() &gt;= rightPoint.<span class="built_in">getY</span>() &amp;&amp; r.rightPoint.<span class="built_in">getY</span>() &lt;= leftPoint.<span class="built_in">getY</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">bool</span> <span class="keyword">operator</span>==(CRectangele&amp; r)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (leftPoint.<span class="built_in">getX</span>() == r.leftPoint.<span class="built_in">getX</span>() &amp;&amp; leftPoint.<span class="built_in">getY</span>() == r.leftPoint.<span class="built_in">getY</span>() &amp;&amp; rightPoint.<span class="built_in">getX</span>() == r.rightPoint.<span class="built_in">getX</span>() &amp;&amp; rightPoint.<span class="built_in">getY</span>() == r.rightPoint.<span class="built_in">getY</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">bool</span> <span class="keyword">operator</span>*(CRectangele&amp; r)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">abs</span>(((leftPoint.<span class="built_in">getX</span>() + rightPoint.<span class="built_in">getX</span>()) / <span class="number">2</span>) - ((r.leftPoint.<span class="built_in">getX</span>() + r.rightPoint.<span class="built_in">getX</span>()) / <span class="number">2</span>)) &lt;= (((rightPoint.<span class="built_in">getX</span>() - leftPoint.<span class="built_in">getX</span>()) + (r.rightPoint.<span class="built_in">getX</span>() - r.leftPoint.<span class="built_in">getX</span>())) / <span class="number">2</span>) &amp;&amp;</span><br><span class="line"><span class="built_in">abs</span>(((leftPoint.<span class="built_in">getY</span>() + rightPoint.<span class="built_in">getY</span>()) / <span class="number">2</span>) - ((r.leftPoint.<span class="built_in">getY</span>() + r.rightPoint.<span class="built_in">getY</span>()) / <span class="number">2</span>)) &lt;= (((leftPoint.<span class="built_in">getY</span>() - rightPoint.<span class="built_in">getY</span>()) + (r.leftPoint.<span class="built_in">getY</span>() - r.rightPoint.<span class="built_in">getY</span>())) / <span class="number">2</span>))</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">operator</span> <span class="title">int</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> sum;</span><br><span class="line">sum = (rightPoint.<span class="built_in">getX</span>() - leftPoint.<span class="built_in">getX</span>()) * (leftPoint.<span class="built_in">getY</span>() - rightPoint.<span class="built_in">getY</span>());</span><br><span class="line"><span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> t, x1, x2, y1, y2;</span><br><span class="line">cin &gt;&gt; t;</span><br><span class="line"><span class="keyword">while</span> (t--)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; x1 &gt;&gt; y1 &gt;&gt; x2 &gt;&gt; y2;</span><br><span class="line"><span class="function">CRectangele <span class="title">rect1</span><span class="params">(x1, y1, x2, y2)</span></span>;</span><br><span class="line">cin &gt;&gt; x1 &gt;&gt; y1 &gt;&gt; x2 &gt;&gt; y2;</span><br><span class="line"><span class="function">CRectangele <span class="title">rect2</span><span class="params">(x1, y1, x2, y2)</span></span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;矩形1:&quot;</span> &lt;&lt; rect1 &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; (<span class="type">int</span>)rect1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;矩形2:&quot;</span> &lt;&lt; rect2 &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; (<span class="type">int</span>)rect2 &lt;&lt; endl;</span><br><span class="line"><span class="keyword">if</span> (rect1 == rect2)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;矩形1和矩形2相等&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (rect2 &gt; rect1)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;矩形2包含矩形1&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (rect1 &gt; rect2)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;矩形1包含矩形2&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (rect1 * rect2)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;矩形1和矩形2相交&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;矩形1和矩形2不相交&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面向对象程序设计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CPP_第12周</title>
      <link href="/posts/4004778373/"/>
      <url>/posts/4004778373/</url>
      
        <content type="html"><![CDATA[<h1 id="a-分数的加减乘除-运算符重载">A.分数的加减乘除（运算符重载）</h1><h2 id="题目描述">题目描述</h2><p>Fraction类的基本形式如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定义Fraction类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Fraction</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="type">int</span> fz, fm;</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">commonDivisor</span><span class="params">()</span></span>; <span class="comment">// 计算最大公约数</span></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">contracted</span><span class="params">()</span></span>; <span class="comment">// 分数化简</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">Fraction</span>(<span class="type">int</span> = <span class="number">0</span>, <span class="type">int</span> = <span class="number">1</span>);</span><br><span class="line">    <span class="built_in">Fraction</span>(Fraction&amp;);</span><br><span class="line">    Fraction <span class="keyword">operator</span>+(Fraction);</span><br><span class="line">    Fraction <span class="keyword">operator</span>-(Fraction);</span><br><span class="line">    Fraction <span class="keyword">operator</span>*(Fraction);</span><br><span class="line">    Fraction <span class="keyword">operator</span>/(Fraction);</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">set</span><span class="params">(<span class="type">int</span> = <span class="number">0</span>, <span class="type">int</span> = <span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">display</span><span class="params">()</span></span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>要求如下：</p><p>1.实现Fraction类；common_divisor()和contracted()函数体可为空，不实现具体功能。<br>2.编写main函数，初始化两个Fraction对象的，计算它们之间的加减乘除。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Fraction</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="type">int</span> fz, fm;</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">commonDivisor</span><span class="params">()</span> </span>&#123;&#125;;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">contracted</span><span class="params">()</span> </span>&#123;&#125;;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">Fraction</span>(<span class="type">int</span> a = <span class="number">0</span>, <span class="type">int</span> b = <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        fz = a;</span><br><span class="line">        fm = b;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">Fraction</span>(Fraction&amp; a)</span><br><span class="line">    &#123;</span><br><span class="line">        fz = a.fz;</span><br><span class="line">        fm = a.fm;</span><br><span class="line">    &#125;</span><br><span class="line">    Fraction <span class="keyword">operator</span>+(Fraction&amp; a)</span><br><span class="line">    &#123;</span><br><span class="line">        Fraction A;</span><br><span class="line">        A.fz = fz * a.fm + a.fz * fm;</span><br><span class="line">        A.fm = fm * a.fm;</span><br><span class="line">        <span class="keyword">return</span> A;</span><br><span class="line">    &#125;</span><br><span class="line">    Fraction <span class="keyword">operator</span>-(Fraction&amp; a)</span><br><span class="line">    &#123;</span><br><span class="line">        Fraction A;</span><br><span class="line">        A.fz = fz * a.fm - a.fz * fm;</span><br><span class="line">        A.fm = fm * a.fm;</span><br><span class="line">        <span class="keyword">return</span> A;</span><br><span class="line">    &#125;</span><br><span class="line">    Fraction <span class="keyword">operator</span>*(Fraction&amp; a)</span><br><span class="line">    &#123;</span><br><span class="line">        Fraction A;</span><br><span class="line">        A.fz = fz * a.fz;</span><br><span class="line">        A.fm = fm * a.fm;</span><br><span class="line">        <span class="keyword">return</span> A;</span><br><span class="line">    &#125;</span><br><span class="line">    Fraction <span class="keyword">operator</span>/(Fraction&amp; a)</span><br><span class="line">    &#123;</span><br><span class="line">        Fraction A;</span><br><span class="line">        A.fz = fz * a.fm;</span><br><span class="line">        A.fm = fm * a.fz;</span><br><span class="line">        <span class="keyword">return</span> A;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">set</span><span class="params">(<span class="type">int</span> a = <span class="number">0</span>, <span class="type">int</span> b = <span class="number">1</span>)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        fz = a;</span><br><span class="line">        fm = b;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">display</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;fraction=&quot;</span> &lt;&lt; fz &lt;&lt; <span class="string">&quot;/&quot;</span> &lt;&lt; fm &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a, b;</span><br><span class="line">    cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line">    <span class="function">Fraction <span class="title">x</span><span class="params">(a, b)</span></span>;</span><br><span class="line">    cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line">    <span class="function">Fraction <span class="title">y</span><span class="params">(a, b)</span></span>;</span><br><span class="line">    Fraction z;</span><br><span class="line">    z = x + y;</span><br><span class="line">    z.<span class="built_in">display</span>();</span><br><span class="line">    z = x - y;</span><br><span class="line">    z.<span class="built_in">display</span>();</span><br><span class="line">    z = x * y;</span><br><span class="line">    z.<span class="built_in">display</span>();</span><br><span class="line">    z = x / y;</span><br><span class="line">    z.<span class="built_in">display</span>();</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="b-复数的加减乘运算-运算符重载">B.复数的加减乘运算（运算符重载）</h1><h2 id="题目描述">题目描述</h2><p>定义一个复数类，通过重载运算符：+、-、*，实现两个复数之间的各种运算。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Complex</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="type">float</span> real, image;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">Complex</span>(<span class="type">float</span> x = <span class="number">0</span>, <span class="type">float</span> y = <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">friend</span> Complex <span class="keyword">operator</span>+(Complex&amp;, Complex&amp;);</span><br><span class="line">    <span class="keyword">friend</span> Complex <span class="keyword">operator</span>-(Complex&amp;, Complex&amp;);</span><br><span class="line">    <span class="keyword">friend</span> Complex <span class="keyword">operator</span>*(Complex&amp;, Complex&amp;);</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">show</span><span class="params">()</span></span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>要求如下：</p><p>1.实现Complex类；<br>2.编写main函数，初始化两个Complex对象，计算它们之间的加减乘，并输出结果。<br>复数相乘的运算规则<br>设z1=a+bi，z2=c+di(a、b、c、d∈R)是任意两个复数，那么它们的积(a+bi)(c+di)=(ac-bd)+(bc+ad)i.</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Complex</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="type">float</span> real, image;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Complex</span>()&#123;&#125;</span><br><span class="line"><span class="built_in">Complex</span>(<span class="type">float</span> x , <span class="type">float</span> y)</span><br><span class="line">&#123;</span><br><span class="line">real = x;</span><br><span class="line">image = y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">friend</span> Complex <span class="keyword">operator</span>+(Complex&amp; a, Complex&amp; b)</span><br><span class="line">&#123;</span><br><span class="line">Complex c;</span><br><span class="line">c.real = a.real + b.real;</span><br><span class="line">c.image = a.image + b.image;</span><br><span class="line"><span class="keyword">return</span> c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">friend</span> Complex <span class="keyword">operator</span>-(Complex&amp; a, Complex&amp; b)</span><br><span class="line">&#123;</span><br><span class="line">Complex c;</span><br><span class="line">c.real = a.real - b.real;</span><br><span class="line">c.image = a.image - b.image;</span><br><span class="line"><span class="keyword">return</span> c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">friend</span> Complex <span class="keyword">operator</span>*(Complex&amp; a, Complex&amp; b)</span><br><span class="line">&#123;</span><br><span class="line">Complex c;</span><br><span class="line">c.real = a.real * b.real - a.image * b.image;</span><br><span class="line">c.image = a.image * b.real + a.real * b.image;</span><br><span class="line"><span class="keyword">return</span> c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">show</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Real=&quot;</span> &lt;&lt; real &lt;&lt; <span class="string">&quot; Image=&quot;</span> &lt;&lt; image &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> a, b, c, d;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b &gt;&gt; c &gt;&gt; d;</span><br><span class="line"><span class="function">Complex <span class="title">c1</span><span class="params">(a, b)</span></span>;</span><br><span class="line"><span class="function">Complex <span class="title">c2</span><span class="params">(c, d)</span></span>;</span><br><span class="line">Complex c3;</span><br><span class="line">c3 = c1 + c2;</span><br><span class="line">c<span class="number">3.</span><span class="built_in">show</span>();</span><br><span class="line">c3 = c1 - c2;</span><br><span class="line">c<span class="number">3.</span><span class="built_in">show</span>();</span><br><span class="line">c3 = c1 * c2;</span><br><span class="line">c<span class="number">3.</span><span class="built_in">show</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="c-向量的加减-运算符重载">C.向量的加减（运算符重载）</h1><h2 id="题目描述">题目描述</h2><p>设向量X=(x1,x2,…,xn)和Y=(y1,y2…,yn),它们之间的加、减分别定义为：</p><p>X+Y=(x1+y1,x2+y2,…,xn+yn)<br>  X-Y=(x1-y1,x2-y2,…,xn-yn)</p><p>编程序定义向量类Vector ,重载运算符“+”、“-”,实现向量之间的加、减运算;并编写print函数作为向量的输出操作。</p><p>Vector类的基本形式如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Vector</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="type">int</span> vec[<span class="number">5</span>];</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">Vector</span>(<span class="type">int</span> v[]);</span><br><span class="line">    <span class="built_in">Vector</span>();</span><br><span class="line">    <span class="built_in">Vector</span>(<span class="type">const</span> Vector&amp; obj);</span><br><span class="line">    Vector <span class="keyword">operator</span> +(<span class="type">const</span> Vector&amp; obj);</span><br><span class="line">    Vector <span class="keyword">operator</span> -(<span class="type">const</span> Vector&amp; obj);</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">print</span><span class="params">()</span></span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>要求如下：<br>1.实现Vector类；<br>2.编写main函数，初始化两个Vector对象的，计算它们之间的加减，并输出结果。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Vector</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="type">int</span> vec[<span class="number">5</span>];</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Vector</span>(<span class="type">int</span> v[<span class="number">5</span>])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">vec[i] = v[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Vector</span>()&#123;&#125;</span><br><span class="line"><span class="built_in">Vector</span>(<span class="type">const</span> Vector&amp; obj)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">vec[i] = obj.vec[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">Vector <span class="keyword">operator</span>+(<span class="type">const</span> Vector&amp; obj)</span><br><span class="line">&#123;</span><br><span class="line">Vector tmp;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">tmp.vec[i] = vec[i] + obj.vec[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> tmp;</span><br><span class="line">&#125;</span><br><span class="line">Vector <span class="keyword">operator</span>-(<span class="type">const</span> Vector&amp; obj)</span><br><span class="line">&#123;</span><br><span class="line">Vector tmp;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">tmp.vec[i] = vec[i] - obj.vec[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> tmp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">print</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; vec[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> x[<span class="number">5</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; x[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">Vector <span class="title">a</span><span class="params">(x)</span></span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; x[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">Vector <span class="title">b</span><span class="params">(x)</span></span>;</span><br><span class="line">Vector c;</span><br><span class="line">c = a + b;</span><br><span class="line">c.<span class="built_in">print</span>();</span><br><span class="line">c = a - b;</span><br><span class="line">c.<span class="built_in">print</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="d-矩阵相乘-运算符重载">D.矩阵相乘（运算符重载）</h1><h2 id="题目描述">题目描述</h2><p>定义一个矩阵类MyMatrix，并且在类中进行运算符重定义，用*实现矩阵相乘。要求必须对运算符进行重载，如果用函数如multiply（matrix，matrix）去实现矩阵之间的运算一律记0分。</p><p>必须包含以下析构函数，其中n是矩阵的阶数，data是存放矩阵数据的二维动态数组：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">MyMatrix::~<span class="built_in">MyMatrix</span>() </span><br><span class="line">&#123; <span class="comment">// 释放空间 </span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) </span><br><span class="line">&#123; </span><br><span class="line"><span class="keyword">delete</span>[] data[i]; </span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">delete</span>[] data; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyMatrix</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="type">int</span> a[<span class="number">10</span>][<span class="number">10</span>];</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">MyMatrix</span>(<span class="type">int</span> _n):<span class="built_in">n</span>(_n)&#123;&#125;</span><br><span class="line"><span class="keyword">friend</span> MyMatrix <span class="keyword">operator</span>*(MyMatrix&amp; m1, MyMatrix&amp; m2)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> n = m<span class="number">1.</span>n;</span><br><span class="line"><span class="function">MyMatrix <span class="title">x</span><span class="params">(n)</span></span>;</span><br><span class="line"><span class="type">int</span> sum;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">&#123;</span><br><span class="line">sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>; k &lt; n; k++)</span><br><span class="line">&#123;</span><br><span class="line">sum += m<span class="number">1.</span>a[i][k] * m<span class="number">2.</span>a[k][j];</span><br><span class="line">&#125;</span><br><span class="line">x.a[i][j] = sum;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">set</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">show</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (j != n - <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; a[i][j] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; a[i][j] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> c, n;</span><br><span class="line">cin &gt;&gt; c &gt;&gt; n;</span><br><span class="line"><span class="function">MyMatrix <span class="title">m1</span><span class="params">(n)</span></span>;</span><br><span class="line">m<span class="number">1.</span><span class="built_in">set</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; c - <span class="number">1</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="function">MyMatrix <span class="title">m2</span><span class="params">(n)</span></span>;</span><br><span class="line">m<span class="number">2.</span><span class="built_in">set</span>();</span><br><span class="line">m1 = m1 * m2;</span><br><span class="line">&#125;</span><br><span class="line">m<span class="number">1.</span><span class="built_in">show</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="e-最小生日差值计算-运算符重载">E.最小生日差值计算（运算符重载）</h1><h2 id="题目描述">题目描述</h2><p>定义一个学生类Student，包含该学生的姓名、出生年、月、日 ，重定义 “-”号实现两个学生之间相差多少天的比较。并利用重载的“-”运算符，求所有学生中年龄相差最小的两个人的名字以及相差天数。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">string name;</span><br><span class="line"><span class="type">int</span> year;</span><br><span class="line"><span class="type">int</span> month;</span><br><span class="line"><span class="type">int</span> day;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Student</span>()&#123;&#125;</span><br><span class="line"><span class="built_in">Student</span>(string n,<span class="type">int</span> y,<span class="type">int</span> m,<span class="type">int</span> d):<span class="built_in">name</span>(n),<span class="built_in">year</span>(y),<span class="built_in">month</span>(m),<span class="built_in">day</span>(d)&#123;&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">set</span><span class="params">(string n, <span class="type">int</span> y, <span class="type">int</span> m, <span class="type">int</span> d)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">year = y;</span><br><span class="line">month = m;</span><br><span class="line">day = d;</span><br><span class="line">name = n;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">string <span class="title">getname</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="keyword">operator</span>-(Student&amp; s)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> tmp = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> emp = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> m[<span class="number">12</span>] = &#123; <span class="number">31</span>,<span class="number">28</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span> &#125;;</span><br><span class="line"><span class="type">int</span> n[<span class="number">12</span>] = &#123; <span class="number">31</span>,<span class="number">29</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span> &#125;;</span><br><span class="line"><span class="keyword">if</span> ((year % <span class="number">4</span> == <span class="number">0</span> &amp;&amp; year % <span class="number">100</span> != <span class="number">0</span>) || (year % <span class="number">400</span> == <span class="number">0</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; month - <span class="number">1</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">tmp += n[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; month - <span class="number">1</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">tmp += m[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> ((s.year % <span class="number">4</span> == <span class="number">0</span> &amp;&amp; s.year % <span class="number">100</span> != <span class="number">0</span>) || (s.year % <span class="number">400</span> == <span class="number">0</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; s.month - <span class="number">1</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">emp += n[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; s.month - <span class="number">1</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">emp += m[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">tmp += day;</span><br><span class="line">emp += s.day;</span><br><span class="line"><span class="keyword">if</span> (year == s.year)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (tmp - emp &lt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> emp - tmp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> tmp - emp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (year &gt; s.year)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> max = year;</span><br><span class="line"><span class="type">int</span> min = s.year;</span><br><span class="line"><span class="keyword">while</span> (max - min)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> ((min % <span class="number">4</span> == <span class="number">0</span> &amp;&amp; min % <span class="number">100</span> != <span class="number">0</span>) || (min % <span class="number">400</span> == <span class="number">0</span>))</span><br><span class="line">&#123;</span><br><span class="line">tmp += <span class="number">366</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">tmp += <span class="number">365</span>;</span><br><span class="line">&#125;</span><br><span class="line">min++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> tmp - emp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> min = year;</span><br><span class="line"><span class="type">int</span> max = s.year;</span><br><span class="line"><span class="keyword">while</span> (max - min)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> ((min % <span class="number">4</span> == <span class="number">0</span> &amp;&amp; min % <span class="number">100</span> != <span class="number">0</span>) || (min % <span class="number">400</span> == <span class="number">0</span>))</span><br><span class="line">&#123;</span><br><span class="line">emp += <span class="number">366</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">emp += <span class="number">365</span>;</span><br><span class="line">&#125;</span><br><span class="line">min++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> emp - tmp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> t, d;</span><br><span class="line"><span class="type">int</span> min = <span class="number">10000</span>;</span><br><span class="line"><span class="type">int</span> s1 = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> s2 = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> year, month, day;</span><br><span class="line">string name;</span><br><span class="line">Student* s;</span><br><span class="line">cin &gt;&gt; t;</span><br><span class="line">s = <span class="keyword">new</span> Student[t];</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; t; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; name &gt;&gt; year &gt;&gt; month &gt;&gt; day;</span><br><span class="line">s[i].<span class="built_in">set</span>(name, year, month, day);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; t - <span class="number">1</span>; i ++ )</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt; t; j++)</span><br><span class="line">&#123;</span><br><span class="line">d = s[j] - s[i];</span><br><span class="line"><span class="keyword">if</span> (d &lt; min &amp;&amp; s[i].<span class="built_in">getname</span>() != s[j].<span class="built_in">getname</span>())</span><br><span class="line">&#123;</span><br><span class="line">min = d;</span><br><span class="line">s1 = i;</span><br><span class="line">s2 = j;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; s[s1].<span class="built_in">getname</span>() &lt;&lt; <span class="string">&quot;和&quot;</span> &lt;&lt; s[s2].<span class="built_in">getname</span>() &lt;&lt; <span class="string">&quot;年龄相差最小，为&quot;</span> &lt;&lt; min &lt;&lt; <span class="string">&quot;天。&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面向对象程序设计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CPP_第11周</title>
      <link href="/posts/4227972715/"/>
      <url>/posts/4227972715/</url>
      
        <content type="html"><![CDATA[<h1 id="a-在职研究生-多重继承">A.在职研究生（多重继承）</h1><h2 id="题目描述">题目描述</h2><p>1、建立如下的类继承结构：</p><p>1)  定义一个人员类CPeople，其属性（保护类型）有：姓名、性别、年龄；</p><p>2)  从CPeople类派生出学生类CStudent，添加属性：学号和入学成绩；</p><p>3)  从CPeople类再派生出教师类CTeacher，添加属性：职务、部门；</p><p>4)   从CStudent和CTeacher类共同派生出在职研究生类CGradOnWork，添加属性：研究方向、导师；</p><p>2、分别定义以上类的构造函数、输出函数print及其他函数（如需要）。</p><p>3、在主函数中定义各种类的对象，并测试之。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CPeople</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">string name;</span><br><span class="line"><span class="type">char</span> sex;</span><br><span class="line"><span class="type">int</span> age;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">CPeople</span>()&#123;&#125;</span><br><span class="line"><span class="built_in">CPeople</span>(string n, <span class="type">char</span> s, <span class="type">int</span> a)</span><br><span class="line">&#123;</span><br><span class="line">name = n;</span><br><span class="line">sex = s;</span><br><span class="line">age = a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">print</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;People:&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">printpeople</span>();</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printpeople</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Name: &quot;</span> &lt;&lt; name &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Sex: &quot;</span> &lt;&lt; sex &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Age: &quot;</span> &lt;&lt; age &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CStudent</span> : <span class="keyword">virtual</span> <span class="keyword">public</span> CPeople</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">string number;</span><br><span class="line"><span class="type">double</span> grade;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">CStudent</span>()&#123;&#125;</span><br><span class="line"><span class="built_in">CStudent</span>(CPeople p,string n,<span class="type">double</span> g):<span class="built_in">CPeople</span>(p),<span class="built_in">number</span>(n),<span class="built_in">grade</span>(g)&#123;&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printstudent</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;No.: &quot;</span> &lt;&lt; number &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Score: &quot;</span> &lt;&lt; grade &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">print</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Student:&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">printpeople</span>();</span><br><span class="line"><span class="built_in">printstudent</span>();</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CTeacher</span> : <span class="keyword">virtual</span> <span class="keyword">public</span> CPeople</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">string position;</span><br><span class="line">string department;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">CTeacher</span>()&#123;&#125;</span><br><span class="line"><span class="built_in">CTeacher</span>(CPeople p,string po,string de):<span class="built_in">CPeople</span>(p),<span class="built_in">position</span>(po),<span class="built_in">department</span>(de)&#123;&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printteacher</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Position: &quot;</span> &lt;&lt; position &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Department: &quot;</span> &lt;&lt; department &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">print</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Teacher:&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">printpeople</span>();</span><br><span class="line"><span class="built_in">printteacher</span>();</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CGradOnWork</span> :<span class="keyword">public</span> CStudent, <span class="keyword">public</span> CTeacher</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">string direction;</span><br><span class="line">string tutor;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">CGradOnWork</span>()&#123;&#125;</span><br><span class="line"><span class="built_in">CGradOnWork</span>(CPeople p, CStudent s, CTeacher t, string di, string tu) :<span class="built_in">CPeople</span>(p), <span class="built_in">CStudent</span>(s), <span class="built_in">CTeacher</span>(t),<span class="built_in">direction</span>(di),<span class="built_in">tutor</span>(tu)&#123;&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">print</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;GradOnWork:&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">printpeople</span>();</span><br><span class="line"><span class="built_in">printstudent</span>();</span><br><span class="line"><span class="built_in">printteacher</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Direction: &quot;</span> &lt;&lt; direction &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Tutor: &quot;</span> &lt;&lt; tutor &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">string name;</span><br><span class="line"><span class="type">int</span> age;</span><br><span class="line"><span class="type">char</span> sex;</span><br><span class="line">string number;</span><br><span class="line"><span class="type">double</span> grade;</span><br><span class="line">string position, department, direction, tutor;</span><br><span class="line"></span><br><span class="line">cin &gt;&gt; name &gt;&gt; sex &gt;&gt;age&gt;&gt;number&gt;&gt;grade&gt;&gt;position&gt;&gt;department&gt;&gt;direction&gt;&gt;tutor;</span><br><span class="line"><span class="function">CPeople <span class="title">p</span><span class="params">(name, sex, age)</span></span>;</span><br><span class="line">p.<span class="built_in">print</span>();</span><br><span class="line"><span class="function">CStudent <span class="title">s</span><span class="params">(p, number, grade)</span></span>;</span><br><span class="line">s.<span class="built_in">print</span>();</span><br><span class="line"><span class="function">CTeacher <span class="title">t</span><span class="params">(p, position, department)</span></span>;</span><br><span class="line">t.<span class="built_in">print</span>();</span><br><span class="line"><span class="function">CGradOnWork <span class="title">g</span><span class="params">(p, s, t, direction, tutor)</span></span>;</span><br><span class="line">g.<span class="built_in">print</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="b-商旅信用卡-多重继承">B.商旅信用卡（多重继承）</h1><h2 id="题目描述">题目描述</h2><p>某旅游网站（假设旅程网）和某银行推出旅游综合服务联名卡—旅程信用卡，兼具旅程会员卡和银行信用卡功能。</p><p>旅程会员卡，有会员卡号（int）、旅程积分（int），通过会员卡下订单，按订单金额累计旅程积分。</p><p>信用卡，有卡号（int）、姓名（string)、额度（int)、账单金额（float)、信用卡积分（int）。------请注意数据类型</p><p>信用卡消费金额m，若超额度，则不做操作；否则，账单金额+m，额度-m，信用卡积分按消费金额累加。</p><p>信用卡退款m，账单金额-m，信用卡积分减去退款金额。</p><p>通过旅程信用卡在旅程网下单，旅程积分和信用卡积分双重积分（即旅程积分和信用卡积分同时增加）。</p><p>旅程信用卡可以按      旅程积分：信用卡积分= 1：2    的比例将信用卡积分兑换为旅程积分。</p><p>初始假设信用卡积分、旅程积分、账单金额为0。</p><p>根据上述内容，定义旅程会员卡类、信用卡类，从两者派生出旅程信用卡类并定义三个类的构造函数和其它所需函数。</p><p>生成旅程信用卡对象，输入卡信息，调用对象成员函数完成旅程网下单、信用卡刷卡、信用卡退款、信用卡积分兑换为旅程积分等操作。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Vip</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line"><span class="type">int</span> Vnumber;</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> Vpoints;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Vip</span>(<span class="type">int</span> n1, <span class="type">int</span> p1)</span><br><span class="line">&#123;</span><br><span class="line">Vnumber = n1;</span><br><span class="line">Vpoints = p1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">add</span><span class="params">(<span class="type">float</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Vpoints += a;</span><br><span class="line"><span class="keyword">return</span> Vpoints;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> Vip::Vpoints = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Credit</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line"><span class="type">int</span> Cnumber;</span><br><span class="line">string name;</span><br><span class="line"><span class="type">int</span> limit;</span><br><span class="line"><span class="type">float</span> amount;</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> Cpoints;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Credit</span>(<span class="type">int</span> n2, string n, <span class="type">int</span> l, <span class="type">float</span> a, <span class="type">int</span> p2)</span><br><span class="line">&#123;</span><br><span class="line">Cnumber = n2;</span><br><span class="line">name = n;</span><br><span class="line">limit = l;</span><br><span class="line">amount = a;</span><br><span class="line">Cpoints = p2;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">consume</span><span class="params">(<span class="type">float</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (a + amount &lt;= limit)</span><br><span class="line">&#123;</span><br><span class="line">amount += a;</span><br><span class="line">Cpoints +=(<span class="type">int</span>) a;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">refund</span><span class="params">(<span class="type">float</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">amount -= a;</span><br><span class="line">Cpoints -= (<span class="type">int</span>)a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">add</span><span class="params">(<span class="type">float</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Cpoints += (<span class="type">int</span>)a;</span><br><span class="line"><span class="keyword">return</span> Cpoints;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> Credit::Cpoints = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Journey</span> :<span class="keyword">public</span> Vip, <span class="keyword">public</span> Credit</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Journey</span>(<span class="type">int</span> vm,<span class="type">int</span> cm,string n,<span class="type">int</span> s,<span class="type">float</span> a,<span class="type">int</span> vp,<span class="type">int</span> cp):<span class="built_in">Credit</span>(cm,n,s,a,cp),<span class="built_in">Vip</span>(vm,vp)&#123;&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">order</span><span class="params">(<span class="type">float</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> p1, p2, p3;</span><br><span class="line">p1 = Vip::<span class="built_in">add</span>(a);</span><br><span class="line">p2 = Credit::<span class="built_in">add</span>(a);</span><br><span class="line">amount += a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">change</span><span class="params">(<span class="type">float</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> p1, p2, p3;</span><br><span class="line">p2 = a / <span class="number">2</span>;</span><br><span class="line">Vpoints += p2;</span><br><span class="line">Cpoints -= (<span class="type">int</span>)a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">show</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; Vnumber &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; Vpoints &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; Cnumber &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; name &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; amount &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; Cpoints &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> vm, cm;</span><br><span class="line">string name;</span><br><span class="line"><span class="type">float</span> a;</span><br><span class="line"><span class="type">int</span> limit;</span><br><span class="line"><span class="type">char</span> ch;</span><br><span class="line"><span class="type">int</span> t;</span><br><span class="line">cin &gt;&gt; vm &gt;&gt; cm &gt;&gt; name &gt;&gt; limit;</span><br><span class="line"><span class="function">Journey <span class="title">j</span><span class="params">(vm, cm, name, limit, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">cin &gt;&gt; t;</span><br><span class="line"><span class="keyword">while</span> (t--)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; ch &gt;&gt; a;</span><br><span class="line"><span class="keyword">if</span> (ch == <span class="string">&#x27;o&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">j.<span class="built_in">order</span>(a);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (ch == <span class="string">&#x27;c&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">j.<span class="built_in">consume</span>(a);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (ch == <span class="string">&#x27;q&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">j.<span class="built_in">refund</span>(a);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (ch == <span class="string">&#x27;t&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">j.<span class="built_in">change</span>(a);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">j.<span class="built_in">show</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="c-图形面积-虚函数与多态">C.图形面积（虚函数与多态）</h1><h2 id="题目描述">题目描述</h2><p>编写一个程序，定义抽象基类Shape，在Shape类中定义虚函数area()；由它派生出3个派生类：Circle(圆形)、Square(正方形)、Rectangle(矩形)。用虚函数分别计算几种图形面积。</p><p>1、要求输出结果保留两位小数。</p><p>2、要求用基类指针数组，使它每一个元素指向每一个派生类对象。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Shape</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">double</span> <span class="title">area</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Circle</span> :<span class="keyword">public</span> Shape</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line"><span class="type">double</span> r;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Circle</span>(<span class="type">double</span> r1) :<span class="built_in">r</span>(r1) &#123;&#125;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">double</span> <span class="title">area</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> r * r * <span class="number">3.14</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Square</span> :<span class="keyword">public</span> Shape</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line"><span class="type">double</span> d;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Square</span>(<span class="type">double</span> d1) :<span class="built_in">d</span>(d1) &#123;&#125;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">double</span> <span class="title">area</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> d * d;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Rectangele</span> :<span class="keyword">public</span> Shape</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line"><span class="type">double</span> a, b;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Rectangele</span>(<span class="type">double</span> a1, <span class="type">double</span> b1) :<span class="built_in">a</span>(a1), <span class="built_in">b</span>(b1) &#123;&#125;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">double</span> <span class="title">area</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> a * b;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">print</span><span class="params">(Shape* p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; fixed &lt;&lt; <span class="built_in">setprecision</span>(<span class="number">2</span>) &lt;&lt; p-&gt;<span class="built_in">area</span>() &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> t;</span><br><span class="line">cin &gt;&gt; t;</span><br><span class="line"><span class="type">double</span> r, d, a, b;</span><br><span class="line">Shape* p;</span><br><span class="line"><span class="keyword">while</span> (t--)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; r;</span><br><span class="line"><span class="function">Circle <span class="title">c</span><span class="params">(r)</span></span>;</span><br><span class="line">p = &amp;c;</span><br><span class="line"><span class="built_in">print</span>(p);</span><br><span class="line">cin &gt;&gt; d;</span><br><span class="line"><span class="function">Square <span class="title">s</span><span class="params">(d)</span></span>;</span><br><span class="line">p = &amp;s;</span><br><span class="line"><span class="built_in">print</span>(p);</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line"><span class="function">Rectangele <span class="title">r</span><span class="params">(a, b)</span></span>;</span><br><span class="line">p = &amp;r;</span><br><span class="line"><span class="built_in">print</span>(p);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="d-汽车收费-虚函数和多态">D.汽车收费（虚函数和多态）</h1><h2 id="题目描述">题目描述</h2><p>现在要开发一个系统，实现对多种汽车的收费工作。 汽车基类框架如下所示：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Vehicle</span> </span><br><span class="line">&#123; </span><br><span class="line"><span class="keyword">protected</span>: </span><br><span class="line">string no; <span class="comment">//编号 </span></span><br><span class="line"><span class="keyword">public</span>: </span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">display</span><span class="params">()</span></span>=<span class="number">0</span>; <span class="comment">//应收费用 </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以Vehicle为基类，构建出Car、Truck和Bus三个类。</p><p>Car的收费公式为： 载客数*8+重量*2</p><p>Truck的收费公式为：重量*5</p><p>Bus的收费公式为： 载客数*30</p><p>生成上述类并编写主函数，要求主函数中有一个基类指针Vehicle *pv;用来做测试用。</p><p>主函数根据输入的信息，相应建立Car,Truck或Bus类对象，对于Car给出载客数和重量，Truck给出重量，Bus给出载客数。假设载客数和重量均为整数。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Vehicle</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">    string No; <span class="comment">//编号</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">Vehicle</span>(string n) :<span class="built_in">No</span>(n) &#123;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">show</span><span class="params">()</span> </span>= <span class="number">0</span>; <span class="comment">//应收费用</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">car</span> :<span class="keyword">public</span> Vehicle</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">    <span class="type">int</span> num, weight;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">car</span>(string no,<span class="type">int</span> n,<span class="type">int</span> w):<span class="built_in">Vehicle</span>(no),<span class="built_in">num</span>(n),<span class="built_in">weight</span>(w)&#123;&#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">show</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="type">int</span> sum;</span><br><span class="line">        sum = num * <span class="number">8</span> + weight * <span class="number">2</span>;</span><br><span class="line">        cout &lt;&lt; No &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; sum &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">truck</span> :<span class="keyword">public</span> Vehicle</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">    <span class="type">int</span> weight;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">truck</span>(string no,<span class="type">int</span> w):<span class="built_in">Vehicle</span>(no),<span class="built_in">weight</span>(w)&#123;&#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">show</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="type">int</span> sum;</span><br><span class="line">        sum = weight * <span class="number">5</span>;</span><br><span class="line">        cout &lt;&lt; No &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; sum &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">bus</span> :<span class="keyword">public</span> Vehicle</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">    <span class="type">int</span> num;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">bus</span>(string no,<span class="type">int</span> n):<span class="built_in">Vehicle</span>(no),<span class="built_in">num</span>(n)&#123;&#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">show</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="type">int</span> sum;</span><br><span class="line">        sum = num * <span class="number">30</span>;</span><br><span class="line">        cout &lt;&lt; No &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; sum &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> t,tp;</span><br><span class="line">    string no;</span><br><span class="line">    <span class="type">int</span> weight, num;</span><br><span class="line"></span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span> (t--)</span><br><span class="line">    &#123;</span><br><span class="line">        Vehicle* pv;</span><br><span class="line"></span><br><span class="line">        cin &gt;&gt; tp;</span><br><span class="line">        <span class="keyword">if</span> (tp == <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            cin &gt;&gt; no &gt;&gt; weight &gt;&gt; num;</span><br><span class="line">            <span class="function">car <span class="title">c</span><span class="params">(no, weight, num)</span></span>;</span><br><span class="line">            pv = &amp;c;</span><br><span class="line">            pv-&gt;<span class="built_in">show</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (tp == <span class="number">2</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            cin &gt;&gt; no &gt;&gt; weight;</span><br><span class="line">            <span class="function">truck <span class="title">t</span><span class="params">(no, weight)</span></span>;</span><br><span class="line">            pv = &amp;t;</span><br><span class="line">            pv-&gt;<span class="built_in">show</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (tp == <span class="number">3</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            cin &gt;&gt; no &gt;&gt; num;</span><br><span class="line">            <span class="function">bus <span class="title">b</span><span class="params">(no, num)</span></span>;</span><br><span class="line">            pv = &amp;b;</span><br><span class="line">            pv-&gt;<span class="built_in">show</span>();</span><br><span class="line">        &#125; </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="e-支票账户-虚函数与多态">E.支票账户（虚函数与多态）</h1><h2 id="题目描述">题目描述</h2><p>某银行的支票账户分为两类，一类为基本支票账户BaseAccount，另一类为具有透支保护特性的BasePlus支票账户。</p><p>BaseAccount支票账户的信息包括：客户姓名(name)、账户(account)、当前结余(balance)；BaseAccount支票账户可以执行的操作包括：存款(deposit)、取款(withdraw)、显示账户信息(display)。注意：取款金额不能透支，否则显示出错信息“insufficient”。</p><p>BasePlus支票账户除包含BaseAccount的所有信息外，还包括以下信息：透支上限(默认为5000)，当前可透支额度(limitSum)；BasePlus支票账户可执行的操作与BaseAccount相同，但有两种操作的实现不同：(1)对于取款操作，可以在透支上限范围内透支，超过则显示出错信息“insufficient”；(2)对于显示操作，必须显示BasePlus的其他信息。</p><p>请实现BaseAccount类和BasePlus类，其中BasePlus类继承于BaseAccount类，注意BaseAccount账户名称以BA开头，BasePlus账户名称以BP开头。</p><p>要求只使用一个基类指针，指向所建立的对象，然后使用指针调用类中的方法。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">BaseAccount</span> &#123;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">string name;</span><br><span class="line">string account;</span><br><span class="line"><span class="type">int</span> balance;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">BaseAccount</span>(string n, string a, <span class="type">int</span> b) :<span class="built_in">balance</span>(b),<span class="built_in">name</span>(n),<span class="built_in">account</span>(a)&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">deposit</span><span class="params">(<span class="type">int</span> d)</span> </span>&#123;</span><br><span class="line">balance += d;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">withdraw</span><span class="params">(<span class="type">int</span> w)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (balance - w &gt;= <span class="number">0</span>)</span><br><span class="line">balance -= w;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;insufficient&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">print</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; name &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; account &lt;&lt; <span class="string">&quot; Balance:&quot;</span> &lt;&lt; balance &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">BasePlus</span> :<span class="keyword">public</span> BaseAccount &#123;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line"><span class="type">int</span> limit;</span><br><span class="line"><span class="type">int</span> limit_sum;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">BasePlus</span>(string n, string a, <span class="type">int</span> b) :<span class="built_in">BaseAccount</span>(n, a, b) &#123;</span><br><span class="line">limit = <span class="number">5000</span>;</span><br><span class="line">limit_sum = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">withdraw</span><span class="params">(<span class="type">int</span> w)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (balance - w &gt;= <span class="number">-5000</span>) &#123;</span><br><span class="line">balance -= w;</span><br><span class="line"><span class="keyword">if</span> (balance &lt; <span class="number">0</span>) &#123;</span><br><span class="line">limit = <span class="number">5000</span> + balance; </span><br><span class="line">limit_sum = balance;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;insufficient&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">print</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; name &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; account;</span><br><span class="line"><span class="keyword">if</span> (balance &lt; <span class="number">0</span>)</span><br><span class="line">cout &lt;&lt; <span class="string">&quot; Balance:0&quot;</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot; Balance:&quot;</span> &lt;&lt; balance;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot; limit:&quot;</span> &lt;&lt; limit &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> t, b, d, w;</span><br><span class="line">string n, a;</span><br><span class="line">cin &gt;&gt; t;</span><br><span class="line">BaseAccount* p; </span><br><span class="line"><span class="keyword">while</span> (t--) &#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; a &gt;&gt; b;</span><br><span class="line"><span class="keyword">if</span> (a[<span class="number">1</span>] == <span class="string">&#x27;A&#x27;</span>) &#123;</span><br><span class="line"><span class="function">BaseAccount <span class="title">b1</span><span class="params">(n, a, b)</span></span>;</span><br><span class="line">cin &gt;&gt; d &gt;&gt; w;</span><br><span class="line">p = &amp;b1;</span><br><span class="line">p-&gt;<span class="built_in">deposit</span>(d);</span><br><span class="line">p-&gt;<span class="built_in">withdraw</span>(w);</span><br><span class="line">cin &gt;&gt; d &gt;&gt; w;</span><br><span class="line">p-&gt;<span class="built_in">deposit</span>(d);</span><br><span class="line">p-&gt;<span class="built_in">withdraw</span>(w);</span><br><span class="line">p-&gt;<span class="built_in">print</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">BasePlus <span class="built_in">b1</span>(n, a, b);</span><br><span class="line">cin &gt;&gt; d &gt;&gt; w;</span><br><span class="line">p = &amp;b1;</span><br><span class="line">p-&gt;<span class="built_in">deposit</span>(d);</span><br><span class="line">p-&gt;<span class="built_in">withdraw</span>(w);</span><br><span class="line">cin &gt;&gt; d &gt;&gt; w;</span><br><span class="line">p-&gt;<span class="built_in">deposit</span>(d);</span><br><span class="line">p-&gt;<span class="built_in">withdraw</span>(w);</span><br><span class="line">p-&gt;<span class="built_in">print</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面向对象程序设计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CPP_第10周</title>
      <link href="/posts/1153292558/"/>
      <url>/posts/1153292558/</url>
      
        <content type="html"><![CDATA[<h1 id="a-圆和圆柱体计算-继承">A.圆和圆柱体计算（继承）</h1><h2 id="题目描述">题目描述</h2><p>定义一个CPoint点类，包含数据成员x,y（坐标点）。</p><p>以CPoint为基类，派生出一个圆形类CCircle，增加数据成员r(半径）和一个计算圆面积的成员函数。<br>再以CCircle做为直接基类，派生出一个圆柱体类CCylinder，增加数据成员h(高)和一个计算体积的成员函数。<br>生成圆和圆柱体对象，调用成员函数计算面积或体积并输出结果。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CPoint</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line"><span class="type">double</span> x, y;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">CPoint</span>(<span class="type">double</span> x1, <span class="type">double</span> y1):<span class="built_in">x</span>(x1),<span class="built_in">y</span>(y1)&#123;&#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CCircle</span> :<span class="keyword">public</span> CPoint</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line"><span class="type">double</span> r;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">CCircle</span>(<span class="type">double</span> x1,<span class="type">double</span> y1,<span class="type">double</span> r1):<span class="built_in">CPoint</span>(x1,y1),<span class="built_in">r</span>(r1)&#123; &#125;</span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">Area</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">3.14</span> * <span class="built_in">pow</span>(r, <span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">print</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Circle:(&quot;</span> &lt;&lt; x &lt;&lt; <span class="string">&quot;,&quot;</span> &lt;&lt; y &lt;&lt; <span class="string">&quot;),&quot;</span> &lt;&lt; r &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Area:&quot;</span> &lt;&lt; <span class="built_in">Area</span>() &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CCylinder</span> :<span class="keyword">public</span> CCircle</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line"><span class="type">double</span> h;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">CCylinder</span>(<span class="type">double</span> x1,<span class="type">double</span> y1,<span class="type">double</span> r1,<span class="type">double</span> h1):<span class="built_in">CCircle</span>(x1,y1,r1),<span class="built_in">h</span>(h1)&#123;&#125;</span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">Volume</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">3.14</span> * <span class="built_in">pow</span>(r, <span class="number">2</span>) * h;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">print</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Cylinder:(&quot;</span> &lt;&lt; x &lt;&lt; <span class="string">&quot;,&quot;</span> &lt;&lt; y &lt;&lt; <span class="string">&quot;),&quot;</span> &lt;&lt; r &lt;&lt; <span class="string">&quot;,&quot;</span> &lt;&lt; h &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Volume:&quot;</span> &lt;&lt; <span class="built_in">Volume</span>() &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">double</span> x, y, r, h;</span><br><span class="line">cin &gt;&gt; x &gt;&gt; y &gt;&gt; r;</span><br><span class="line"><span class="function">CCircle <span class="title">a</span><span class="params">(x, y, r)</span></span>;</span><br><span class="line">a.<span class="built_in">print</span>();</span><br><span class="line">cin &gt;&gt; x &gt;&gt; y &gt;&gt; r &gt;&gt; h;</span><br><span class="line"><span class="function">CCylinder <span class="title">b</span><span class="params">(x, y, r, h)</span></span>;</span><br><span class="line">b.<span class="built_in">print</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="b-三维空间的点-继承">B.三维空间的点（继承）</h1><h2 id="题目描述">题目描述</h2><p>定义一个平面上的点C2D类，它含有一个getDistance()的成员函数，计算该点到原点的距离；从C2D类派生出三维空间的点C3D类，它的getDistance()成员函数计算该点到原点的距离。试分别生成一个C2D和C3D的对象，计算它们到原点的距离。</p><p>三维空间的两点（x, y, z）和（x1, y1, z1）的距离公式如下：</p><p>[(x-x1)^2+(y-y1)^2+(z-z1)^2]^(1/2)</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">C2D</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line"><span class="type">int</span> x;</span><br><span class="line"><span class="type">int</span> y;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">C2D</span>(<span class="type">int</span> x1, <span class="type">int</span> y1):<span class="built_in">x</span>(x1),<span class="built_in">y</span>(y1)&#123;&#125;</span><br><span class="line"><span class="built_in">C2D</span>()&#123;&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setXY</span><span class="params">(<span class="type">int</span> x1, <span class="type">int</span> y1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">x = x1;</span><br><span class="line">y = y1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">getDistance</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">sqrt</span>(<span class="built_in">pow</span>(x, <span class="number">2</span>) + <span class="built_in">pow</span>(y, <span class="number">2</span>));</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">C3D</span> :<span class="keyword">public</span> C2D</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line"><span class="type">int</span> z;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setZ</span><span class="params">(<span class="type">int</span> z1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">z = z1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">getDistance</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">sqrt</span>(<span class="built_in">pow</span>(x, <span class="number">2</span>) + <span class="built_in">pow</span>(y, <span class="number">2</span>) + <span class="built_in">pow</span>(z, <span class="number">2</span>));</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> x;</span><br><span class="line"><span class="type">int</span> y;</span><br><span class="line"><span class="type">int</span> z;</span><br><span class="line">cin &gt;&gt; x &gt;&gt; y;</span><br><span class="line"><span class="function">C2D <span class="title">a1</span><span class="params">(x, y)</span></span>;</span><br><span class="line">cout &lt;&lt; a<span class="number">1.</span><span class="built_in">getDistance</span>() &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; x &gt;&gt; y &gt;&gt; z;</span><br><span class="line">C3D b1;</span><br><span class="line">b<span class="number">1.</span><span class="built_in">setXY</span>(x, y);</span><br><span class="line">b<span class="number">1.</span><span class="built_in">setZ</span>(z);</span><br><span class="line">cout &lt;&lt; b<span class="number">1.</span><span class="built_in">getDistance</span>() &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; x &gt;&gt; y &gt;&gt; z;</span><br><span class="line">C3D b2;</span><br><span class="line">b<span class="number">2.</span><span class="built_in">setXY</span>(x, y);</span><br><span class="line">b<span class="number">2.</span><span class="built_in">setZ</span>(z);</span><br><span class="line">cout &lt;&lt; b<span class="number">2.</span><span class="built_in">getDistance</span>() &lt;&lt; endl;</span><br><span class="line"><span class="function">C2D <span class="title">a2</span><span class="params">(x, y)</span></span>;</span><br><span class="line">cout &lt;&lt; a<span class="number">2.</span><span class="built_in">getDistance</span>() &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="c-时钟模拟-继承">C.时钟模拟(继承）</h1><h2 id="题目描述">题目描述</h2><p>定义计数器类，包含保护数据成员value,公有函数increment计数加1。<br>定义循环计算器继承计数器类，增加私有数据成员：最小值minValue，maxValue,<br>重写公有函数increment，使得value在minValue~maxValue区间内循环+1。<br>定义时钟类，数据成员是私有循环计数器对象小时hour、分钟minute、秒second，公有函数time(int s)计算当前时间经过s秒之后的时间，即hour，minute，second的新value值。<br>定义时钟类对象，输入当前时间和经过的秒数,调用time函数计算新时间。<br>根据题目要求，增加必要的构造函数、析构函数和其他所需函数。<br>因为clock和time是系统内置函数，为了避免重名，请不要使用clock或者time作为类名或者函数名</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Chronograph</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line"><span class="type">int</span> value;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Chronograph</span>(<span class="type">int</span> v):<span class="built_in">value</span>(v)&#123;&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">increment</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">value++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">getV</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> value;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Calculators</span> :<span class="keyword">public</span> Chronograph</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="type">int</span> minValue;</span><br><span class="line"><span class="type">int</span> maxValue;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Calculators</span>(<span class="type">int</span> min_v, <span class="type">int</span> max_v, <span class="type">int</span> v) :<span class="built_in">minValue</span>(min_v),<span class="built_in">maxValue</span>(max_v), <span class="built_in">Chronograph</span>(v) &#123;&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">increment</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">value = (value - minValue + <span class="number">1</span>) % (maxValue - minValue + <span class="number">1</span>) + minValue;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CClock</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">Calculators hour;</span><br><span class="line">Calculators minute;</span><br><span class="line">Calculators second;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">CClock</span>(<span class="type">int</span> h,<span class="type">int</span> m,<span class="type">int</span> s):<span class="built_in">hour</span>(<span class="number">0</span>,<span class="number">23</span>,h),<span class="built_in">minute</span>(<span class="number">0</span>,<span class="number">59</span>,m),<span class="built_in">second</span>(<span class="number">0</span>,<span class="number">59</span>,s)&#123;&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">ttime</span><span class="params">(<span class="type">int</span> s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span> (s--)</span><br><span class="line">&#123;</span><br><span class="line">second.<span class="built_in">increment</span>();</span><br><span class="line"><span class="keyword">if</span> (second.<span class="built_in">getV</span>() == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">minute.<span class="built_in">increment</span>();</span><br><span class="line"><span class="keyword">if</span> (minute.<span class="built_in">getV</span>() == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">hour.<span class="built_in">increment</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">display</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; hour.<span class="built_in">getV</span>() &lt;&lt; <span class="string">&quot;:&quot;</span> &lt;&lt; minute.<span class="built_in">getV</span>() &lt;&lt; <span class="string">&quot;:&quot;</span> &lt;&lt; second.<span class="built_in">getV</span>() &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> h, m, s;</span><br><span class="line"><span class="type">int</span> passtime;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">while</span> (n--)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; h &gt;&gt; m &gt;&gt; s&gt;&gt;passtime;</span><br><span class="line"><span class="function">CClock <span class="title">c</span><span class="params">(h, m, s)</span></span>;</span><br><span class="line">c.<span class="built_in">ttime</span>(passtime);</span><br><span class="line">c.<span class="built_in">display</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="d-学生成绩计算-继承">D.学生成绩计算（继承）</h1><h2 id="题目描述">题目描述</h2><p>定义Person类具有姓名、年龄等属性，具有输出基本信息的display函数。<br>选修《面向对象程序设计》课程的学生在Person类的基础上，派生出子类：免听生和非免听生。子类继承父类成员，新增其他成员、改写display函数。<br>非免听生具有平时成绩、考试成绩和总评成绩三个属性，总评成绩根据（平时成绩*40%+考试成绩*60%）计算的结果，85分（包含）以上为A，75分（包含）-85分（不包含）为B，65分（包含）-75分（不包含）为C，60分（包含）-65分（不包含）为D，60分（不包含）以下为F。<br>免听生只有考试成绩和总评成绩两个属性，总评成绩100%根据考试成绩对应上述等级制成绩。<br>定义上述类并编写主函数，输入类型符号，若输入R，根据学生基本信息、平时成绩和考试成绩，建立非免听生对象，若输入S，根据学生基本信息、考试成绩，建立免听生对象。计算学生的总评成绩，并输出。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">string name;</span><br><span class="line"><span class="type">int</span> age;</span><br><span class="line"><span class="type">double</span> <span class="keyword">final</span>;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Person</span>() &#123;&#125;;</span><br><span class="line"><span class="built_in">Person</span>(string n, <span class="type">int</span> a) :<span class="built_in">name</span>(n), <span class="built_in">age</span>(a) &#123;&#125;;</span><br><span class="line"><span class="function"><span class="type">char</span> <span class="title">rating</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">final</span> &gt;= <span class="number">85</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">final</span> &gt;= <span class="number">75</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&#x27;B&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">final</span> &gt;= <span class="number">65</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&#x27;C&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">final</span> &gt;= <span class="number">60</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&#x27;D&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">final</span> &lt; <span class="number">60</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&#x27;F&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">display</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; name &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; age &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Freelisten</span> :<span class="keyword">public</span> Person</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line"><span class="type">double</span> grade;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Freelisten</span>() &#123;&#125;;</span><br><span class="line"><span class="built_in">Freelisten</span>(string n, <span class="type">int</span> a, <span class="type">int</span> g) :<span class="built_in">Person</span>(n, a), <span class="built_in">grade</span>(g) &#123;&#125;;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">display</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">final</span> = grade;</span><br><span class="line">cout &lt;&lt; name &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; age &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; <span class="built_in">rating</span>() &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Nolisten</span> :<span class="keyword">public</span> Person</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line"><span class="type">double</span> grade, usual;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Nolisten</span>() &#123;&#125;;</span><br><span class="line"><span class="built_in">Nolisten</span>(string n, <span class="type">int</span> a, <span class="type">int</span> u, <span class="type">int</span> g) :<span class="built_in">Person</span>(n, a), <span class="built_in">usual</span>(u), <span class="built_in">grade</span>(g) &#123;&#125;;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">display</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">final</span> = <span class="number">0.4</span> * usual + <span class="number">0.6</span> * grade;</span><br><span class="line">cout &lt;&lt; name &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; age &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; <span class="built_in">rating</span>() &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> t, usual, test, age;</span><br><span class="line">string name;</span><br><span class="line"><span class="type">char</span> type;</span><br><span class="line">cin &gt;&gt; t;</span><br><span class="line"><span class="keyword">while</span> (t--)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; type;</span><br><span class="line"><span class="keyword">if</span> (type == <span class="string">&#x27;R&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; name &gt;&gt; age &gt;&gt; usual &gt;&gt; test;</span><br><span class="line"><span class="function">Nolisten <span class="title">a</span><span class="params">(name, age, usual, test)</span></span>;</span><br><span class="line">a.<span class="built_in">display</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (type == <span class="string">&#x27;S&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; name &gt;&gt; age &gt;&gt; test;</span><br><span class="line"><span class="function">Freelisten <span class="title">b</span><span class="params">(name, age, test)</span></span>;</span><br><span class="line">b.<span class="built_in">display</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="e-新旧身份证-继承">E.新旧身份证(继承)</h1><h2 id="题目描述">题目描述</h2><p>按下述方式定义一个日期类CDate和描述15位身份证号的旧身份证类COldId:</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">CDate</span> </span><br><span class="line">&#123; </span><br><span class="line"><span class="keyword">private</span>: </span><br><span class="line"><span class="type">int</span> year, month, day; </span><br><span class="line"><span class="keyword">public</span>: <span class="built_in">CDate</span>(<span class="type">int</span>, <span class="type">int</span>, <span class="type">int</span>); <span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">()</span></span>; <span class="comment">//检验日期是否合法 </span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">isLeap</span><span class="params">()</span></span>; <span class="function"><span class="type">void</span> <span class="title">print</span><span class="params">()</span></span>; </span><br><span class="line">&#125;; </span><br><span class="line"><span class="keyword">class</span> <span class="title class_">COldId</span> </span><br><span class="line">&#123; </span><br><span class="line"><span class="keyword">protected</span>: </span><br><span class="line"><span class="type">char</span>* pId15, * pName; <span class="comment">//15位身份证号码，姓名 </span></span><br><span class="line">CDate birthday; <span class="comment">//出生日期 </span></span><br><span class="line"><span class="keyword">public</span>: </span><br><span class="line"><span class="built_in">COldId</span>(<span class="type">char</span>* pIdVal, <span class="type">char</span>* pNameVal, CDate&amp; day); </span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">()</span></span>; <span class="comment">//验证15位身份证是否合法 </span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">print</span><span class="params">()</span></span>; </span><br><span class="line">~<span class="built_in">COldId</span>(); </span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>然后以COldId为基类派生18位身份证号的新身份证类CNewId,并增加3个数据成员:pId18(18位号码)、issueDay(签发日期)和validYear(有效期，年数)，并重新定义check()和print()。</p><p>15位身份证号扩展为18位身份证号的规则为：前6位号码保持一致，年份由2位变为4位（在前面加上19，例如88变为1988），剩余号码都保持一致，再加上第18位校验码。</p><p>身份证第18位校验码的生成方法：<br>1、将身份证号码前17位数分别乘以7,9,10,5,8,4,2,1,6,3,7,9,10,5,8,4,2。然后将其相加。<br>2、将17位数字与系数乘加的和除以11，得到余数。<br>3、余数与校验码的对应关系为1,0,X,9,8,7,6,5,4,3,2。也即：如果余数是3，身份证第18位就是9。如果余数是2，身份证的最后一位号码就是X。</p><p>主函数定义一个派生类对象，并用派生类对象调用check()，若返回false则输出“illegal id”否则调用print()输出身份证信息。check()对身份证合法性进行验证的规则：</p><ol><li>确认18位号码是从15位号码扩展的，且第18位校验码正确.</li><li>身份证中的出生日期合法.</li><li>身份证号码中不含非法字符.</li><li>身份证号码的长度正确.</li><li>身份证目前处于有效期内，假设当前日期为2021年11月9日。</li><li>签发日期合法</li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CDate</span> </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="type">int</span> year, month, day;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">CDate</span>(<span class="type">int</span> y, <span class="type">int</span> m, <span class="type">int</span> d) : <span class="built_in">year</span>(y), <span class="built_in">month</span>(m), <span class="built_in">day</span>(d) &#123;&#125;</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">getYear</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> year; &#125;</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">getMonth</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> month; &#125;</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">getDay</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> day; &#125;</span><br><span class="line">    <span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="type">int</span> monthDay[] = &#123;</span><br><span class="line">                          <span class="number">31</span>, <span class="built_in">isLeap</span>() ? <span class="number">29</span> : <span class="number">28</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span> &#125;;</span><br><span class="line">        <span class="keyword">if</span> (day &lt; <span class="number">0</span> || year &lt; <span class="number">0</span> || month &lt; <span class="number">0</span> || year &gt; <span class="number">2015</span> || month &gt; <span class="number">12</span> || day &gt; monthDay[month - <span class="number">1</span>])</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">bool</span> <span class="title">isLeap</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (year % <span class="number">4</span> == <span class="number">0</span> &amp;&amp; year % <span class="number">100</span> != <span class="number">0</span> || year % <span class="number">400</span> == <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">print</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        cout &lt;&lt; year &lt;&lt; <span class="string">&quot;年&quot;</span> &lt;&lt; month &lt;&lt; <span class="string">&quot;月&quot;</span> &lt;&lt; day &lt;&lt; <span class="string">&quot;日&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">COldID</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">    <span class="type">char</span>* p_id15, * p_name;</span><br><span class="line">    CDate birthday;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">COldID</span>(<span class="type">char</span>* p_idval, <span class="type">char</span>* p_nameval, <span class="type">int</span> y, <span class="type">int</span> m, <span class="type">int</span> d) : <span class="built_in">birthday</span>(y, m, d)</span><br><span class="line">    &#123;</span><br><span class="line">        p_id15 = <span class="keyword">new</span> <span class="type">char</span>[<span class="built_in">strlen</span>(p_idval) + <span class="number">1</span>];</span><br><span class="line">        <span class="built_in">strcpy</span>(p_id15, p_idval);</span><br><span class="line">        p_name = <span class="keyword">new</span> <span class="type">char</span>[<span class="built_in">strlen</span>(p_nameval) + <span class="number">1</span>];</span><br><span class="line">        <span class="built_in">strcpy</span>(p_name, p_nameval);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">check</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!birthday.<span class="built_in">check</span>())</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> ((*(p_id15 + <span class="number">6</span>) - <span class="string">&#x27;0&#x27;</span>) * <span class="number">10</span> + (*(p_id15 + <span class="number">7</span>) - <span class="string">&#x27;0&#x27;</span>) != birthday.<span class="built_in">getYear</span>() % <span class="number">100</span> ||</span><br><span class="line">            (*(p_id15 + <span class="number">8</span>) - <span class="string">&#x27;0&#x27;</span>) * <span class="number">10</span> + (*(p_id15 + <span class="number">9</span>) - <span class="string">&#x27;0&#x27;</span>) != birthday.<span class="built_in">getMonth</span>() ||</span><br><span class="line">            (*(p_id15 + <span class="number">10</span>) - <span class="string">&#x27;0&#x27;</span>) * <span class="number">10</span> + (*(p_id15 + <span class="number">11</span>) - <span class="string">&#x27;0&#x27;</span>) != birthday.<span class="built_in">getDay</span>())</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">15</span>; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="string">&#x27;0&#x27;</span> &gt; *(p_id15 + i) || *(p_id15 + i) &gt; <span class="string">&#x27;9&#x27;</span>)</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">strlen</span>(p_id15) != <span class="number">15</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">print</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        cout &lt;&lt; p_name &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    ~<span class="built_in">COldID</span>() &#123;&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CNewID</span> : <span class="keyword">public</span> COldID</span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span>* p_id18;</span><br><span class="line">    CDate issueday;</span><br><span class="line">    <span class="type">int</span> validyear;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">CNewID</span>(<span class="type">char</span>* name, <span class="type">int</span> yval, <span class="type">int</span> mval, <span class="type">int</span> dval, <span class="type">char</span>* p15, <span class="type">char</span>* p18, <span class="type">int</span> yval2, <span class="type">int</span> mval2, <span class="type">int</span> dval2, <span class="type">int</span> v): <span class="built_in">COldID</span>(p15, name, yval, mval, dval), <span class="built_in">issueday</span>(yval2, mval2, dval2), <span class="built_in">validyear</span>(v)</span><br><span class="line">    &#123;</span><br><span class="line">        p_id18 = <span class="keyword">new</span> <span class="type">char</span>[<span class="built_in">strlen</span>(p18) + <span class="number">1</span>];</span><br><span class="line">        <span class="built_in">strcpy</span>(p_id18, p18);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">char</span>* <span class="title">NewNumID</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="type">static</span> <span class="type">char</span> num[<span class="number">20</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">6</span>; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            num[i] = *(p_id15 + i);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (birthday.<span class="built_in">getYear</span>() &lt; <span class="number">2000</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            num[<span class="number">6</span>] = <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">            num[<span class="number">7</span>] = <span class="string">&#x27;9&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            num[<span class="number">6</span>] = <span class="string">&#x27;2&#x27;</span>;</span><br><span class="line">            num[<span class="number">7</span>] = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">8</span>; i &lt; <span class="number">17</span>; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            num[i] = *(p_id15 + i - <span class="number">2</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> list1[] = &#123;</span><br><span class="line">            <span class="number">7</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">6</span>, <span class="number">3</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">4</span>, <span class="number">2</span> &#125;;</span><br><span class="line">        <span class="type">char</span> list2[<span class="number">12</span>] = &#123;</span><br><span class="line">            <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;0&#x27;</span>, <span class="string">&#x27;X&#x27;</span>, <span class="string">&#x27;9&#x27;</span>, <span class="string">&#x27;8&#x27;</span>, <span class="string">&#x27;7&#x27;</span>, <span class="string">&#x27;6&#x27;</span>, <span class="string">&#x27;5&#x27;</span>, <span class="string">&#x27;4&#x27;</span>, <span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;\0&#x27;</span> &#125;;</span><br><span class="line">        <span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">17</span>; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            sum += ((num[i] - <span class="string">&#x27;0&#x27;</span>) * list1[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        sum %= <span class="number">11</span>;</span><br><span class="line">        num[<span class="number">17</span>] = list2[sum];</span><br><span class="line">        num[<span class="number">18</span>] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> num;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">valid</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ((issueday.<span class="built_in">getYear</span>() + validyear) &gt; <span class="number">2017</span> ||</span><br><span class="line">            ((issueday.<span class="built_in">getYear</span>() + validyear) == <span class="number">2017</span> &amp;&amp; issueday.<span class="built_in">getMonth</span>() &lt; <span class="number">5</span>) ||</span><br><span class="line">            ((issueday.<span class="built_in">getYear</span>() + validyear) == <span class="number">2017</span> &amp;&amp; issueday.<span class="built_in">getMonth</span>() == <span class="number">5</span> &amp;&amp; issueday.<span class="built_in">getDay</span>() &lt; <span class="number">10</span>));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">strcmp</span>(<span class="built_in">NewNumID</span>(), p_id18) != <span class="number">0</span> || !issueday.<span class="built_in">check</span>() || !<span class="built_in">valid</span>())</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">print</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        cout &lt;&lt; p_id18 &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">        issueday.<span class="built_in">print</span>();</span><br><span class="line">        <span class="keyword">if</span> (validyear != <span class="number">100</span>)</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; validyear &lt;&lt; <span class="string">&quot;年&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            cout &lt;&lt; <span class="string">&quot; 长期&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    ~<span class="built_in">CNewID</span>() &#123;&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> t, y1, m1, d1, y2, m2, d2, v;</span><br><span class="line">    <span class="type">char</span> name[<span class="number">10</span>], p15[<span class="number">20</span>], p18[<span class="number">20</span>];</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span> (t--)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; name &gt;&gt; y1 &gt;&gt; m1 &gt;&gt; d1 &gt;&gt; p15 &gt;&gt; p18 &gt;&gt; y2 &gt;&gt; m2 &gt;&gt; d2 &gt;&gt; v;</span><br><span class="line">        <span class="function">CNewID <span class="title">c</span><span class="params">(name, y1, m1, d1, p15, p18, y2, m2, d2, v)</span></span>;</span><br><span class="line">        c.COldID::<span class="built_in">print</span>();</span><br><span class="line">        <span class="keyword">if</span> (c.COldID::<span class="built_in">check</span>() &amp;&amp; c.<span class="built_in">check</span>())</span><br><span class="line">            c.<span class="built_in">print</span>();</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;illegal id&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面向对象程序设计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CPP_第9周</title>
      <link href="/posts/3963545132/"/>
      <url>/posts/3963545132/</url>
      
        <content type="html"><![CDATA[<h1 id="a-机器人变身-类与对象">A.机器人变身（类与对象）</h1><h2 id="题目描述">题目描述</h2><p>编写一个机器人类，包含属性有机器名、血量、伤害值、防御值、类型和等级。其中血量、伤害和防御和等级、类型相关：</p><p>普通型机器人，类型为N，血量、伤害、防御是等级的5倍</p><p>攻击型机器人，类型为A，攻击是等级的10倍，其他属性和普通的一样</p><p><strong>防御型机器人，类型为D，防御是等级的10倍，其他属性和普通的一样</strong></p><p><strong>生命型机器人，类型为H，生命是等级的50倍，其他属性和普通的一样。</strong></p><p><strong>机器人</strong>操作包括：<strong>打印、各个属性的获取和设置方法，构造函数可有可无，根据需要自行编写</strong>，</p><p><strong>编写一个全局函数用于机器人变身，使得各种类型机器人能够相互转变。参数包括机器人对象指针和变身后的机器人类型，功能是修改机器人类型，并更改相关的属性。如果变身类型和机器人原来的类型不同，则执行变身功能，并返回true；如果变身类型和原来类型相同，则不执行变身，并返回false.</strong></p><p><strong>要求所有数据成员都是私有属性，用C++语言和面向对象设计思想来编程实现上述要求</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">robot</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">string name;</span><br><span class="line"><span class="type">int</span> level,HP,damage,defense;</span><br><span class="line"><span class="type">char</span> type;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">robot</span>(string n, <span class="type">char</span> t, <span class="type">int</span> l);</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">print</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">set</span><span class="params">(<span class="type">char</span> t)</span></span>;</span><br><span class="line"><span class="function"><span class="type">char</span> <span class="title">get</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> type;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">robot::<span class="built_in">robot</span> (string n,<span class="type">char</span> t,<span class="type">int</span> l)</span><br><span class="line">&#123;</span><br><span class="line">name = n;</span><br><span class="line">type = t;</span><br><span class="line">level = l;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">robot::set</span><span class="params">(<span class="type">char</span> t)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">HP = <span class="number">5</span> * level;</span><br><span class="line">damage = <span class="number">5</span> * level;</span><br><span class="line">defense = <span class="number">5</span> * level;</span><br><span class="line"><span class="keyword">if</span> (t == <span class="string">&#x27;A&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">damage = <span class="number">10</span> * level;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (t == <span class="string">&#x27;D&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">defense = <span class="number">10</span> * level;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (t == <span class="string">&#x27;H&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">HP = <span class="number">50</span> * level;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">this</span>-&gt;type = t;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">robot::print</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; name &lt;&lt; <span class="string">&quot;--&quot;</span> &lt;&lt; type &lt;&lt; <span class="string">&quot;--&quot;</span> &lt;&lt; level &lt;&lt; <span class="string">&quot;--&quot;</span> &lt;&lt; HP &lt;&lt; <span class="string">&quot;--&quot;</span> &lt;&lt; damage &lt;&lt; <span class="string">&quot;--&quot;</span> &lt;&lt; defense&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">turn</span><span class="params">(robot&amp; r, <span class="type">char</span> change)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (r.<span class="built_in">get</span>() == change)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">r.<span class="built_in">set</span>(change);</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> t, ll, sum=<span class="number">0</span>;</span><br><span class="line"><span class="type">char</span> tt, cc;</span><br><span class="line">string nn;</span><br><span class="line">cin &gt;&gt; t;</span><br><span class="line"><span class="keyword">while</span> (t--)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; nn &gt;&gt; tt &gt;&gt; ll;</span><br><span class="line">cin&gt;&gt;cc;</span><br><span class="line"><span class="function">robot <span class="title">r</span><span class="params">(nn, tt, ll)</span></span>;</span><br><span class="line">r.<span class="built_in">set</span>(tt);</span><br><span class="line">sum += <span class="built_in">turn</span>(r, cc);</span><br><span class="line">r.<span class="built_in">print</span>();</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;The number of robot transform is &quot;</span> &lt;&lt; sum &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="b-虚拟电话-构造与析构">B.虚拟电话（构造与析构）</h1><h2 id="题目描述">题目描述</h2><p>虚拟电话包含属性：电话号、状态、机主姓名。<br>1、电话号是一个类，它包含号码和类型，其中号码是整数类型，类型用单个字母表示用户类别，A表示政府，B表示企业、C表示个人。类操作包括构造、属性的获取和设置等方法，根据需要自行编写。<br>2、状态用一个数字表示，1表示在用，0表示未用，<br>3、机主姓名是一个字符串</p><p>电话操作包括：构造、析构、打印和查询。<br>1、构造函数需要考虑复合类成员的构造，并且输出提示信息。假设电话号码为12345678，则构造函数输出&quot;12345678 constructed.&quot;<br>2、打印是输出电话的相关信息，其中如果电话状态是在用则输出use；状态是未用则输出unuse，输出格式看示例。<br>3、析构函数是输出提示信息。假设电话号为12345678，则析构函数输出&quot;12345678 destructed. &quot;<br>4、查询操作是根据给定的号码查询电话，如果电话自身号码和给定号码不相同，则返回0；如果电话自身号码和给定号码相同，则返回1</p><p>用C++和面向对象思想实现以下要求：<br>1、输入相关数据，创建三个电话对象，并通过构造方法初始化。<br>2、输入若干个电话号码，通过查询操作查询这些号码是否在三个电话对象中，如果不存在输出&quot;wrong number.&quot;，存在则调用打印操作输出电话信息，具体看输出样例</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">phone</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">string  p_name;</span><br><span class="line"><span class="type">int</span> state, p_number;</span><br><span class="line"><span class="type">char</span> p_type;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">phone</span>(string na, <span class="type">int</span> st, <span class="type">int</span> num, <span class="type">char</span> tp)</span><br><span class="line">&#123;</span><br><span class="line">p_name = na;</span><br><span class="line">state = st;</span><br><span class="line">p_number = num;</span><br><span class="line">p_type = tp;</span><br><span class="line">cout &lt;&lt; p_number &lt;&lt; <span class="string">&quot; constructed.&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">print</span><span class="params">()</span></span>;</span><br><span class="line">~<span class="built_in">phone</span>()</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; p_number &lt;&lt; <span class="string">&quot; destructed.&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">check</span><span class="params">(<span class="type">int</span> s)</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">phone::print</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Phone=&quot;</span> &lt;&lt; p_number &lt;&lt; <span class="string">&quot;--Type=&quot;</span> &lt;&lt; p_type &lt;&lt; <span class="string">&quot;--State=&quot;</span>;</span><br><span class="line"><span class="keyword">if</span> (state == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;use&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(state==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;unuse&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;--Owner=&quot;</span> &lt;&lt; p_name &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">phone::check</span><span class="params">(<span class="type">int</span> p_num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (p_number == p_num)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> number, state;</span><br><span class="line"><span class="type">char</span> type;</span><br><span class="line">string name;</span><br><span class="line"><span class="type">int</span> t;</span><br><span class="line">cin &gt;&gt; number &gt;&gt; type &gt;&gt; state &gt;&gt; name;</span><br><span class="line"><span class="function">phone <span class="title">one</span><span class="params">(name, state, number, type)</span></span>;</span><br><span class="line">cin &gt;&gt; number &gt;&gt; type &gt;&gt; state &gt;&gt; name;</span><br><span class="line"><span class="function">phone <span class="title">two</span><span class="params">(name, state, number, type)</span></span>;</span><br><span class="line">cin &gt;&gt; number &gt;&gt; type &gt;&gt; state &gt;&gt; name;</span><br><span class="line"><span class="function">phone <span class="title">three</span><span class="params">(name, state, number, type)</span></span>;</span><br><span class="line">cin &gt;&gt; t;</span><br><span class="line"><span class="keyword">while</span> (t--)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; number;</span><br><span class="line"><span class="type">int</span> tmp = <span class="number">0</span>;</span><br><span class="line">tmp += one.<span class="built_in">check</span>(number);</span><br><span class="line"><span class="keyword">if</span> (one.<span class="built_in">check</span>(number))</span><br><span class="line">one.<span class="built_in">print</span>();</span><br><span class="line">tmp += two.<span class="built_in">check</span>(number);</span><br><span class="line"><span class="keyword">if</span> (two.<span class="built_in">check</span>(number))</span><br><span class="line">two.<span class="built_in">print</span>();</span><br><span class="line">tmp += three.<span class="built_in">check</span>(number);</span><br><span class="line"><span class="keyword">if</span> (three.<span class="built_in">check</span>(number))</span><br><span class="line">three.<span class="built_in">print</span>();</span><br><span class="line"><span class="keyword">if</span> (tmp == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;wrong number.&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="c-银行账户-拷贝构造">C.银行账户（拷贝构造）</h1><h2 id="题目描述">题目描述</h2><p>银行账户包括余额、利率、号码、类型等属性，其中号是固定8位整数，类型表示个人还是企业账户，如果是个人用P标识，企业用E标识。</p><p>账户又分为活期账户和定期账户，活期利率为0.5%，定期利率为1.5%。</p><p>账户操作有计息、查询操作。计息操作是根据利率计算利息，并把利息增加到余额中，并做相关信息输出。查询操作是输出账户的全部信息。</p><p>创建一个活期账户，并通过构造函数初始化各个属性。然后通过拷贝构造来创建一个定期账户，信息与活期账户基本相同，不同之处包括：定期账户号码是活期账户号码加50000000（7个0）；利率是定期利率。</p><p>要求所有数据成员都是私有属性</p><p>用C++语言的类与对象思想来编写程序实现上述要求</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">BankAccount</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="type">double</span> balance, irate;</span><br><span class="line"><span class="type">int</span> num;</span><br><span class="line"><span class="type">char</span> type;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">BankAccount</span>(<span class="type">int</span> n, <span class="type">char</span> t, <span class="type">double</span> b)</span><br><span class="line">&#123;</span><br><span class="line">num = n;</span><br><span class="line">type = t;</span><br><span class="line">balance = b;</span><br><span class="line">irate = <span class="number">0.005</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">BankAccount</span>(BankAccount&amp; ba)</span><br><span class="line">&#123;</span><br><span class="line">num = <span class="number">50000000</span> + ba.num;</span><br><span class="line">type = ba.type;</span><br><span class="line">balance = ba.balance;</span><br><span class="line">irate = <span class="number">0.015</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">rate</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">check</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">operate</span><span class="params">(<span class="type">char</span> tt)</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">BankAccount::rate</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">balance = balance * irate + balance;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Account=&quot;</span> &lt;&lt; num &lt;&lt; <span class="string">&quot;--sum=&quot;</span> &lt;&lt; balance &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">BankAccount::check</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Account=&quot;</span> &lt;&lt; num &lt;&lt; <span class="string">&quot;--&quot;</span>;</span><br><span class="line"><span class="keyword">if</span> (type == <span class="string">&#x27;P&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Person&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Enterprise&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;--sum=&quot;</span> &lt;&lt; balance &lt;&lt; <span class="string">&quot;--rate=&quot;</span> &lt;&lt; irate &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">BankAccount::operate</span><span class="params">(<span class="type">char</span> tt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (tt == <span class="string">&#x27;C&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">rate</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (tt == <span class="string">&#x27;P&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">check</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> t, n;</span><br><span class="line"><span class="type">double</span> b;</span><br><span class="line"><span class="type">char</span> tp, op1, op2;</span><br><span class="line">cin &gt;&gt; t;</span><br><span class="line"><span class="keyword">while</span> (t--)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; tp &gt;&gt; b &gt;&gt; op1 &gt;&gt; op2;</span><br><span class="line"><span class="function">BankAccount <span class="title">p</span><span class="params">(n, tp, b)</span></span>;</span><br><span class="line"><span class="function">BankAccount <span class="title">q</span><span class="params">(p)</span></span>;</span><br><span class="line">p.<span class="built_in">operate</span>(op1);</span><br><span class="line">q.<span class="built_in">operate</span>(op2);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="d-电视遥控-静态-友元">D.电视遥控（静态+友元）</h1><h2 id="题目描述">题目描述</h2><p>电视机包含音量、模式、频道号等属性，其中模式分为<strong>TV</strong>和<strong>DVD</strong>两种。电视机在TV模式下，将播放相应频道的内容；在DVD模式下，电视机使用统一的频道号播放DVD的内容，频道号统一为99。另外，电视机采用静态成员的方法共享两个数据：播放电视的电视机数量和播放DVD的电视机数量，初始都为0。</p><p>电视机操作包括打印、相关静态函数、属性的获取和设置等，根据需要自行编写。</p><p><strong>现编写一个遥控器函数，通过友元方法对电视机进行控制，它的参数包括电视机对象、模式、变化音量、频道号，无返回值。函数操作包括：</strong><br><strong>1、对电视机对象进行模式设置，如果设置为DVD模式，则频道号参数一定是99；如果设置TV模式，则要把频道号设置相应的值。</strong><br><strong>2、根据变化音量进行调整，例如原有音量为50，现输入变化音量为-30，则50-30=20，音量最终为20。音量值最低为0，最高为100，超过范围则音量不再变化。</strong><br><strong>3、更新当前播放电视和播放DVD的电视机数量</strong><br><strong>4、调用电视机对象的打印方法输出电视相关信息</strong><br><strong>提示：如果电视机原来模式和参数传递的模式是相同的，那么实际操作就是调整音量、切换频道和输出信息。</strong></p><p><strong>注意：函数第一个参数必须是一个电视机对象，不可以是整数类型，可以是对象、或对象指针、或对象引用，根据需要自行编写。</strong><br><strong>用动态数组方法创建n台电视机，从1开始编号，频道号为编号，音量初始为50，模式为TV，然后通过遥控器函数对电视机进行控制。</strong><br><strong>所有类的数据成员都是私有属性。请使用C++语言和面向对象思想来实现上述要求</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">TV</span> </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="type">int</span> number;</span><br><span class="line"><span class="type">int</span> volume;</span><br><span class="line"><span class="type">int</span> channel;</span><br><span class="line">string mode;</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> t_num;</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> d_num;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">TV</span>(<span class="type">int</span> n, <span class="type">int</span> c, string m, <span class="type">int</span> v)</span><br><span class="line">&#123;</span><br><span class="line">number = n;</span><br><span class="line">channel = c;</span><br><span class="line">mode = m;</span><br><span class="line">volume = v;</span><br><span class="line">t_num++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">set</span><span class="params">(string m, <span class="type">int</span> c)</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">adjust</span><span class="params">(<span class="type">int</span> v)</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">print</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">friend</span> <span class="type">void</span> <span class="title">control</span><span class="params">(TV&amp; t, string m, <span class="type">int</span> v, <span class="type">int</span> c)</span></span>;</span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">int</span> <span class="title">getTV</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> t_num;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">int</span> <span class="title">getDVD</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> d_num;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> TV::t_num = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> TV::d_num = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">TV::set</span><span class="params">(string m, <span class="type">int</span> c = <span class="number">0</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (mode == <span class="string">&quot;TV&quot;</span> &amp;&amp; m == <span class="string">&quot;DVD&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">channel = <span class="number">99</span>;</span><br><span class="line">d_num++;</span><br><span class="line">t_num--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (mode == <span class="string">&quot;DVD&quot;</span> &amp;&amp; m == <span class="string">&quot;TV&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">channel = c;</span><br><span class="line">t_num++;</span><br><span class="line">d_num--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (m == <span class="string">&quot;TV&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">channel = c;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">mode = m;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">TV::adjust</span><span class="params">(<span class="type">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">volume += v;</span><br><span class="line"><span class="keyword">if</span> (volume &gt; <span class="number">100</span>)</span><br><span class="line">&#123;</span><br><span class="line">volume = <span class="number">100</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (volume &lt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">volume = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">TV::print</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;第&quot;</span> &lt;&lt; number &lt;&lt; <span class="string">&quot;号电视机--&quot;</span> &lt;&lt; mode &lt;&lt; <span class="string">&quot;模式--频道&quot;</span> &lt;&lt; channel &lt;&lt; <span class="string">&quot;--音量&quot;</span> &lt;&lt; volume &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">control</span><span class="params">(TV&amp; t, string m, <span class="type">int</span> c, <span class="type">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">t.<span class="built_in">set</span>(m, c);</span><br><span class="line">t.<span class="built_in">adjust</span>(v);</span><br><span class="line">t.<span class="built_in">print</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> n, t;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; t;</span><br><span class="line"></span><br><span class="line">TV** tele = <span class="keyword">new</span> TV * [n];</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">&#123;</span><br><span class="line">tele[j] = <span class="keyword">new</span> <span class="built_in">TV</span>(j + <span class="number">1</span>, j + <span class="number">1</span>, <span class="string">&quot;TV&quot;</span>, <span class="number">50</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (t--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i, k, cv, x;</span><br><span class="line">string m;</span><br><span class="line">cin &gt;&gt; i &gt;&gt; k &gt;&gt; x &gt;&gt; cv;</span><br><span class="line"><span class="keyword">if</span> (k == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">m = <span class="string">&quot;TV&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(k == <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line">m = <span class="string">&quot;DVD&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">control</span>(*tele[i - <span class="number">1</span>], m, x, cv);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;播放电视的电视机数量为&quot;</span> &lt;&lt; TV::<span class="built_in">getTV</span>() &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;播放DVD的电视机数量为&quot;</span> &lt;&lt; TV::<span class="built_in">getDVD</span>() &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">delete</span> tele[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">delete</span>[]tele;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面向对象程序设计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CPP_第8周</title>
      <link href="/posts/1417838921/"/>
      <url>/posts/1417838921/</url>
      
        <content type="html"><![CDATA[<h1 id="a-距离计算-友元函数">A.距离计算（友元函数）</h1><h2 id="题目描述">题目描述</h2><p><strong>Point类的基本形式如下：</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Point</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="type">double</span> x, y;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">Point</span>(<span class="type">double</span> xx, <span class="type">double</span> yy); <span class="comment">// 构造函数</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><strong>请完成如下要求：</strong></p><p>1.实现Point类；</p><p>2.为Point类增加一个友元函数double Distance(Point &amp;a, Point &amp;b),用于计算两点之间的距离。直接访问Point对象的私有数据进行计算。</p><p>3.编写main函数，输入两点坐标值，计算两点之间的距离。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Point</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="type">double</span> x, y;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Point</span>(<span class="type">double</span> x1, <span class="type">double</span> y1);</span><br><span class="line"><span class="function"><span class="keyword">friend</span> <span class="type">double</span> <span class="title">Distance</span><span class="params">(Point&amp; a, Point&amp; b)</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">Point::<span class="built_in">Point</span>(<span class="type">double</span> x1, <span class="type">double</span> y1)</span><br><span class="line">&#123;</span><br><span class="line">x = x1;</span><br><span class="line">y = y1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">Distance</span><span class="params">(Point&amp; a, Point&amp; b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">double</span> dis;</span><br><span class="line">dis = <span class="built_in">sqrt</span>(<span class="built_in">pow</span>((a.x - b.x), <span class="number">2</span>) + <span class="built_in">pow</span>((a.y - b.y), <span class="number">2</span>));</span><br><span class="line"><span class="keyword">return</span> dis;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> t;</span><br><span class="line">cin &gt;&gt; t;</span><br><span class="line"><span class="keyword">while</span> (t--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">double</span> x1, y1, x2, y2;</span><br><span class="line">cin &gt;&gt; x1 &gt;&gt; y1 &gt;&gt; x2 &gt;&gt; y2;</span><br><span class="line"><span class="function">Point <span class="title">a</span><span class="params">(x1, y1)</span></span>;</span><br><span class="line"><span class="function">Point <span class="title">b</span><span class="params">(x2, y2)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="type">double</span> dis;</span><br><span class="line">dis = <span class="built_in">Distance</span>(a, b);</span><br><span class="line">cout &lt;&lt; (<span class="type">int</span>)dis &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="b-银行账户-静态成员与友元函数">B. 银行账户（静态成员与友元函数）</h1><h2 id="题目描述">题目描述</h2><p>银行账户类的基本描述如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Account</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="type">static</span> <span class="type">float</span> count; <span class="comment">// 账户总余额</span></span><br><span class="line">    <span class="type">static</span> <span class="type">float</span> interestRate;</span><br><span class="line">    string accno, accname;</span><br><span class="line">    <span class="type">float</span> balance;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">Account</span>(string ac, string na, <span class="type">float</span> ba);</span><br><span class="line">    ~<span class="built_in">Account</span>();</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">deposit</span><span class="params">(<span class="type">float</span> amount)</span></span>; <span class="comment">// 存款</span></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">withdraw</span><span class="params">(<span class="type">float</span> amount)</span></span>; <span class="comment">// 取款</span></span><br><span class="line">    <span class="function"><span class="type">float</span> <span class="title">getBalance</span><span class="params">()</span></span>; <span class="comment">// 获取账户余额</span></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">show</span><span class="params">()</span></span>; <span class="comment">// 显示账户所有基本信息</span></span><br><span class="line">    <span class="function"><span class="type">static</span> <span class="type">float</span> <span class="title">getCount</span><span class="params">()</span></span>; <span class="comment">// 获取账户总余额</span></span><br><span class="line">    <span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">setInterestRate</span><span class="params">(<span class="type">float</span> rate)</span></span>; <span class="comment">// 设置利率</span></span><br><span class="line">    <span class="function"><span class="type">static</span> <span class="type">float</span> <span class="title">getInterestRate</span><span class="params">()</span></span>; <span class="comment">// 获取利率</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>要求如下：</p><p>实现该银行账户类</p><p>为账户类Account增加一个友元函数，实现账户结息，要求输出结息后的余额（结息余额=账户余额+账户余额*利率）。友元函数声明形式为 friend void update(Account&amp; a);</p><p>在main函数中，定义一个Account类型的指针数组，让每个指针指向动态分配的Account对象，并调用成员函数测试存款、取款、显示等函数，再调用友元函数测试进行结息。</p><p><strong>大家可以根据实际需求在类内添加其他方法，也可以修改成员函数的参数设置</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Account</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Account</span>(string accno,string name,<span class="type">float</span> balance);</span><br><span class="line">~<span class="built_in">Account</span>();</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Deposit</span><span class="params">(<span class="type">float</span> amount)</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Withdraw</span><span class="params">(<span class="type">float</span> amount)</span></span>;</span><br><span class="line"><span class="function"><span class="type">float</span> <span class="title">GetBalance</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Show</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">int</span> <span class="title">GetCount</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">float</span> <span class="title">GetInterestRate</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">setcount</span><span class="params">(<span class="type">int</span> c)</span></span>;</span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">setrate</span><span class="params">(<span class="type">float</span> rate)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">friend</span> <span class="type">void</span> <span class="title">Update</span><span class="params">(Account &amp; a)</span></span>;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> count;</span><br><span class="line"><span class="type">static</span> <span class="type">float</span> InterestRate;</span><br><span class="line">string _accno,_accname;</span><br><span class="line"><span class="type">float</span> _balance;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="type">int</span> Account::count;</span><br><span class="line"><span class="type">float</span> Account::InterestRate;</span><br><span class="line">Account::<span class="built_in">Account</span>(string accno,string name,<span class="type">float</span> balance):_accno(accno),_accname(name),_balance(balance)&#123;&#125;</span><br><span class="line">Account::~<span class="built_in">Account</span>()&#123;&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Account::Deposit</span><span class="params">(<span class="type">float</span> amount)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">_balance+=amount;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Account::Withdraw</span><span class="params">(<span class="type">float</span> amount)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">_balance-=amount;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">float</span> <span class="title">Account::GetBalance</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> _balance;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Account::Show</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout&lt;&lt;_accno&lt;&lt;<span class="string">&#x27; &#x27;</span>&lt;&lt;_accname&lt;&lt;<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">Account::GetCount</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> count;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">float</span> <span class="title">Account::GetInterestRate</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> InterestRate;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Account::setcount</span><span class="params">(<span class="type">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">count=c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Account::setrate</span><span class="params">(<span class="type">float</span> rate)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">InterestRate=rate;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Update</span><span class="params">(Account &amp; a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">a._balance+=a._balance*a.InterestRate;</span><br><span class="line">cout&lt;&lt;<span class="string">&#x27; &#x27;</span>&lt;&lt;a._balance&lt;&lt;<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> n,i;</span><br><span class="line"><span class="type">float</span> rate,balance_sum=<span class="number">0</span>,balance,amount;</span><br><span class="line">string accno,accname;</span><br><span class="line">cin&gt;&gt;rate;</span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line">Account::<span class="built_in">setcount</span>(n);</span><br><span class="line">Account::<span class="built_in">setrate</span>(rate);</span><br><span class="line">Account ** p=<span class="keyword">new</span> Account*[n];</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line">cin&gt;&gt;accno&gt;&gt;accname&gt;&gt;balance;</span><br><span class="line">p[i]=<span class="keyword">new</span> <span class="built_in">Account</span>(accno,accname,balance);</span><br><span class="line">p[i]-&gt;<span class="built_in">Show</span>();</span><br><span class="line">cin&gt;&gt;amount;</span><br><span class="line">p[i]-&gt;<span class="built_in">Deposit</span>(amount);</span><br><span class="line">cout&lt;&lt;p[i]-&gt;<span class="built_in">GetBalance</span>();</span><br><span class="line"><span class="built_in">Update</span>(*p[i]);</span><br><span class="line">cin&gt;&gt;amount;</span><br><span class="line">p[i]-&gt;<span class="built_in">Withdraw</span>(amount);</span><br><span class="line">cout&lt;&lt;p[i]-&gt;<span class="built_in">GetBalance</span>()&lt;&lt;endl;</span><br><span class="line">balance_sum+=p[i]-&gt;<span class="built_in">GetBalance</span>();</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;balance_sum;</span><br><span class="line"><span class="keyword">if</span>(p)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line"><span class="keyword">delete</span> p[i];</span><br><span class="line"><span class="keyword">delete</span>[] p;</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="c-复数运算-友元函数">C.复数运算（友元函数）</h1><h2 id="题目描述">题目描述</h2><p><strong>复数类的声明如下：</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Complex</span> </span><br><span class="line">&#123; </span><br><span class="line"><span class="keyword">private</span>: </span><br><span class="line"><span class="type">double</span> real; <span class="comment">// 实部 </span></span><br><span class="line"><span class="type">double</span> imag; <span class="comment">// 虚部 </span></span><br><span class="line"><span class="keyword">public</span>: </span><br><span class="line"><span class="built_in">Complex</span>();</span><br><span class="line"><span class="built_in">Complex</span>(<span class="type">double</span> r, <span class="type">double</span> i); <span class="comment">// 友元函数，复数c1 + c2(二参数对象相加) </span></span><br><span class="line"><span class="function"><span class="keyword">friend</span> Complex <span class="title">addCom</span><span class="params">(<span class="type">const</span> Complex&amp; c1, <span class="type">const</span> Complex&amp; c2)</span></span>; <span class="comment">// 友元函数，输出类对象c的有关数据(c为参数对象) </span></span><br><span class="line"><span class="function"><span class="keyword">friend</span> <span class="type">void</span> <span class="title">outCom</span><span class="params">(<span class="type">const</span> Complex&amp; c)</span></span>; </span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><strong>要求如下：</strong></p><p>1.   实现复数类和友元函数addCom和outCom。<br>2.   参考addCom函数为复数类增加一个友元函数minusCom，用于实现两个复数的减法<br>3.   在main函数中，通过友元函数，实现复数的加减法和复数的输出。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Complex</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Complex</span>();</span><br><span class="line"><span class="built_in">Complex</span>(<span class="type">double</span> r, <span class="type">double</span> i);</span><br><span class="line"><span class="function"><span class="keyword">friend</span> Complex <span class="title">addcom</span><span class="params">(Complex a1, Complex a2)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">friend</span> Complex <span class="title">minuscom</span><span class="params">(Complex a1, Complex a2)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">friend</span> <span class="type">void</span> <span class="title">outcom</span><span class="params">(Complex c)</span></span>;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="type">double</span> real;</span><br><span class="line"><span class="type">double</span> imag;</span><br><span class="line">&#125;;</span><br><span class="line">Complex::<span class="built_in">Complex</span>(<span class="type">double</span> r, <span class="type">double</span> i)</span><br><span class="line">&#123;</span><br><span class="line">real = r, imag = i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">Complex <span class="title">addcom</span><span class="params">(Complex a1, Complex a2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="function">Complex <span class="title">c</span><span class="params">(a<span class="number">1.</span>real + a<span class="number">2.</span>real, a<span class="number">1.</span>imag + a<span class="number">2.</span>imag)</span></span>;</span><br><span class="line"><span class="keyword">return</span> c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">Complex <span class="title">minuscom</span><span class="params">(Complex a1, Complex a2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="function">Complex <span class="title">c</span><span class="params">(a<span class="number">1.</span>real - a<span class="number">2.</span>real, a<span class="number">1.</span>imag - a<span class="number">2.</span>imag)</span></span>;</span><br><span class="line"><span class="keyword">return</span> c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">outcom</span><span class="params">(Complex c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;(&quot;</span> &lt;&lt; c.real &lt;&lt; <span class="string">&quot;,&quot;</span> &lt;&lt; c.imag &lt;&lt; <span class="string">&quot;)&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> t, real, imag;</span><br><span class="line"><span class="type">char</span> sym;</span><br><span class="line">cin &gt;&gt; real &gt;&gt; imag;</span><br><span class="line"><span class="function">Complex <span class="title">c</span><span class="params">(real, imag)</span></span>;</span><br><span class="line">cin &gt;&gt; t;</span><br><span class="line"><span class="keyword">while</span> (t--)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; sym &gt;&gt; real &gt;&gt; imag;</span><br><span class="line"><span class="function">Complex <span class="title">c1</span><span class="params">(real, imag)</span></span>;</span><br><span class="line"><span class="keyword">if</span> (sym == <span class="string">&#x27;+&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">c = <span class="built_in">addcom</span>(c, c1);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">c = <span class="built_in">minuscom</span>(c, c1);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">outcom</span>(c);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="d-旅馆顾客统计-静态成员">D.旅馆顾客统计（静态成员）</h1><h2 id="题目描述">题目描述</h2><p><strong>编写程序，统计某旅馆住宿客人的总数和收入总额。要求输入客人的姓名，输出客人编号（2015+顺序号，顺序号4位，如第1位为0001，第2位为0002，依此类推）、姓名、总人数以及收入总额。总人数和收入总额用静态成员，其他属性采用普通的数据成员。旅馆类声明如下：</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Hotel</span> </span><br><span class="line">&#123; </span><br><span class="line"><span class="keyword">private</span>: </span><br><span class="line"><span class="type">static</span> <span class="type">int</span> totalCustNum; <span class="comment">// 顾客总人数 </span></span><br><span class="line"><span class="type">static</span> <span class="type">float</span> totalEarning; <span class="comment">// 旅店总收入 </span></span><br><span class="line"><span class="type">static</span> <span class="type">float</span> rent; <span class="comment">// 每个顾客的房租 </span></span><br><span class="line"><span class="type">char</span> *customerName; <span class="comment">// 顾客姓名 </span></span><br><span class="line"><span class="type">int</span> customerId; <span class="comment">// 顾客编号 </span></span><br><span class="line"><span class="keyword">public</span>: </span><br><span class="line"><span class="comment">// totalCustNum++，customerId按照totalCustNum生成 </span></span><br><span class="line"><span class="built_in">Hotel</span>(<span class="type">char</span>* customer); </span><br><span class="line">~<span class="built_in">Hotel</span>(); <span class="comment">//记得delete customerName </span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Display</span><span class="params">()</span></span>; <span class="comment">//相应输出顾客姓名、顾客编号、总人数、总收入 </span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Hotel</span>&#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> m_TotalCusNum; </span><br><span class="line"><span class="type">static</span><span class="type">float</span> m_TotalEearning;</span><br><span class="line"><span class="type">static</span> <span class="type">float</span> m_Rent;</span><br><span class="line"><span class="type">char</span>* m_CustomerName; </span><br><span class="line"><span class="type">int</span> m_CustomerID; </span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Hotel</span>(<span class="type">char</span> *a_Customer)&#123;</span><br><span class="line">m_CustomerName=<span class="keyword">new</span> <span class="type">char</span>[<span class="built_in">strlen</span>(a_Customer)<span class="number">+1</span>];</span><br><span class="line"><span class="built_in">strcpy</span>(m_CustomerName,a_Customer);</span><br><span class="line">m_TotalCusNum++;</span><br><span class="line">m_CustomerID=m_TotalCusNum;</span><br><span class="line">m_TotalEearning=m_TotalCusNum*m_Rent;</span><br><span class="line">&#125;</span><br><span class="line">~<span class="built_in">Hotel</span>()&#123;</span><br><span class="line"><span class="keyword">delete</span> m_CustomerName;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">setRent</span><span class="params">(<span class="type">float</span> r)</span></span>&#123;</span><br><span class="line">m_Rent=r;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Display</span><span class="params">()</span></span>&#123;</span><br><span class="line">cout&lt;&lt;m_CustomerName&lt;&lt;<span class="string">&quot; 2015&quot;</span>&lt;&lt;<span class="built_in">setfill</span>(<span class="string">&#x27;0&#x27;</span>)&lt;&lt;<span class="built_in">setw</span>(<span class="number">4</span>)&lt;&lt;m_CustomerID;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;m_CustomerID&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;m_TotalEearning&lt;&lt;endl;</span><br><span class="line">&#125; </span><br><span class="line">&#125;;</span><br><span class="line"><span class="type">float</span> Hotel::m_Rent=<span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> Hotel::m_TotalCusNum=<span class="number">0</span>;</span><br><span class="line"><span class="type">float</span> Hotel::m_TotalEearning=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="type">float</span> rent;</span><br><span class="line"><span class="type">char</span> name[<span class="number">50</span>];</span><br><span class="line">cin&gt;&gt;rent;</span><br><span class="line">Hotel::<span class="built_in">setRent</span> (rent);</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">cin&gt;&gt;name;</span><br><span class="line"><span class="keyword">if</span>(name[<span class="number">0</span>]==<span class="string">&#x27;0&#x27;</span>)</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="function">Hotel <span class="title">h1</span><span class="params">(name)</span></span>;</span><br><span class="line">h<span class="number">1.</span><span class="built_in">Display</span>();</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="e-日期时间合并输出-友元函数">E.日期时间合并输出（友元函数）</h1><h2 id="题目描述">题目描述</h2><p>已知日期类Date，有属性：年、月、日，其他成员函数根据需要自行编写，注意该类没有输出的成员函数<br>已知时间类Time，有属性：时、分、秒，其他成员函数根据需要自行编写，注意该类没有输出的成员函数</p><p>现在编写一个全局函数把时间和日期的对象合并起来一起输出，<br>函数原型为：void display(const Date &amp;d, const Time &amp;t)<br>函数输出要求为：<br>1、时分秒输出长度固定2位，不足2位补0<br>2、年份输出长度固定为4位，月和日的输出长度固定2位，不足2位补0<br>例如2017年3月3日19时5分18秒<br>则输出为：2017-03-03 19:05:18<br>程序要求<br>1、把函数display作为时间类、日期类的友元<br>2、分别创建一个日期对象和时间对象，保存日期的输入和时间的输入<br>3、调用display函数实现日期和时间的合并输出</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Time</span>;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">date</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="type">int</span> year, month, day;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">date</span>(<span class="type">int</span> y, <span class="type">int</span> m, <span class="type">int</span> d)</span><br><span class="line">&#123;</span><br><span class="line">year = y, month = m, day = d;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">friend</span> <span class="type">void</span> <span class="title">show</span><span class="params">(date&amp;, Time&amp;)</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Time</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="type">int</span> hour, minute, second;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Time</span>(<span class="type">int</span> h, <span class="type">int</span> m1, <span class="type">int</span> s)</span><br><span class="line">&#123;</span><br><span class="line">hour = h, minute = m1, second = s;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">friend</span> <span class="type">void</span> <span class="title">show</span><span class="params">(date&amp;, Time&amp;)</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">show</span><span class="params">(date&amp; a, Time&amp; b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; a.year &lt;&lt; <span class="string">&quot;-&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="built_in">setfill</span>(<span class="string">&#x27;0&#x27;</span>) &lt;&lt; <span class="built_in">setw</span>(<span class="number">2</span>) &lt;&lt; a.month &lt;&lt; <span class="string">&quot;-&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="built_in">setfill</span>(<span class="string">&#x27;0&#x27;</span>) &lt;&lt; <span class="built_in">setw</span>(<span class="number">2</span>) &lt;&lt; a.day &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="built_in">setfill</span>(<span class="string">&#x27;0&#x27;</span>) &lt;&lt; <span class="built_in">setw</span>(<span class="number">2</span>) &lt;&lt; b.hour &lt;&lt; <span class="string">&quot;:&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="built_in">setfill</span>(<span class="string">&#x27;0&#x27;</span>) &lt;&lt; <span class="built_in">setw</span>(<span class="number">2</span>) &lt;&lt; b.minute &lt;&lt; <span class="string">&quot;:&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="built_in">setfill</span>(<span class="string">&#x27;0&#x27;</span>) &lt;&lt; <span class="built_in">setw</span>(<span class="number">2</span>) &lt;&lt; b.second &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> t;</span><br><span class="line">cin &gt;&gt; t;</span><br><span class="line"><span class="keyword">while</span> (t--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> year, month, day, hour, minute, second;</span><br><span class="line">cin &gt;&gt; year &gt;&gt; month &gt;&gt; day &gt;&gt; hour &gt;&gt; minute &gt;&gt; second;</span><br><span class="line"><span class="function">date <span class="title">a</span><span class="params">(year, month, day)</span></span>;</span><br><span class="line"><span class="function">Time <span class="title">b</span><span class="params">(hour, minute, second)</span></span>;</span><br><span class="line"><span class="built_in">show</span>(a, b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面向对象程序设计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CPP_第7周</title>
      <link href="/posts/216109343/"/>
      <url>/posts/216109343/</url>
      
        <content type="html"><![CDATA[<h1 id="a-equation-类与对象-构造">A.Equation(类与对象+构造)</h1><h2 id="题目描述">题目描述</h2><p>建立一个类Equation，表达方程ax2+bx+c=0。类中至少包含以下方法：</p><p>1、无参构造（abc默认值为1.0、1.0、0）与有参构造函数，用于初始化a、b、c的值；</p><p>2、set方法，用于修改a、b、c的值</p><p>3、getRoot方法，求出方程的根。</p><p>一元二次方程的求根公式如下：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>=</mo><mfrac><mrow><mo>−</mo><mi>b</mi><mo>±</mo><msqrt><mrow><msup><mi>b</mi><mn>2</mn></msup><mo>−</mo><mn>4</mn><mi>a</mi><mi>c</mi></mrow></msqrt></mrow><mrow><mn>2</mn><mi>a</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">x ={-b \pm \sqrt{b^2-4ac}\over 2a}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.384482em;vertical-align:-0.345em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.039482em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathdefault mtight">a</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.3939999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight">b</span><span class="mbin mtight">±</span><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9221171428571429em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight"><span class="mord mathdefault mtight">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7463142857142857em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight">4</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">c</span></span></span><span style="top:-2.882117142857143em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.11788285714285718em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>一元二次方程的求解分三种情况，如下：<br>一元二次方程<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mi>b</mi><mi>x</mi><mo>+</mo><mi>c</mi><mo>=</mo><mn>0</mn><mo stretchy="false">(</mo><mi>a</mi><mo mathvariant="normal">≠</mo><mn>0</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">ax^2+bx+c=0(a\ne0)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">a</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">b</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mopen">(</span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mrel"><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mclose">)</span></span></span></span>的根与根的判别式有如下关系：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi mathvariant="normal">Δ</mi><mo>=</mo><msup><mi>b</mi><mn>2</mn></msup><mo>−</mo><mn>4</mn><mi>a</mi><mi>c</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(\Delta=b^2-4ac)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">Δ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">4</span><span class="mord mathdefault">a</span><span class="mord mathdefault">c</span><span class="mclose">)</span></span></span></span></p><ol><li>当<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Δ</mi><mo>&gt;</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">\Delta&gt;0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord">Δ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>时，方程有两个不相等的实数根</li><li>当<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Δ</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">\Delta=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Δ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>时，方程有两个相等的实数根</li><li>当<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Δ</mi><mo>&lt;</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">\Delta&lt;0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord">Δ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>时，方程无实数根，但有两个共轭复根</li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Equation</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="type">double</span> a, b, c;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Equation</span>()</span><br><span class="line">&#123;</span><br><span class="line">a = <span class="number">1.0</span>, b = <span class="number">1.0</span>, c = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Equation</span>(<span class="type">double</span> a1, <span class="type">double</span> b1, <span class="type">double</span> c1)</span><br><span class="line">&#123;</span><br><span class="line">a = a1, b = b1; c = c1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">set</span><span class="params">(<span class="type">double</span> a1, <span class="type">double</span> b1, <span class="type">double</span> c1)</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">getRoot</span><span class="params">()</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Equation::set</span><span class="params">(<span class="type">double</span> a1, <span class="type">double</span> b1, <span class="type">double</span> c1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">a = a1, b = b1, c = c1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Equation::getRoot</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">double</span> x1, x2;</span><br><span class="line"><span class="type">double</span> solid, imaginary;</span><br><span class="line"><span class="keyword">if</span> (b * b - <span class="number">4</span> * a * c &gt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">x1 = ((-b + <span class="built_in">sqrt</span>(b * b - <span class="number">4</span> * a * c)) / (<span class="number">2</span> * a));</span><br><span class="line">x2 = ((-b - <span class="built_in">sqrt</span>(b * b - <span class="number">4</span> * a * c)) / (<span class="number">2</span> * a));</span><br><span class="line">cout &lt;&lt; fixed &lt;&lt; <span class="built_in">setprecision</span>(<span class="number">2</span>) &lt;&lt; <span class="string">&quot;x1=&quot;</span> &lt;&lt; x1 &lt;&lt; <span class="string">&quot; x2=&quot;</span> &lt;&lt; x2 &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (b * b - <span class="number">4</span> * a * c == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">x1 = -b / (<span class="number">2</span> * a);</span><br><span class="line">cout &lt;&lt; fixed &lt;&lt; <span class="built_in">setprecision</span>(<span class="number">2</span>) &lt;&lt; <span class="string">&quot;x1=x2=&quot;</span> &lt;&lt; x1 &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (b * b - <span class="number">4</span> * a * c &lt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">solid = -b / (<span class="number">2</span> * a);</span><br><span class="line">imaginary = <span class="built_in">sqrt</span>(<span class="number">4</span> * a * c - b * b) / (<span class="number">2</span> * a);</span><br><span class="line">cout &lt;&lt; fixed &lt;&lt; <span class="built_in">setprecision</span>(<span class="number">2</span>) &lt;&lt; <span class="string">&quot;x1=&quot;</span> &lt;&lt; solid &lt;&lt; <span class="string">&quot;+&quot;</span> &lt;&lt; imaginary &lt;&lt; <span class="string">&quot;i x2=&quot;</span> &lt;&lt; solid &lt;&lt; <span class="string">&quot;-&quot;</span> &lt;&lt; imaginary &lt;&lt; <span class="string">&quot;i&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> t;</span><br><span class="line">cin &gt;&gt; t;</span><br><span class="line"><span class="keyword">while</span> (t--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">double</span> a1, b1, c1;</span><br><span class="line">cin &gt;&gt; a1 &gt;&gt; b1 &gt;&gt; c1;</span><br><span class="line"><span class="function">Equation <span class="title">e</span><span class="params">(a1, b1, c1)</span></span>;</span><br><span class="line">e.<span class="built_in">getRoot</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="b-对象是怎样构造的-拷贝构造函数">B.对象是怎样构造的(拷贝构造函数)</h1><h2 id="题目描述">题目描述</h2><p>某个类包含一个整型数据成员.程序运行时若输入0表示用缺省方式定义一个类对象;输入1及一个整数表示用带一个参数的构造函数构造一个类对象;输入2及一个整数表示构造2个类对象，一个用输入的参数构造，另一个用前一个对象构造。试完成该类的定义和实现。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Construction</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="type">int</span> x;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Construction</span>()</span><br><span class="line">&#123;</span><br><span class="line">x = <span class="number">0</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Constructed by default, value = 0&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Construction</span>(<span class="type">int</span> num)</span><br><span class="line">&#123;</span><br><span class="line">x = num;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Constructed using one argument constructor, value = &quot;</span> &lt;&lt; x &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Construction</span>(<span class="type">const</span> Construction&amp; c)</span><br><span class="line">&#123;</span><br><span class="line">x = c.x;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Constructed using copy constructor, value = &quot;</span> &lt;&lt; x &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> t;</span><br><span class="line">cin &gt;&gt; t;</span><br><span class="line"><span class="keyword">while</span> (t--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> tmp;</span><br><span class="line">cin &gt;&gt; tmp;</span><br><span class="line"><span class="keyword">if</span> (tmp == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">Construction mc;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (tmp == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> num1;</span><br><span class="line">cin &gt;&gt; num1;</span><br><span class="line"><span class="function">Construction <span class="title">mc</span><span class="params">(num1)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> num2;</span><br><span class="line">cin &gt;&gt; num2;</span><br><span class="line"><span class="function">Construction <span class="title">mc1</span><span class="params">(num2)</span></span>;</span><br><span class="line"><span class="function">Construction <span class="title">mc2</span><span class="params">(mc1)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="c-电话号码升位-拷贝构造函数">C.电话号码升位(拷贝构造函数)</h1><h2 id="题目描述">题目描述</h2><p>定义一个电话号码类CTelNumber,包含1个字符指针数据成员,以及构造、析构、打印及拷贝构造函数。</p><p>字符指针是用于动态创建一个字符数组，然后保存外来输入的电话号码</p><p>构造函数的功能是为对象设置键盘输入的7位电话号码，</p><p>拷贝构造函数的功能是用原来7位号码的对象升位为8位号码对象,也就是说拷贝构造的对象是源对象的升级.电话升位的规则是原2、3、4开头的电话号码前面加8，原5、6、7、8开头的前面加2。</p><p>注意:电话号码只能全部是数字字符，且与上述情况不符的输入均为非法</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CTelNumber</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="type">char</span>* c;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">CTelNumber</span>(<span class="type">char</span> a[])</span><br><span class="line">    &#123;</span><br><span class="line">        c = <span class="keyword">new</span> <span class="type">char</span>[<span class="number">8</span>];</span><br><span class="line">        <span class="built_in">strcpy</span>(c, a);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">CTelNumber</span>(<span class="type">const</span> CTelNumber&amp; CTN1)</span><br><span class="line">    &#123;</span><br><span class="line">        c = <span class="keyword">new</span> <span class="type">char</span>[<span class="number">9</span>];</span><br><span class="line">        <span class="keyword">if</span> (CTN<span class="number">1.</span>c[<span class="number">0</span>] &gt;= <span class="string">&#x27;2&#x27;</span> &amp;&amp; CTN<span class="number">1.</span>c[<span class="number">0</span>] &lt;= <span class="string">&#x27;4&#x27;</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">6</span>; i++) &#123;</span><br><span class="line">                c[i + <span class="number">1</span>] = CTN<span class="number">1.</span>c[i];</span><br><span class="line">            &#125;</span><br><span class="line">            c[<span class="number">0</span>] = <span class="string">&#x27;8&#x27;</span>;</span><br><span class="line">            c[<span class="number">8</span>] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (CTN<span class="number">1.</span>c[<span class="number">0</span>] &gt;= <span class="string">&#x27;5&#x27;</span> &amp;&amp; CTN<span class="number">1.</span>c[<span class="number">0</span>] &lt;= <span class="string">&#x27;8&#x27;</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">6</span>; i++) &#123;</span><br><span class="line">                c[i + <span class="number">1</span>] = CTN<span class="number">1.</span>c[i];</span><br><span class="line">            &#125;</span><br><span class="line">            c[<span class="number">0</span>] = <span class="string">&#x27;2&#x27;</span>;</span><br><span class="line">            c[<span class="number">8</span>] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">print</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        cout &lt;&lt; c &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    ~<span class="built_in">CTelNumber</span>()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">delete</span>[]c;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">judge</span><span class="params">(<span class="type">char</span>* p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> tmp = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (p[<span class="number">0</span>] &gt;= <span class="string">&#x27;2&#x27;</span> &amp;&amp; p[<span class="number">0</span>] &lt;= <span class="string">&#x27;8&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        tmp = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; <span class="number">7</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (p[i] &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; p[i] &lt;= <span class="string">&#x27;9&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            tmp = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            tmp = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> tmp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> i, t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; t; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">char</span> ch[<span class="number">8</span>];</span><br><span class="line">        cin &gt;&gt; ch;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">judge</span>(ch))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="function">CTelNumber <span class="title">CM1</span><span class="params">(ch)</span></span>;</span><br><span class="line">            <span class="function">CTelNumber <span class="title">CM2</span><span class="params">(CM1)</span></span>;</span><br><span class="line">            CM<span class="number">2.</span><span class="built_in">print</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;Illegal phone number&quot;</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="d-软件备份-拷贝构造函数">D.软件备份(拷贝构造函数)</h1><h2 id="题目描述">题目描述</h2><p>软件作为一种对象也可以用类来描述，软件的属性包括软件名称、类型(分别用O、T和B表示原版、试用版还是备份)、有效截止日期(用CDate类子对象表示)和存储介质(分别用D、H和U表示光盘、磁盘和U盘)等。软件拷贝可通过拷贝构造函数来实现，此时在拷贝构造函数中软件类型改成“B”, 存储介质改为&quot;H&quot;，其它不变。试完成该类的拷贝构造、构造和打印(包括从2015年4月7日算起有效期还有多少天，是否过期)成员函数的实现。</p><p>当输入软件有效截止日期是0年0月0日，表示无日期限制，为unlimited；当输入日期在2015年4月7日之前，则是过期，表示为expired；如果输入日期在2015年4月7日之后，则显示之后的剩余天数。具体输出信息看输出范例。<br>附CDate类的实现：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">CDate</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span>:</span><br><span class="line">        <span class="type">int</span> year, month, day;</span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">        <span class="built_in">CDate</span>(<span class="type">int</span> y, <span class="type">int</span> m, <span class="type">int</span> d);</span><br><span class="line">        <span class="function"><span class="type">bool</span> <span class="title">isLeapYear</span><span class="params">()</span></span>;</span><br><span class="line">        <span class="function"><span class="type">int</span> <span class="title">getYear</span><span class="params">()</span></span>;</span><br><span class="line">        <span class="function"><span class="type">int</span> <span class="title">getMonth</span><span class="params">()</span></span>;</span><br><span class="line">        <span class="function"><span class="type">int</span> <span class="title">getDay</span><span class="params">()</span></span>;</span><br><span class="line">        <span class="function"><span class="type">int</span> <span class="title">getDayofYear</span><span class="params">()</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line">CDate::<span class="built_in">CDate</span>(<span class="type">int</span> y, <span class="type">int</span> m, <span class="type">int</span> d)</span><br><span class="line">&#123; </span><br><span class="line">    year = y, month = m,day = d;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">CDate::isLeapYear</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">    <span class="keyword">return</span> (year % <span class="number">4</span> == <span class="number">0</span> &amp;&amp; year % <span class="number">100</span> != <span class="number">0</span>) || year % <span class="number">400</span> == <span class="number">0</span>; </span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">CDate::getYear</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">    <span class="keyword">return</span> year;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">CDate::getMonth</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">    <span class="keyword">return</span> month;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">CDate::getDay</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">    <span class="keyword">return</span> day;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">CDate::getDayofYear</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> i, sum = day;</span><br><span class="line">    <span class="type">int</span> a[<span class="number">13</span>] = &#123;<span class="number">0</span>, <span class="number">31</span>, <span class="number">28</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>&#125;;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">isLeapYear</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        a[<span class="number">2</span>]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 求日期的天数</span></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; month; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        sum += a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CDate</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="type">int</span> year, month, day;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">CDate</span>(<span class="type">int</span> y, <span class="type">int</span> m, <span class="type">int</span> d);</span><br><span class="line">    <span class="function"><span class="type">bool</span> <span class="title">isLeapYear</span><span class="params">(<span class="type">int</span> year)</span></span>;</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">getYear</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">getMonth</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">getDay</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">getDayofYear</span><span class="params">()</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line">CDate::<span class="built_in">CDate</span>(<span class="type">int</span> y, <span class="type">int</span> m, <span class="type">int</span> d)</span><br><span class="line">&#123;</span><br><span class="line">    year = y, month = m, day = d;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">CDate::isLeapYear</span><span class="params">(<span class="type">int</span> year)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (year % <span class="number">4</span> == <span class="number">0</span> &amp;&amp; year % <span class="number">100</span> != <span class="number">0</span>) || year % <span class="number">400</span> == <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">CDate::getYear</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> year;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">CDate::getMonth</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> month;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">CDate::getDay</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> day;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">CDate::getDayofYear</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> i, sum = day;</span><br><span class="line">    <span class="keyword">if</span> (year &gt; <span class="number">2015</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">2015</span>; j &lt; year; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">isLeapYear</span>(j))</span><br><span class="line">                sum += <span class="number">366</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                sum += <span class="number">365</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> a[<span class="number">13</span>] = &#123; <span class="number">0</span>, <span class="number">31</span>, <span class="number">28</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span> &#125;;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">isLeapYear</span>(year))</span><br><span class="line">    &#123;</span><br><span class="line">        a[<span class="number">2</span>]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; month; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        sum += a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">soft</span> </span><br><span class="line">&#123;</span><br><span class="line">    string name;</span><br><span class="line">    <span class="type">char</span> type, medium;</span><br><span class="line">    CDate num;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">soft</span>(string name1, <span class="type">char</span> type1, <span class="type">char</span> medium1, <span class="type">int</span> year1, <span class="type">int</span> month1, <span class="type">int</span> day1) :<span class="built_in">num</span>(year1, month1, day1) &#123;</span><br><span class="line">        name = name1;</span><br><span class="line">        type = type1;</span><br><span class="line">        medium = medium1;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">soft</span>(soft&amp; s) :<span class="built_in">num</span>(s.num) </span><br><span class="line">    &#123;</span><br><span class="line">        name = s.name;</span><br><span class="line">        type = <span class="string">&#x27;B&#x27;</span>;</span><br><span class="line">        medium = <span class="string">&#x27;H&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">string <span class="title">getname</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">string <span class="title">gettype</span><span class="params">()</span> </span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span> (type) </span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;O&#x27;</span>:<span class="keyword">return</span> <span class="string">&quot;original&quot;</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;B&#x27;</span>:<span class="keyword">return</span> <span class="string">&quot;backup&quot;</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;T&#x27;</span>:<span class="keyword">return</span> <span class="string">&quot;trial&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">string <span class="title">getmedium</span><span class="params">()</span> </span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span> (medium) </span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">case</span><span class="string">&#x27;D&#x27;</span>:<span class="keyword">return</span> <span class="string">&quot;optical disk&quot;</span>;</span><br><span class="line">        <span class="keyword">case</span><span class="string">&#x27;U&#x27;</span>:<span class="keyword">return</span> <span class="string">&quot;USB disk&quot;</span>;</span><br><span class="line">        <span class="keyword">case</span><span class="string">&#x27;H&#x27;</span>:<span class="keyword">return</span> <span class="string">&quot;hard disk&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">printdate</span><span class="params">()</span> </span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="function">CDate <span class="title">stand_num</span><span class="params">(<span class="number">2015</span>, <span class="number">4</span>, <span class="number">7</span>)</span></span>;</span><br><span class="line">        <span class="keyword">if</span> (num.<span class="built_in">getDayofYear</span>() == <span class="number">0</span>) &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;this software has unlimited use&quot;</span> &lt;&lt; endl &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (num.<span class="built_in">getDayofYear</span>() &lt; stand_num.<span class="built_in">getDayofYear</span>()) &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;this software has expired&quot;</span> &lt;&lt; endl &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;this software is going to be expired in &quot;</span> &lt;&lt; num.<span class="built_in">getDayofYear</span>() - stand_num.<span class="built_in">getDayofYear</span>() &lt;&lt; <span class="string">&quot; days&quot;</span> &lt;&lt; endl &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">printsw</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;name:&quot;</span> &lt;&lt; <span class="built_in">getname</span>() &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;type:&quot;</span> &lt;&lt; <span class="built_in">gettype</span>() &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;media:&quot;</span> &lt;&lt; <span class="built_in">getmedium</span>() &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> t, y, m, d;</span><br><span class="line">    string name;</span><br><span class="line">    <span class="type">char</span> type, medium;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span> (t--) &#123;</span><br><span class="line">        cin &gt;&gt; name &gt;&gt; type &gt;&gt; medium &gt;&gt; y &gt;&gt; m &gt;&gt; d;</span><br><span class="line">        <span class="function">soft <span class="title">sw1</span><span class="params">(name, type, medium, y, m, d)</span></span>;</span><br><span class="line">        sw<span class="number">1.</span><span class="built_in">printsw</span>();</span><br><span class="line">        sw<span class="number">1.</span><span class="built_in">printdate</span>();</span><br><span class="line">        <span class="function">soft <span class="title">sw2</span><span class="params">(sw1)</span></span>;</span><br><span class="line">        sw<span class="number">2.</span><span class="built_in">printsw</span>();</span><br><span class="line">        sw<span class="number">2.</span><span class="built_in">printdate</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="e-手机服务-构造-拷贝构造-堆">E.手机服务（构造+拷贝构造+堆）</h1><h2 id="题目描述">题目描述</h2><p>设计一个类来实现手机的功能。它包含私有属性：号码类型、号码、号码状态、停机日期；包含方法：构造、拷贝构造、打印、停机。</p><p>1、号码类型表示用户类别，只用单个字母，A表示机构，B表示企业、C表示个人</p><p>2、号码是11位整数，用一个字符串表示</p><p>3、号码状态用一个数字表示，1、2、3分别表示在用、未用、停用</p><p>4、停机日期是一个日期对象指针，在初始化时该成员指向空，该日期类包含私有属性年月日，以及构造函数和打印函数等</p><hr><p>5、构造函数的作用就是接受外来参数，并设置各个属性值,并输出提示信息，看示例输出</p><p>6、拷贝构造的作用是复制已有对象的信息，并输出提示信息，看示例输出。<br>想一下停机日期该如何复制，没有停机如何复制？？已经停机又如何复制？？</p><p>7、打印功能是把对象的所有属性都输出，输出格式看示例</p><p>8、停机功能是停用当前号码，参数是停机日期，无返回值，操作是把状态改成停用，并停机日期指针创建为动态对象，并根据参数来设置停机日期，最后输出提示信息，看示例输出</p><hr><p>要求：在主函数中实现号码备份的功能，对已有的虚拟手机号的所有信息进行复制，并将号码类型改成D表示备份；将手机号码末尾加字母X</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">phone</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="type">char</span> type;</span><br><span class="line">string num;</span><br><span class="line"><span class="type">int</span> state;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">phone</span>() &#123;&#125;;</span><br><span class="line"><span class="built_in">phone</span>(phone&amp; Mainframe);</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">set</span><span class="params">(<span class="type">char</span> t1, string n1, <span class="type">int</span> s1)</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">print</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">stop</span><span class="params">(<span class="type">int</span> y, <span class="type">int</span> m, <span class="type">int</span> d)</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line">phone::<span class="built_in">phone</span>(phone &amp; Mainframe)</span><br><span class="line">&#123;</span><br><span class="line">type = Mainframe.type;</span><br><span class="line">num = Mainframe.num;</span><br><span class="line">state = Mainframe.state;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Construct a copy of phone &quot;</span> &lt;&lt; num &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;类型=备份||&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;号码=&quot;</span> &lt;&lt; num &lt;&lt; <span class="string">&quot;X&quot;</span>;</span><br><span class="line"><span class="keyword">switch</span> (state)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:cout &lt;&lt; <span class="string">&quot;||State=在用&quot;</span> &lt;&lt; endl; <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:cout &lt;&lt; <span class="string">&quot;||State=未用&quot;</span> &lt;&lt; endl; <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:cout &lt;&lt; <span class="string">&quot;||State=停用&quot;</span> &lt;&lt; endl; <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">phone::set</span><span class="params">(<span class="type">char</span> t1, string n1, <span class="type">int</span> s1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">type = t1;</span><br><span class="line">num = n1;</span><br><span class="line">state = s1;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Construct a new phone &quot;</span> &lt;&lt; num &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">phone::print</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">switch</span> (type)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span><span class="string">&#x27;A&#x27;</span>:cout &lt;&lt; <span class="string">&quot;类型=机构||&quot;</span>; <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span><span class="string">&#x27;B&#x27;</span>:cout &lt;&lt; <span class="string">&quot;类型=企业||&quot;</span>; <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span><span class="string">&#x27;C&#x27;</span>:cout &lt;&lt; <span class="string">&quot;类型=个人||&quot;</span>; <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;号码=&quot;</span> &lt;&lt; num;</span><br><span class="line"><span class="keyword">switch</span> (state)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:cout &lt;&lt; <span class="string">&quot;||State=在用&quot;</span> &lt;&lt; endl; <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:cout &lt;&lt; <span class="string">&quot;||State=未用&quot;</span> &lt;&lt; endl; <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:cout &lt;&lt; <span class="string">&quot;||State=停用&quot;</span> &lt;&lt; endl; <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">phone::stop</span><span class="params">(<span class="type">int</span> y, <span class="type">int</span> m, <span class="type">int</span> d)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Stop the phone &quot;</span> &lt;&lt; num &lt;&lt; endl;</span><br><span class="line"><span class="keyword">switch</span> (type)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span><span class="string">&#x27;A&#x27;</span>:cout &lt;&lt; <span class="string">&quot;类型=机构||&quot;</span>; <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span><span class="string">&#x27;B&#x27;</span>:cout &lt;&lt; <span class="string">&quot;类型=企业||&quot;</span>; <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span><span class="string">&#x27;C&#x27;</span>:cout &lt;&lt; <span class="string">&quot;类型=个人||&quot;</span>; <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;号码=&quot;</span> &lt;&lt; num &lt;&lt; <span class="string">&quot;||State=停用||停机日期=&quot;</span> &lt;&lt; y &lt;&lt; <span class="string">&quot;.&quot;</span> &lt;&lt; m &lt;&lt; <span class="string">&quot;.&quot;</span> &lt;&lt; d &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;----&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">char</span> type;</span><br><span class="line">string num;</span><br><span class="line"><span class="type">int</span> state, n, year, month, day;</span><br><span class="line">phone P;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">while</span> (n--)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; type &gt;&gt; num &gt;&gt; state &gt;&gt; year &gt;&gt; month &gt;&gt; day;</span><br><span class="line">P.<span class="built_in">set</span>(type, num, state);</span><br><span class="line">P.<span class="built_in">print</span>();</span><br><span class="line"><span class="function">phone <span class="title">p</span><span class="params">(P)</span></span>;</span><br><span class="line">p.<span class="built_in">stop</span>(year, month, day);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面向对象程序设计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CPP_第6周</title>
      <link href="/posts/3026056826/"/>
      <url>/posts/3026056826/</url>
      
        <content type="html"><![CDATA[<h1 id="a-point-类与构造">A.Point(类与构造)</h1><h2 id="题目描述">题目描述</h2><p>下面是一个平面上的点的类定义，请在类外实现它的所有方法，并生成点测试它。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Point</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">double</span> x,y;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Point</span>(); <span class="comment">//缺省构造函数，给x，y分别赋值为0</span></span><br><span class="line"><span class="built_in">Point</span>(<span class="type">double</span> x_value,<span class="type">double</span> y_value);<span class="comment">//有参构造函数，给x，y赋参数的值</span></span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">getX</span><span class="params">()</span></span>;<span class="comment">//返回x的值</span></span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">getY</span><span class="params">()</span></span>;<span class="comment">//返回y的值</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setX</span><span class="params">(<span class="type">double</span> x_value)</span></span>;<span class="comment">//设置x的值</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setY</span><span class="params">(<span class="type">double</span> y_value)</span></span>;<span class="comment">//设置y的值</span></span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">distanceToAnotherPoint</span><span class="params">(Point p)</span></span>;<span class="comment">//计算当前点到参数点P的距离</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Point</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="type">double</span> x, y;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Point</span>();</span><br><span class="line"><span class="built_in">Point</span>(<span class="type">double</span> x_value, <span class="type">double</span> y_value);</span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">getX</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">getY</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setX</span><span class="params">(<span class="type">double</span> x_value)</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setY</span><span class="params">(<span class="type">double</span> y_value)</span></span>;</span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">distanceToAnotherPoint</span><span class="params">(Point p)</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">Point::<span class="built_in">Point</span>()</span><br><span class="line">&#123;</span><br><span class="line">x = <span class="number">0</span>, y = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Point::<span class="built_in">Point</span>(<span class="type">double</span> x_value, <span class="type">double</span> y_value)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;x = x_value;</span><br><span class="line"><span class="keyword">this</span>-&gt;y = y_value;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">Point::getX</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">this</span>-&gt;x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">Point::getY</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">this</span>-&gt;y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Point::setX</span><span class="params">(<span class="type">double</span> x_value)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;x=x_value;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Point::setY</span><span class="params">(<span class="type">double</span> y_value)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;y = y_value;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">Point::distanceToAnotherPoint</span><span class="params">(Point p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">sqrt</span>(<span class="built_in">pow</span>(<span class="keyword">this</span>-&gt;x - p.<span class="built_in">getX</span>(), <span class="number">2</span>) + <span class="built_in">pow</span>(<span class="keyword">this</span>-&gt;y - p.<span class="built_in">getY</span>(), <span class="number">2</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> t;</span><br><span class="line"><span class="type">double</span> x1, y1, x2, y2, distance;</span><br><span class="line">cin &gt;&gt; t;</span><br><span class="line"><span class="keyword">while</span>(t--)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; x1 &gt;&gt; y1 &gt;&gt; x2 &gt;&gt; y2;</span><br><span class="line"><span class="function">Point <span class="title">p1</span><span class="params">(x1, y1)</span></span>;</span><br><span class="line"><span class="function">Point <span class="title">p2</span><span class="params">(x2, y2)</span></span>;</span><br><span class="line">distance = p<span class="number">1.</span><span class="built_in">distanceToAnotherPoint</span>(p2);</span><br><span class="line">cout &lt;&lt; fixed &lt;&lt; <span class="built_in">setprecision</span>(<span class="number">2</span>) &lt;&lt; <span class="string">&quot;Distance of Point(&quot;</span> &lt;&lt; x1 &lt;&lt; <span class="string">&quot;,&quot;</span> &lt;&lt; y1 &lt;&lt; <span class="string">&quot;) to Point(&quot;</span> &lt;&lt; x2 &lt;&lt; <span class="string">&quot;,&quot;</span> &lt;&lt; y2 &lt;&lt; <span class="string">&quot;) is &quot;</span> &lt;&lt; distance &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="b-date-类与构造">B.Date(类与构造)</h1><h2 id="题目描述">题目描述</h2><p>下面是一个日期类的定义，请在类外实现其所有的方法，并在主函数中生成对象测试之。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Date</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span>  year,month,day;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Date</span>();<span class="comment">//缺省构造函数，给year,month,day分别赋值为1900,1,1</span></span><br><span class="line"><span class="built_in">Date</span>(<span class="type">int</span> y,<span class="type">int</span> m,<span class="type">int</span> d);<span class="comment">//有参构造函数，给year，month，day分别赋参数的值</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">getYear</span><span class="params">()</span></span>;<span class="comment">//返回当前日期的年份</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">getMonth</span><span class="params">()</span></span>;<span class="comment">//返回当前日期的月份</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">getDay</span><span class="params">()</span></span>;<span class="comment">//返回当前日期的日</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setDate</span><span class="params">(<span class="type">int</span> y,<span class="type">int</span> m,<span class="type">int</span> d)</span></span>;<span class="comment">//按参数重设日期的值</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">print</span><span class="params">()</span></span>;<span class="comment">//按格式输出当前日期的年、月、日</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">addOneDay</span><span class="params">()</span></span>;<span class="comment">//在当前日期上加一天</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意，在判断明天日期时，要加入跨月、跨年、闰年的判断<br>例如9月30日的明天是10月1日，12月31日的明天是第二年的1月1日<br>2月28日的明天要区分是否闰年，闰年则是2月29日，非闰年则是3月1日</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Date</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="type">int</span> year, month, day;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Date</span>();</span><br><span class="line"><span class="built_in">Date</span>(<span class="type">int</span> y, <span class="type">int</span> m, <span class="type">int</span> d);</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">getYear</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">getMonth</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">getDay</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setDate</span><span class="params">(<span class="type">int</span> y, <span class="type">int</span> m, <span class="type">int</span> d)</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printf</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">addOneDay</span><span class="params">()</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">Date::<span class="built_in">Date</span>()</span><br><span class="line">&#123;</span><br><span class="line">year = <span class="number">1900</span>, month = <span class="number">1</span>, day = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Date::<span class="built_in">Date</span>(<span class="type">int</span> y, <span class="type">int</span> m, <span class="type">int</span> d)</span><br><span class="line">&#123;</span><br><span class="line">year = y;</span><br><span class="line">month = m; </span><br><span class="line">day = d;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">Date::getYear</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> year;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">Date::getMonth</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> month;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">Date::getDay</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> day;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Date::setDate</span><span class="params">(<span class="type">int</span> y, <span class="type">int</span> m, <span class="type">int</span> d)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">year = y;</span><br><span class="line">month = m;</span><br><span class="line">day = d;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Date::printf</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; year  &lt;&lt; <span class="string">&quot;/&quot;</span> &lt;&lt;<span class="built_in">setfill</span>(<span class="string">&#x27;0&#x27;</span>)&lt;&lt;<span class="built_in">setw</span>(<span class="number">2</span>) &lt;&lt; month &lt;&lt; <span class="string">&quot;/&quot;</span> &lt;&lt;<span class="built_in">setfill</span>(<span class="string">&#x27;0&#x27;</span>)&lt;&lt;<span class="built_in">setw</span>(<span class="number">2</span>) &lt;&lt; day &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Date::addOneDay</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> dm;</span><br><span class="line">day++;</span><br><span class="line"><span class="keyword">if</span> (month == <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (year % <span class="number">4</span> == <span class="number">0</span> &amp;&amp; year / <span class="number">100</span> != <span class="number">0</span> || year % <span class="number">400</span> == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">dm = <span class="number">29</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">dm = <span class="number">28</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (month == <span class="number">1</span> || month == <span class="number">3</span> || month == <span class="number">5</span> || month == <span class="number">7</span> || month == <span class="number">8</span> || month == <span class="number">10</span> || month == <span class="number">12</span>)</span><br><span class="line">&#123;</span><br><span class="line">dm = <span class="number">31</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">dm = <span class="number">30</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (day &gt; dm)</span><br><span class="line">&#123;</span><br><span class="line">day = day - dm;</span><br><span class="line">month++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (month &gt; <span class="number">12</span>)</span><br><span class="line">&#123;</span><br><span class="line">month = month - <span class="number">12</span>;</span><br><span class="line">year++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> t, y, m, d;</span><br><span class="line">cin &gt;&gt; t;</span><br><span class="line"><span class="keyword">while</span> (t--)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; y &gt;&gt; m &gt;&gt; d;</span><br><span class="line"><span class="keyword">if</span> (t % <span class="number">2</span> == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="function">Date <span class="title">a</span><span class="params">(y, m, d)</span></span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Today is &quot;</span>;</span><br><span class="line">a.<span class="built_in">printf</span>();</span><br><span class="line">a.<span class="built_in">addOneDay</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Tomorrow is &quot;</span>;</span><br><span class="line">a.<span class="built_in">printf</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">Date a;</span><br><span class="line">a.<span class="built_in">setDate</span>(y, m, d);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Today is &quot;</span>;</span><br><span class="line">a.<span class="built_in">printf</span>();</span><br><span class="line">a.<span class="built_in">addOneDay</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Tomorrow is &quot;</span>;</span><br><span class="line">a.<span class="built_in">printf</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="c-分数类-类与构造">C.分数类（类与构造）</h1><h2 id="题目描述">题目描述</h2><p>完成下列分数类的实现:</p><p>class CFraction<br>{<br>private:<br>     int fz, fm;<br>public:<br>     CFraction(int fz_val, int fm_val) ;<br>     CFraction add(const CFraction &amp;r);<br>     CFraction sub(const CFraction &amp;r);<br>     CFraction mul(const CFraction &amp;r);<br>     CFraction div(const CFraction &amp;r);<br>     int getGCD();   // 求对象的分子和分母的最大公约数<br>     void print();<br>};</p><p>求两数a、b的最大公约数可采用辗转相除法，又称欧几里得算法，其步骤为:</p><ol><li>交换a, b使a &gt; b;</li><li>用a除b得到余数r,若r=0,则b为最大公约数,退出.</li><li>若r不为0,则用b代替a, r代替b,此时a,b都比上一次的小,问题规模缩小了;</li><li>继续第2步。</li></ol><p>注意：如果分母是1的话，也按“分子/1”的方式输出。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CFraction</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="type">int</span> fz, fm;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">CFraction</span>();</span><br><span class="line">    <span class="built_in">CFraction</span>(<span class="type">int</span> fz_val, <span class="type">int</span> fm_val)</span><br><span class="line">        :<span class="built_in">fz</span>(fz_val), <span class="built_in">fm</span>(fm_val) &#123;&#125;</span><br><span class="line">    <span class="function">CFraction <span class="title">add</span><span class="params">(<span class="type">const</span> CFraction&amp; r)</span></span>;</span><br><span class="line">    <span class="function">CFraction <span class="title">sub</span><span class="params">(<span class="type">const</span> CFraction&amp; r)</span></span>;</span><br><span class="line">    <span class="function">CFraction <span class="title">mul</span><span class="params">(<span class="type">const</span> CFraction&amp; r)</span></span>;</span><br><span class="line">    <span class="function">CFraction <span class="title">div</span><span class="params">(<span class="type">const</span> CFraction&amp; r)</span></span>;</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">getGCD</span><span class="params">()</span></span>;   </span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">print</span><span class="params">()</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function">CFraction <span class="title">CFraction::add</span><span class="params">(<span class="type">const</span> CFraction&amp; r)</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">CFraction</span>(fz * r.fm + fm * r.fz, fm * r.fm);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">CFraction <span class="title">CFraction::sub</span><span class="params">(<span class="type">const</span> CFraction&amp; r)</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">CFraction</span>(fz * r.fm - fm * r.fz, fm * r.fm);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">CFraction <span class="title">CFraction::mul</span><span class="params">(<span class="type">const</span> CFraction&amp; r)</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">CFraction</span>(fz * r.fz, fm * r.fm);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">CFraction <span class="title">CFraction::div</span><span class="params">(<span class="type">const</span> CFraction&amp; r)</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">CFraction</span>(fz * r.fm, fm * r.fz);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">CFraction::getGCD</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> r ,a,b;</span><br><span class="line">    r = fm, a = <span class="built_in">fabs</span>(fz), b = <span class="built_in">fabs</span>(fm);</span><br><span class="line">    <span class="keyword">while</span> (a % b != <span class="number">0</span>) </span><br><span class="line">    &#123;</span><br><span class="line">        r = a % b;</span><br><span class="line">        a = b;</span><br><span class="line">        b = r;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CFraction::print</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> gcd = <span class="built_in">getGCD</span>();</span><br><span class="line">    fz /= gcd;</span><br><span class="line">    fm /= gcd;</span><br><span class="line">    string signal;</span><br><span class="line">    <span class="keyword">if</span> (fz / fz == fm / fm)</span><br><span class="line">        signal = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        signal = <span class="string">&quot;-&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span> (fm != <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; signal &lt;&lt; fz &lt;&lt; <span class="string">&quot;/&quot;</span> &lt;&lt; fm &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        cout &lt;&lt; signal &lt;&lt; fz &lt;&lt; <span class="string">&quot;/&quot;</span> &lt;&lt; <span class="string">&quot;1&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    <span class="type">int</span> fz1, fm1, fz2, fm2;</span><br><span class="line">    <span class="type">char</span> c;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span> (t--) &#123;</span><br><span class="line">        cin &gt;&gt; fz1 &gt;&gt; c &gt;&gt; fm1 &gt;&gt; fz2 &gt;&gt; c &gt;&gt; fm2;</span><br><span class="line">        <span class="function">CFraction <span class="title">cs1</span><span class="params">(fz1, fm1)</span></span>;</span><br><span class="line">        <span class="function">CFraction <span class="title">cs2</span><span class="params">(fz2, fm2)</span></span>;</span><br><span class="line">        CFraction cs3 = cs<span class="number">1.</span><span class="built_in">add</span>(cs2);</span><br><span class="line">        cs<span class="number">3.</span><span class="built_in">print</span>();</span><br><span class="line">        cs3 = cs<span class="number">1.</span><span class="built_in">sub</span>(cs2);</span><br><span class="line">        cs<span class="number">3.</span><span class="built_in">print</span>();</span><br><span class="line">        cs3 = cs<span class="number">1.</span><span class="built_in">mul</span>(cs2);</span><br><span class="line">        cs<span class="number">3.</span><span class="built_in">print</span>();</span><br><span class="line">        cs3 = cs<span class="number">1.</span><span class="built_in">div</span>(cs2);</span><br><span class="line">        cs<span class="number">3.</span><span class="built_in">print</span>();</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="d-point-array-类-构造-对象数组">D.Point_Array(类+构造+对象数组)</h1><h2 id="题目描述">题目描述</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Point</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">double</span> x,y;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Point</span>(); <span class="comment">//缺省构造函数，给x，y分别赋值为0</span></span><br><span class="line"><span class="built_in">Point</span>(<span class="type">double</span> x_value,<span class="type">double</span> y_value);<span class="comment">//有参构造函数，给x，y赋参数的值</span></span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">getX</span><span class="params">()</span></span>;<span class="comment">//返回x的值</span></span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">getY</span><span class="params">()</span></span>;<span class="comment">//返回y的值</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setXY</span><span class="params">(<span class="type">double</span> x1,<span class="type">double</span> y1)</span></span>&#123;x=x1;y=y1&#125;</span><br><span class="line"><span class="type">void</span> <span class="built_in">setX</span>(<span class="type">double</span> x_value);<span class="comment">//设置x的值</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setY</span><span class="params">(<span class="type">double</span> y_value)</span></span>;<span class="comment">//设置y的值</span></span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">getDisTo</span><span class="params">(Point &amp;p)</span></span>;<span class="comment">//计算当前点到参数点P的距离</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面是我们曾经练习过的一个习题，请在原来代码的基础上作以下修改：</p><p>1、增加自写的析构函数；</p><p>2、将getDisTo方法的参数修改为getDisTo(const Point &amp;p)；</p><p>3、根据输出的内容修改相应的构造函数。</p><p>然后在主函数中根据用户输入的数目建立Point数组，求出数组内距离最大的两个点之间的距离值。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Point</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="type">double</span> x, y;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Point</span>();</span><br><span class="line">~<span class="built_in">Point</span>()</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Distructor.&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Point</span>(<span class="type">double</span> x_val, <span class="type">double</span> y_val);</span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">getX</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">getY</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setXY</span><span class="params">(<span class="type">double</span> x1, <span class="type">double</span> y1)</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setX</span><span class="params">(<span class="type">double</span> x_val)</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setY</span><span class="params">(<span class="type">double</span> y_val)</span></span>;</span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">getDisTo</span><span class="params">(<span class="type">const</span> Point&amp; p)</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">Point::<span class="built_in">Point</span>()</span><br><span class="line">&#123;</span><br><span class="line">x = <span class="number">0</span>, y = <span class="number">0</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Constructor.&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Point::<span class="built_in">Point</span>(<span class="type">double</span> x_val, <span class="type">double</span> y_val)</span><br><span class="line">&#123;</span><br><span class="line">x = x_val;</span><br><span class="line">y = y_val;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">Point::getX</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">Point::getY</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Point::setXY</span><span class="params">(<span class="type">double</span> x1, <span class="type">double</span> y1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">x = x1;</span><br><span class="line">y = y1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Point::setX</span><span class="params">(<span class="type">double</span> x_val)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">x = x_val;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Point::setY</span><span class="params">(<span class="type">double</span> y_val)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">y = y_val;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">Point::getDisTo</span><span class="params">(<span class="type">const</span> Point&amp; p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">sqrt</span>(<span class="built_in">pow</span>(x-p.x,<span class="number">2</span>)+<span class="built_in">pow</span>(y-p.y,<span class="number">2</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> t;</span><br><span class="line">cin &gt;&gt; t;</span><br><span class="line"><span class="keyword">while</span> (t--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="type">int</span> x, y, i, j;</span><br><span class="line">Point* p = <span class="keyword">new</span> Point[n];</span><br><span class="line"><span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">double</span> x1, y1;</span><br><span class="line">cin &gt;&gt; x1 &gt;&gt; y1;</span><br><span class="line">p[i].<span class="built_in">setXY</span>(x1, y1);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">double</span> max = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> a1, a2;</span><br><span class="line"><span class="type">double</span> tmp;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (j = i + <span class="number">1</span>; j &lt; n; j++)</span><br><span class="line">&#123;</span><br><span class="line">tmp = p[i].<span class="built_in">getDisTo</span>(p[j]);</span><br><span class="line"><span class="keyword">if</span> (tmp &gt; max)</span><br><span class="line">&#123;</span><br><span class="line">max = tmp;</span><br><span class="line">a1 = i;</span><br><span class="line">a2 = j;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;The longeset distance is &quot;</span> &lt;&lt; fixed &lt;&lt; <span class="built_in">setprecision</span>(<span class="number">2</span>) &lt;&lt; max &lt;&lt; <span class="string">&quot;,between p[&quot;</span> &lt;&lt; a1 &lt;&lt; <span class="string">&quot;] and p[&quot;</span> &lt;&lt; a2 &lt;&lt; <span class="string">&quot;].&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">delete</span>[]p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="e-stack-类与构造">E.Stack(类与构造)</h1><h2 id="题目描述">题目描述</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">CStack</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">CStack</span>();<span class="comment">//建立一个10个元素的栈</span></span><br><span class="line"><span class="built_in">CStack</span>(<span class="type">int</span> s);<span class="comment">//建立一个具有s个元素的栈</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">get</span><span class="params">(<span class="type">int</span> index)</span></span>;<span class="comment">//返回下标为index的栈元素</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">push</span><span class="params">(<span class="type">int</span> n)</span></span>;<span class="comment">//进栈，top加1，把n的值存入栈顶</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">isEmpty</span><span class="params">()</span></span>;<span class="comment">//判断栈是否为空，空则返回1，否则返回0</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">isFull</span><span class="params">()</span></span>;<span class="comment">//判断是否为满的，满则返回1，否则返回0</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">pop</span><span class="params">()</span></span>;<span class="comment">//出栈，返回栈顶元素，top减1</span></span><br><span class="line">~<span class="built_in">CStack</span>();<span class="comment">//析构函数，释放在构造时申请的空间</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="type">int</span> *a;</span><br><span class="line"><span class="type">int</span> size;<span class="comment">//栈的大小</span></span><br><span class="line"><span class="type">int</span> top;<span class="comment">//指向栈顶</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面是栈类的定义，栈是一种具有先进后出特点的线性表，请根据注释，完成类中所有方法的实现，并在主函数中测试之。</p><p>堆栈类的说明如下：</p><ol><li><p>堆栈的数据实际上是保存在数组a中，而a开始是一个指针，在初始化时，根据实际需求将a动态创建为数组，数组长度根据构造函数的参数决定。</p></li><li><p>size实际上就是数组的长度，当使用无参构造则size为10，当使用有参构造则size为s</p></li><li><p>top表示数组下标，也表示数组中下一个存放数据的空白位置。</p></li><li><p>push操作表示堆栈的数组存放一个数据，例如一开始数组为空，则top为0，当有数据要入栈时，把数据存放在a[top]的位置，然后top加1指向下一个空白位置、数据进栈只能从栈顶进。</p></li><li><p>pop操作表示一个数据要出栈，数据出栈只能从栈顶出，先把top减1指向栈顶数据，然后把数据返回。</p></li><li><p>判断堆栈空的条件是top是否等于0，判断堆栈满的条件是top是否等于size</p></li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CStack</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="type">int</span>* a;</span><br><span class="line"><span class="type">int</span> size;</span><br><span class="line"><span class="type">int</span> top;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">CStack</span>()</span><br><span class="line">&#123;</span><br><span class="line">a = <span class="keyword">new</span> <span class="type">int</span>[<span class="number">10</span>];</span><br><span class="line">size = <span class="number">10</span>;</span><br><span class="line">top = <span class="number">0</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Constructor.&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">CStack</span>(<span class="type">int</span> s)</span><br><span class="line">&#123;</span><br><span class="line">a = <span class="keyword">new</span> <span class="type">int</span>[s];</span><br><span class="line">size = s;</span><br><span class="line">top = <span class="number">0</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Constructor.&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">get</span><span class="params">(<span class="type">int</span> index)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> *(a + index);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">push</span><span class="params">(<span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">a[top++] = n;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">isEmpty</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> top == <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">isFull</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> top == size;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">pop</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> *(a + (--top));</span><br><span class="line">&#125;</span><br><span class="line">~<span class="built_in">CStack</span>()</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">delete</span>[]a;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Destructor.&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> i, j, t, size_1, m;</span><br><span class="line">cin &gt;&gt; t;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; t; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; size_1;</span><br><span class="line"><span class="function">CStack <span class="title">CStack1</span><span class="params">(size_1)</span></span>;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; size_1; j++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; m;</span><br><span class="line">CStack<span class="number">1.</span><span class="built_in">push</span>(m);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (CStack<span class="number">1.</span><span class="built_in">isEmpty</span>() == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;empty&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (CStack<span class="number">1.</span><span class="built_in">isFull</span>() == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; size_1<span class="number">-1</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; CStack<span class="number">1.</span><span class="built_in">pop</span>() &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; CStack<span class="number">1.</span><span class="built_in">pop</span>() &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面向对象程序设计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CPP_第5周</title>
      <link href="/posts/2800245140/"/>
      <url>/posts/2800245140/</url>
      
        <content type="html"><![CDATA[<h1 id="a-对象数组-类和对象">A. 对象数组（类和对象）</h1><h2 id="题目描述">题目描述</h2><p>课堂上我们谈到类这个概念，比如第一题我们有学生类这个抽象的概念，成千上万个学生都具有同样的属性，但针对某个具体学生来说，他/她具有自己的鲜明个性，比如计算机专业的王海同学，信息工程学院的李慧同学，那么我们是定义一个该类的变量：Student  student; 假设该类包含姓名、学号、性别、所属学院、联系电话等；在程序运行过程，把变量student赋予不同值就可以让它表示是王海还是李慧，尝试定义一个学生数组（比如四个元素大小，请思考此时四个对象是如何初始化的呢？），然后输入四个不同学生各项属性给数组里学生初始化（最好定义一个输入函数），然后输出该学生对象数组的各对象的姓名。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span> </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Set</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Print</span><span class="params">()</span></span>;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">string name;</span><br><span class="line">string number;</span><br><span class="line">string sex;</span><br><span class="line">string college;</span><br><span class="line">string phone;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Student::Set</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; name &gt;&gt; number &gt;&gt; sex &gt;&gt; college &gt;&gt; phone;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Student::Print</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; name &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line">Student* p = <span class="keyword">new</span> Student[n];</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line">p[i].<span class="built_in">Set</span>();</span><br><span class="line">p[i].<span class="built_in">Print</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">delete</span>[]p;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="b-存折类定义-类与对象">B.存折类定义（类与对象）</h1><h2 id="题目描述">题目描述</h2><p>定义一个存折类CAccount，存折类具有帐号（account, long）、姓名（name,char[10])、余额（balance,float）等数据成员，可以实现存款（deposit,操作成功提示“saving ok!”)、取款（withdraw，操作成功提示“withdraw ok!”）和查询余额（check）的操作，取款金额必须在余额范围内，否则提示“sorry! over limit!”。编写主函数，建立这个类的对象并测试，输入账号、姓名、余额后，按照查询余额、存款、查询余额、取款、查询余额的顺序调用类方法并输出。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CAccount</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">input</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">deposit</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">withdraw</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">check</span><span class="params">()</span></span>;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="type">long</span> account;</span><br><span class="line">string name;</span><br><span class="line"><span class="type">float</span> balance;</span><br><span class="line"><span class="type">double</span> deposit_amount;</span><br><span class="line"><span class="type">double</span> withdrawal_amount;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CAccount::input</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; account &gt;&gt; name &gt;&gt; balance &gt;&gt; deposit_amount &gt;&gt; withdrawal_amount;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CAccount::deposit</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">balance += deposit_amount;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;saving ok!&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CAccount::withdraw</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (withdrawal_amount &gt; balance) </span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;sorry! over limit!&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">balance -= withdrawal_amount;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;withdraw ok!&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CAccount::check</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; name &lt;&lt; <span class="string">&quot;&#x27;s balance is &quot;</span> &lt;&lt; balance &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">CAccount a[<span class="number">10</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">a[i].<span class="built_in">input</span>();</span><br><span class="line">a[i].<span class="built_in">check</span>();</span><br><span class="line">a[i].<span class="built_in">deposit</span>();</span><br><span class="line">a[i].<span class="built_in">check</span>();</span><br><span class="line">a[i].<span class="built_in">withdraw</span>();</span><br><span class="line">a[i].<span class="built_in">check</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="c-点和圆-类与对象">C.点和圆 (类与对象)</h1><h2 id="题目描述">题目描述</h2><p>设计一个点类Point，包含属性：x坐标和y坐标，方法：设定坐标（setPoint），获取x坐标（getX），获取y坐标（getY）</p><p>设计一个圆类Circle，包含属性：圆心坐标x和y、半径r；方法包括：</p><ol><li><p>设定圆心（setCenter），设置圆心x坐标和y坐标</p></li><li><p>设定半径（setRadius），设置半径长度</p></li><li><p>计算面积（getArea），计算公式：面积=3.14*r*r</p></li><li><p>计算周长（getLength），计算公式：周长=2*3.14*r</p></li><li><p>包含（contain），判断一个圆是否包含一个点，计算圆心到这个点的距离，然后和半径做比较，大于则不包含，小于等于则包含</p></li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">//-----类定义-----</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Point</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">double</span> x, y;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">SetPoint</span><span class="params">(<span class="type">double</span> x1, <span class="type">double</span> y1)</span></span>;</span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">getX</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">getY</span><span class="params">()</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//----类实现------</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Point::SetPoint</span><span class="params">(<span class="type">double</span> x1, <span class="type">double</span> y1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">x = x1;</span><br><span class="line">y = y1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">Point::getX</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">Point::getY</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//-----类定义------</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Circle</span></span><br><span class="line">&#123;</span><br><span class="line">Point p;</span><br><span class="line"><span class="type">double</span> r;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">SetCenter</span><span class="params">(<span class="type">double</span> x1, <span class="type">double</span> y1)</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">SetRadius</span><span class="params">(<span class="type">double</span> n)</span></span>;</span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">getArea</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">getLength</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">Contain</span><span class="params">(Point q)</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//----类实现------</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Circle::SetCenter</span><span class="params">(<span class="type">double</span> x1, <span class="type">double</span> y1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">p.<span class="built_in">SetPoint</span>(x1, y1);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Circle::SetRadius</span><span class="params">(<span class="type">double</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">r = n;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">Circle::getArea</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">3.14</span> * r * r;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">Circle::getLength</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">3.14</span> * <span class="number">2</span> * r;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">Circle::Contain</span><span class="params">(Point q)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">double</span> D_length;</span><br><span class="line">D_length = <span class="built_in">sqrt</span>((p.x - q.x) * (p.x - q.x) + (p.y - q.y) * (p.y - q.y));</span><br><span class="line"><span class="keyword">return</span> D_length;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//---------主函数---------</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">double</span> x, y, r, x1, y1;</span><br><span class="line"><span class="type">double</span> area, length;</span><br><span class="line">cin &gt;&gt; x &gt;&gt; y &gt;&gt; r &gt;&gt; x1 &gt;&gt; y1;</span><br><span class="line">Circle c;</span><br><span class="line">Point p;</span><br><span class="line">c.<span class="built_in">SetCenter</span>(x, y);</span><br><span class="line">c.<span class="built_in">SetRadius</span>(r);</span><br><span class="line">p.<span class="built_in">SetPoint</span>(x1, y1);</span><br><span class="line">area = c.<span class="built_in">getArea</span>();</span><br><span class="line">length = c.<span class="built_in">getLength</span>();</span><br><span class="line"><span class="keyword">if</span> (c.<span class="built_in">Contain</span>(p) &lt;= r)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; fixed &lt;&lt; <span class="built_in">setprecision</span>(<span class="number">2</span>) &lt;&lt; area &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; fixed &lt;&lt; <span class="built_in">setprecision</span>(<span class="number">2</span>) &lt;&lt; length &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;yes&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; fixed &lt;&lt; <span class="built_in">setprecision</span>(<span class="number">2</span>) &lt;&lt; area &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; fixed &lt;&lt; <span class="built_in">setprecision</span>(<span class="number">2</span>) &lt;&lt; length &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;no&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="d-最胖的加菲-类与对象-数组">D.最胖的加菲（类与对象+数组）</h1><h2 id="题目描述">题目描述</h2><p>有一群猫猫，每只猫都有自己的名称和体重。</p><p>用类来描述猫，名称和体重都是私有属性，要求加入属性的get方法。其他函数根据需要自己定义</p><p>创建一个动态的猫对象数组，存储各只猫的名称和体重</p><p>根据猫的体重对数组做升序排序，并输出排序后每只猫的名称</p><p>题目涉及的数值均用整数处理</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Cat</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">set</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; name &gt;&gt; weight;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">get_wei</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> weight;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">get_nam</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">string name;</span><br><span class="line"><span class="type">int</span> weight;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Sort</span><span class="params">(Cat&amp; a, Cat&amp; b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Cat tmp;</span><br><span class="line"><span class="keyword">if</span> (a.<span class="built_in">get_wei</span>() &gt; b.<span class="built_in">get_wei</span>())</span><br><span class="line">&#123;</span><br><span class="line">tmp = a;</span><br><span class="line">a = b;</span><br><span class="line">b = tmp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line">Cat* p = <span class="keyword">new</span> Cat[n];</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line">p[i].<span class="built_in">set</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n - i; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">Sort</span>(p[j], p[j + <span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line">p[i].<span class="built_in">get_nam</span>();</span><br><span class="line"><span class="keyword">if</span> (i &lt; n - <span class="number">1</span>) cout &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">delete</span>[]p;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="e-身体评估-类与对象">E.身体评估（类与对象）</h1><h2 id="题目描述">题目描述</h2><p>评估成年人身体健康有多个指标，包括BMI、体脂率等</p><p>设计一个身体健康类，包含私有成员：姓名、身高(米)、体重(公斤)，腰围(厘米)，实现两个公有方法如下：</p><p>BMI方法，返回BMI数值(整数，四舍五入到个位)，计算公式BMI= 体重 / 身高的平方</p><p>体脂率方法，返回体脂率数值(浮点数)，计算过程如下：<br>1）参数a=腰围（cm）×0.74<br>2）参数b=体重（kg）×0.082+34.89<br>3）体脂肪重量（kg）=a－b<br>4）体脂率 = 体脂肪重量÷体重<br>其它方法根据需要自行定义</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Health</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">input</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">display</span><span class="params">()</span></span>;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">string name;</span><br><span class="line"><span class="type">double</span> height;</span><br><span class="line"><span class="type">double</span> weight;</span><br><span class="line"><span class="type">double</span> w_circumference;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Health::input</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; name &gt;&gt; height &gt;&gt; weight &gt;&gt; w_circumference;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Health::display</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">double</span> bmi, a, b, c, d;</span><br><span class="line"><span class="type">int</span> BMI;</span><br><span class="line">bmi = weight / (height * height);</span><br><span class="line">BMI = <span class="built_in">round</span>(bmi);</span><br><span class="line">a = w_circumference * <span class="number">0.74</span>;</span><br><span class="line">b = weight * <span class="number">0.082</span> + <span class="number">34.89</span>;</span><br><span class="line">c = a - b;</span><br><span class="line">d = c / weight;</span><br><span class="line">cout &lt;&lt; name &lt;&lt; <span class="string">&quot;的BMI指数为&quot;</span> &lt;&lt; BMI &lt;&lt; <span class="string">&quot;--体脂率为&quot;</span> &lt;&lt; fixed &lt;&lt; <span class="built_in">setprecision</span>(<span class="number">2</span>) &lt;&lt; d &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> t, i;</span><br><span class="line">cin &gt;&gt; t;</span><br><span class="line">Health* a = <span class="keyword">new</span> Health[t];</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; t; i++)</span><br><span class="line">&#123;</span><br><span class="line">a[i].<span class="built_in">input</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; t; i++)</span><br><span class="line">&#123;</span><br><span class="line">a[i].<span class="built_in">display</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">delete</span> []a;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面向对象程序设计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CPP_第4周</title>
      <link href="/posts/508837617/"/>
      <url>/posts/508837617/</url>
      
        <content type="html"><![CDATA[<h1 id="a-三数论大小-引用">A.三数论大小（引用）</h1><h2 id="题目描述">题目描述</h2><p>输入三个整数，然后按照从大到小的顺序输出数值。</p><p>要求：定义一个函数，无返回值，函数参数是三个整数参数的引用，例如int &amp;a, int &amp;b, int &amp;c。在函数内对三个参数进行排序。主函数调用这个函数进行排序。</p><p>要求：不能直接对三个整数进行排序，必须通过函数而且是引用的方法。</p><p>要求：输出必须在主函数进行。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">fun</span><span class="params">(<span class="type">int</span>&amp; ra, <span class="type">int</span>&amp; rb, <span class="type">int</span>&amp; rc)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> t, a, b, c;</span><br><span class="line">cin &gt;&gt; t;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; t; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;</span><br><span class="line"><span class="built_in">fun</span>(a, b, c);</span><br><span class="line">cout &lt;&lt; a &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; b &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; c &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">fun</span><span class="params">(<span class="type">int</span>&amp; ra, <span class="type">int</span>&amp; rb, <span class="type">int</span>&amp; rc)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> tmp;</span><br><span class="line"><span class="keyword">if</span> (ra &lt; rb)</span><br><span class="line">&#123;</span><br><span class="line">tmp = ra;</span><br><span class="line">ra = rb;</span><br><span class="line">rb = tmp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (ra &lt; rc)</span><br><span class="line">&#123;</span><br><span class="line">tmp = ra;</span><br><span class="line">ra = rc;</span><br><span class="line">rc = tmp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (rb &lt; rc)</span><br><span class="line">&#123;</span><br><span class="line">tmp = rb;</span><br><span class="line">rb = rc;</span><br><span class="line">rc = tmp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="b-求最大值最小值-引用">B.求最大值最小值（引用）</h1><h2 id="题目描述">题目描述</h2><p>编写函数void find(int *num,int n,int &amp;minIndex,int &amp;maxIndex)，求数组num(元素为num[0]，num[1]，…，num[n-1]）中取最小值、最大值的元素下标minIndex,maxIndex（若有相同最值，取第一个出现的下标。）</p><p>输入n，动态分配n个整数空间，输入n个整数，调用该函数求数组的最小值、最大值下标。</p><p>改变函数find功能不计分。</p><p>要求：在main函数中按样例格式输出结果，不能直接在find函数中输出。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">find</span><span class="params">(<span class="type">int</span>* num, <span class="type">int</span> n, <span class="type">int</span>&amp; minIndex, <span class="type">int</span>&amp; maxIndex)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (num[i] &gt; num[maxIndex])</span><br><span class="line">&#123;</span><br><span class="line">maxIndex = i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (num[i] &lt; num[minIndex])</span><br><span class="line">&#123;</span><br><span class="line">minIndex = i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> t, i, n, maxIndex, minIndex;</span><br><span class="line">cin &gt;&gt; t;</span><br><span class="line"><span class="keyword">while</span> (t--)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line">maxIndex = minIndex = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span>* array = <span class="keyword">new</span> <span class="type">int</span>[n];</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; array[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">find</span>(array, n, minIndex, maxIndex);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;min=&quot;</span> &lt;&lt; array[minIndex] &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; <span class="string">&quot;minindex=&quot;</span> &lt;&lt; minIndex &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;max=&quot;</span> &lt;&lt; array[maxIndex] &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; <span class="string">&quot;maxindex=&quot;</span> &lt;&lt; maxIndex &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">delete</span>[]array;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="c-职工信息-结构体">C.职工信息 (结构体)</h1><h2 id="题目描述">题目描述</h2><p>编写程序，定义一个职工信息结构包括职工姓名、工作年限、工资总额。定义一个存放职工信息的结构数组</p><p>程序实现初始化5名职工的信息，并对工作年限大于等于30年的职工每人加100元工资，分别输出工资变化之前和之后的所有职工的信息。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">struct</span>  <span class="title class_">Person</span> &#123;</span><br><span class="line"><span class="type">char</span> name[<span class="number">10</span>];</span><br><span class="line"><span class="type">int</span> year;</span><br><span class="line"><span class="type">int</span> wages;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Person</span> array[<span class="number">6</span>];</span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; array[i].name &gt;&gt; array[i].year &gt;&gt; array[i].wages;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;原始工资&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;姓名&quot;</span> &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; <span class="string">&quot;年限&quot;</span> &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; <span class="string">&quot;工资&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; array[i].name &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; array[i].year &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; array[i].wages &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;加薪后工资&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;姓名&quot;</span> &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; <span class="string">&quot;年限&quot;</span> &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; <span class="string">&quot;工资&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; array[i].name &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; array[i].year &lt;&lt; <span class="string">&quot; &quot;</span> ;</span><br><span class="line"><span class="keyword">if</span> (array[i].year &gt;= <span class="number">30</span>)</span><br><span class="line">&#123;</span><br><span class="line">array[i].wages += <span class="number">100</span>;</span><br><span class="line">cout &lt;&lt; array[i].wages &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; array[i].wages &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="d-谁是老二-结构体">D.谁是老二（结构体）</h1><h2 id="题目描述">题目描述</h2><p>定义一个结构体，包含年月日，表示一个学生的出生日期。然后在一群学生的出生日期中找出谁的出生日期排行第二</p><p>要求：出生日期的存储必须使用结构体，不能使用其他类型的数据结构。</p><p>要求程序全过程对出生日期的输入、访问、输出都必须使用结构。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">birth</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> year;</span><br><span class="line">    <span class="type">int</span> month;</span><br><span class="line">    <span class="type">int</span> day;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">swap</span><span class="params">(birth&amp; a, birth&amp; b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    birth tmp = a;</span><br><span class="line">    a = b;</span><br><span class="line">    b = tmp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">compare</span><span class="params">(birth&amp; a, birth&amp; b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (a.year &gt; b.year)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (a.year &lt; b.year)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (a.month &gt; b.month) </span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (a.month &lt; b.month) </span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> a.day &gt; b.day;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> i, j, k, t;</span><br><span class="line">    birth member[<span class="number">100</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; t; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; member[i].year &gt;&gt; member[i].month &gt;&gt; member[i].day;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; t; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; t - i - <span class="number">1</span>; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">compare</span>(member[j], member[j + <span class="number">1</span>]))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">swap</span>(member[j], member[j + <span class="number">1</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; member[<span class="number">1</span>].year &lt;&lt; <span class="string">&#x27;-&#x27;</span> &lt;&lt; member[<span class="number">1</span>].month &lt;&lt; <span class="string">&#x27;-&#x27;</span> &lt;&lt; member[<span class="number">1</span>].day &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="e-抄袭查找-结构体-指针-函数">E.抄袭查找（结构体+指针+函数）</h1><h2 id="题目描述">题目描述</h2><p>已知一群学生的考试试卷，要求对试卷内容进行对比，查找是否有抄袭。</p><p>每张试卷包含：学号（整数类型）、题目1答案（字符串类型）、题目2答案（字符串类型）、题目3答案（字符串类型）</p><p>要求：使用结构体来存储试卷的信息。定义一个函数，返回值为一个整数，参数是两个结构体指针，函数操作是比较两张试卷的每道题目的答案，如果相同题号的答案相似度超过90%，那么就认为有抄袭，函数返回抄袭题号，否则返回0。相似度是指在同一题目中，两个答案的逐个位置上的字符两两比较，相同的数量大于等于任一个答案的长度的90%，就认为抄袭。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">exampaper</span> &#123;</span><br><span class="line"><span class="type">int</span> id;</span><br><span class="line">string answer[<span class="number">4</span>];</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">compare</span><span class="params">(string a, string b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="type">double</span> len = <span class="number">0</span>, sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (a[i] != <span class="string">&#x27;\0&#x27;</span> &amp;&amp; b[i] != <span class="string">&#x27;\0&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (a[i] == b[i])</span><br><span class="line">&#123;</span><br><span class="line">sum++;</span><br><span class="line">&#125;</span><br><span class="line">i++, len++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (len * <span class="number">0.9</span> &lt;= sum)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> t;</span><br><span class="line">cin &gt;&gt; t;</span><br><span class="line">exampaper* student = <span class="keyword">new</span> exampaper[t];</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; t; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; student[i].id;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; student[i].answer[j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; t; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> k = j + <span class="number">1</span>; k &lt; t; k++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">compare</span>(student[j].answer[i], student[k].answer[i])== <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; student[j].id &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; student[k].id &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; i + <span class="number">1</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面向对象程序设计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CPP_第3周</title>
      <link href="/posts/2206402120/"/>
      <url>/posts/2206402120/</url>
      
        <content type="html"><![CDATA[<h1 id="a-月份查询-指针数组">A.月份查询（指针数组）</h1><h2 id="题目描述">题目描述</h2><p>已知每个月份的英文单词如下，要求创建一个指针数组，数组中的每个指针指向一个月份的英文字符串，要求根据输入的月份数字输出相应的英文单词</p><p>1月 January <br>2月 February<br>3月 March<br>4月 April<br>5月 May<br>6月 June<br>7月 July<br>8月 August<br>9月 September<br>10月 October<br>11月 November<br>12月 December</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> t, x;</span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* mouth[<span class="number">12</span>] = &#123; <span class="string">&quot;January&quot;</span>,<span class="string">&quot;February&quot;</span>,<span class="string">&quot;March&quot;</span>,<span class="string">&quot;April&quot;</span>,<span class="string">&quot;May&quot;</span>,<span class="string">&quot;June&quot;</span>,<span class="string">&quot;July&quot;</span>,<span class="string">&quot;Aguest&quot;</span>,<span class="string">&quot;September&quot;</span>,<span class="string">&quot;October&quot;</span>,<span class="string">&quot;November&quot;</span>,<span class="string">&quot;December&quot;</span> &#125;;</span><br><span class="line"></span><br><span class="line">cin &gt;&gt; t;</span><br><span class="line"><span class="keyword">while</span> (t--) &#123;</span><br><span class="line">cin &gt;&gt; x;</span><br><span class="line"><span class="keyword">if</span> (x &lt; <span class="number">1</span> || x&gt;<span class="number">12</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;error&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; *(mouth + x - <span class="number">1</span>) &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="b-字符串比较-指针与字符">B.字符串比较（指针与字符）</h1><h2 id="题目描述">题目描述</h2><p>编写一个函数比较两个字符串，参数是两个字符指针（要求显式定义，例如char *S, char *T)，比较字符串S和T的大小。如果S大于T，则返回1，如果S小于T则返回-1，如果S与T相等则返回0。</p><p>比较规则：</p><p>1.把两个字符串的相同位置上的字符进行比较，字符的大小比较以ASCII值为准</p><p>2.在比较中，如果字符串S的字符大于字符串T的字符的数量超过小于的数量，则认为S大于T，如果等于则S等于T，如果小于则S小于T</p><p>例如S为aaccdd，T为eebbbb，每个位置比较得到S前两个字母都小于T，但后4个字母都大于T，最终认为S大于T</p><p>3.如果两个字符串长度不同，则更长的字符串为大</p><p>在主函数中输入两个字符串，并调用该函数进行判断，在判断函数中必须使用函数参数的指针进行字符比较</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">Compare</span><span class="params">(<span class="type">char</span>* p1, <span class="type">int</span> long1, <span class="type">char</span>* p2, <span class="type">int</span> long2)</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> count1 = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> count2 = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (long1 != long2)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (long1 &gt; long2)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (long1 &lt; long2)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; long1; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">int</span>(*(p1 + i)) &gt; <span class="built_in">int</span>(*(p2 + i)))</span><br><span class="line">&#123;</span><br><span class="line">count1++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">int</span>(*(p1 + i)) &lt; <span class="built_in">int</span>(*(p2 + i)))</span><br><span class="line">&#123;</span><br><span class="line">count2++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (count1 &gt; count2)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (count1 &lt; count2)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> t;</span><br><span class="line">cin &gt;&gt; t;</span><br><span class="line"><span class="keyword">while</span> (t--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> str1[<span class="number">100</span>];</span><br><span class="line"><span class="type">char</span> str2[<span class="number">100</span>];</span><br><span class="line">cin &gt;&gt; str1;</span><br><span class="line">cin &gt;&gt; str2;</span><br><span class="line"><span class="type">int</span> long1 = <span class="built_in">strlen</span>(str1);</span><br><span class="line"><span class="type">int</span> long2 = <span class="built_in">strlen</span>(str2);</span><br><span class="line">cout &lt;&lt; <span class="built_in">Compare</span>(str1, long1, str2, long2) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="c-成绩查询-指针运算">C.成绩查询（指针运算）</h1><h2 id="题目描述">题目描述</h2><p>已知一组学生成绩，然后根据输入的序号查询成绩</p><p>要求：</p><ol><li><p>使用一个整数数组存储学生成绩</p></li><li><p>使用一个指针指向数组中间元素</p></li><li><p>求出数组中间元素的前一个成绩和后一个成绩</p></li><li><p>输入一个序号，然后计算这个序号的元素和中间元素的距离，然后使用指针去访问<br>例如有11个学生，指针指向中间的学生也就是第6个学生，若输入序号3，即查询第3个学生的成绩，第3和第6之间距离为3，那么指针应该怎么运算呢？？？</p></li><li><p>整个程序除了输入时可以使用数组下标，其他部分尽量使用使用指针进行访问。</p></li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> t, num, n;</span><br><span class="line">cin &gt;&gt; t;</span><br><span class="line"><span class="keyword">while</span> (t--)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="type">int</span>* a = <span class="keyword">new</span> <span class="type">int</span>[n];</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a[i];</span><br><span class="line"> &#125;</span><br><span class="line"><span class="type">int</span>* m = <span class="keyword">new</span> <span class="type">int</span>[n];</span><br><span class="line">m = a + n / <span class="number">2</span>;</span><br><span class="line">m--;</span><br><span class="line">cout &lt;&lt; *m &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">m += <span class="number">2</span>;</span><br><span class="line">cout &lt;&lt; *m &lt;&lt; endl;</span><br><span class="line">m--;</span><br><span class="line">cin &gt;&gt; num;</span><br><span class="line">m += num - (n / <span class="number">2</span> + <span class="number">1</span>);</span><br><span class="line">cout &lt;&lt; *m &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="d-动态矩阵-指针与堆内存分配">D.动态矩阵（指针与堆内存分配）</h1><h2 id="题目描述">题目描述</h2><p>未知一个整数矩阵的大小，在程序运行时才会输入矩阵的行数m和列数n</p><p>要求使用指针，结合new方法，动态创建一个二维数组，并求出该矩阵的最小值和最大值，可以使用数组下标法。</p><p>不能先创建一个超大矩阵，然后只使用矩阵的一部分空间来进行数据访问、</p><p>创建的矩阵大小必须和输入的行数m和列数n一样</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> t, i, j, k, m, n, max, min;</span><br><span class="line">cin &gt;&gt; t;</span><br><span class="line">i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (i &lt; t) </span><br><span class="line">&#123;</span><br><span class="line">i++;</span><br><span class="line">cin &gt;&gt; m &gt;&gt; n;</span><br><span class="line"><span class="type">int</span>** a = <span class="keyword">new</span> <span class="type">int</span>* [m];</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; m; j++)</span><br><span class="line">&#123;</span><br><span class="line">a[j] = <span class="keyword">new</span> <span class="type">int</span>[n];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; m; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (k = <span class="number">0</span>; k &lt; n; k++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a[j][k];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">max = **a;</span><br><span class="line">min = **a;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; m; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (k = <span class="number">0</span>; k &lt; n; k++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (*(*(a + j) + k) &gt; max)</span><br><span class="line">&#123;</span><br><span class="line">max = *(*(a + j) + k);</span><br><span class="line"> &#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(*(*(a+j)+k)&lt;min)</span><br><span class="line">&#123;</span><br><span class="line">min = *(*(a + j) + k);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; min &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; max &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; m; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">delete</span>[]a[j];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">delete</span>[]a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="e-密钥加密法-指针应用">E.密钥加密法（指针应用）</h1><h2 id="题目描述">题目描述</h2><p>有一种方式是使用密钥进行加密的方法，就是对明文的每个字符使用密钥上对应的密码进行加密，最终得到密文</p><p>例如明文是abcde，密钥是234，那么加密方法就是a对应密钥的2，也就是a偏移2位转化为c；明文b对应密钥的3，就是b偏移3位转化为e，同理c偏移4位转化为g。这时候密钥已经使用完，那么又重头开始使用。因此明文的d对应密钥的2，转化为f，明文的e对应密钥的3转化为h。所以明文abcde，密钥234，经过加密后得到密文是cegfh。</p><p>如果字母偏移的位数超过26个字母范围，则循环偏移，例如字母z偏移2位，就是转化为b，同理字母x偏移5位就是转化为c</p><p>要求：使用三个指针p、q、s分别指向明文、密钥和密文，然后使用指针p和q来访问每个位置的字符，进行加密得到密文存储在指针s指向的位置。</p><p>除了变量定义和输入数据，其他过程都不能使用数组下标法，必须使用三个指针来访问明文、密钥和密文。</p><p>提示：当指针q已经移动到密钥的末尾，但明文仍然没有结束，那么q就跳回密钥头</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> t, i=<span class="number">0</span>;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="type">char</span>* p, * s;</span><br><span class="line">    <span class="type">char</span>* q;</span><br><span class="line">    <span class="keyword">while</span>(i&lt;t)</span><br><span class="line">    &#123;</span><br><span class="line">        i++;</span><br><span class="line">        <span class="type">int</span> j = <span class="number">0</span>;</span><br><span class="line">        <span class="type">char</span> plain[<span class="number">21</span>];</span><br><span class="line">        <span class="type">char</span> key[<span class="number">21</span>];</span><br><span class="line"></span><br><span class="line">        cin &gt;&gt; plain;</span><br><span class="line">        cin &gt;&gt; key;</span><br><span class="line"></span><br><span class="line">        s = <span class="keyword">new</span> <span class="type">char</span>[<span class="number">21</span>];</span><br><span class="line">        p = &amp;plain[<span class="number">0</span>];</span><br><span class="line">        q = &amp;key[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> o = <span class="number">0</span>; o &lt;= <span class="built_in">strlen</span>(plain); o++) &#123;</span><br><span class="line">            j = o % <span class="built_in">strlen</span>(q);</span><br><span class="line">            <span class="keyword">if</span> (*(p + o) &gt;= <span class="string">&#x27;a&#x27;</span> &amp;&amp; *(p + o) &lt;= <span class="string">&#x27;z&#x27;</span>) &#123;</span><br><span class="line">                *(s + o) = (*(p + o) + *(q + j) - <span class="string">&#x27;0&#x27;</span> - <span class="string">&#x27;a&#x27;</span>) % <span class="number">26</span> + <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (*(p + o) &gt;= <span class="string">&#x27;A&#x27;</span> &amp;&amp; *(p + o) &lt;= <span class="string">&#x27;Z&#x27;</span>) &#123;</span><br><span class="line">                *(s + o) = (*(p + o) + *(q + j) - <span class="string">&#x27;0&#x27;</span> - <span class="string">&#x27;A&#x27;</span>) % <span class="number">26</span> + <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> o = <span class="number">0</span>; o &lt; <span class="built_in">strlen</span>(plain); o++) &#123;</span><br><span class="line">            cout &lt;&lt; *(s + o);</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">delete</span>[]s;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面向对象程序设计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CPP_第2周</title>
      <link href="/posts/994009389/"/>
      <url>/posts/994009389/</url>
      
        <content type="html"><![CDATA[<h1 id="a-三数论大小-指针">A.三数论大小（指针）</h1><h2 id="题目描述">题目描述</h2><p>输入三个整数，然后按照从大到小的顺序输出数值。<br>要求：用三个指针分别指向这三个整数，排序过程必须通过这三个指针来操作，不能直接访问这三个整数<br>输出时，必须使用这三个指针，不能使用存储三个整数的变量</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a, b, c, t;</span><br><span class="line">    <span class="type">int</span>* p1, * p2, * p3;</span><br><span class="line">    <span class="type">int</span> tmp;</span><br><span class="line"></span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= t; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;</span><br><span class="line">        p1 = &amp;a;</span><br><span class="line">        p2 = &amp;b;</span><br><span class="line">        p3 = &amp;c;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (*p1 &lt; *p2)</span><br><span class="line">        &#123;</span><br><span class="line">            tmp = *p1;</span><br><span class="line">            *p1 = *p2;</span><br><span class="line">            *p2 = tmp;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (*p1 &lt; *p3)</span><br><span class="line">        &#123;</span><br><span class="line">            tmp = *p1;</span><br><span class="line">            *p1 = *p3;</span><br><span class="line">            *p3 = tmp;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (*p2 &lt; *p3)</span><br><span class="line">        &#123;</span><br><span class="line">            tmp = *p2;</span><br><span class="line">            *p2 = *p3;</span><br><span class="line">            *p3 = tmp;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        cout &lt;&lt; *p1&lt;&lt; <span class="string">&quot; &quot;</span>&lt;&lt;  *p2 &lt;&lt;<span class="string">&quot; &quot;</span> &lt;&lt; *p3 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="b-货币兑换-指针与常量">B.货币兑换（指针与常量）</h1><h2 id="题目描述">题目描述</h2><p>设定以下汇率常量</p><p>美元汇率为6.2619，表示1美元兑换6.2619元人民币</p><p>欧元汇率为6.6744，表示1欧元兑换6.6744元人民币</p><p>日元汇率为0.0516，表示1元日元兑换0.0516元人民币</p><p>港币汇率为0.9200，表示1元港币币兑换0.92元人民币</p><p>定义一个常量指针，根据需求指针指向不同的汇率，然后计算出各种货币兑换为人民币的数量</p><p>要求：不能直接使用汇率常量进行计算，必须使用常量指针，只能使用一个指针</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">const</span> <span class="type">double</span>* p;</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    <span class="type">char</span> ch;</span><br><span class="line">    <span class="type">double</span> d = <span class="number">6.2619</span>, e = <span class="number">6.6744</span>, y = <span class="number">0.0516</span>, h = <span class="number">0.8065</span>;</span><br><span class="line">    <span class="type">double</span> a;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= t; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; ch;</span><br><span class="line">        cin &gt;&gt; a;</span><br><span class="line">        p = &amp;a;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">&#x27;D&#x27;</span>) </span><br><span class="line">        &#123;</span><br><span class="line">            p = &amp;d;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">&#x27;E&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            p = &amp;e;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">&#x27;Y&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            p = &amp;y;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">&#x27;H&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            p = &amp;h;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; fixed &lt;&lt; <span class="built_in">setprecision</span>(<span class="number">4</span>) &lt;&lt; a * (*p) &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="c-动态数组-指针与数组">C.动态数组（指针与数组）</h1><h2 id="题目描述">题目描述</h2><p>一开始未知数组长度，根据要求创建不同类型的指针，并且使用指针创建相应长度的数组，然后再完成不同的要求</p><p>若要求创建整数数组，计算数组内所有数据的平均值</p><p>若要求创建字符数组，找出数组内的最大字母</p><p>若要求创建浮点数数组，找出数组的最小值</p><p>要求程序整个过程不能使用数组下标，从数组创建、输入到搜索、比较、计算，到输出都必须使用指针</p><p>提示：使用new关键字</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> t, n;</span><br><span class="line">    <span class="type">char</span> ch;</span><br><span class="line"></span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; t; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; ch;</span><br><span class="line">        cin &gt;&gt; n;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">&#x27;I&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span>* i = <span class="keyword">new</span> <span class="type">int</span>[n];</span><br><span class="line">            <span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">            &#123;</span><br><span class="line">                cin &gt;&gt; *(i + j);</span><br><span class="line">                sum += *(i + j);</span><br><span class="line">            &#125;</span><br><span class="line">            cout &lt;&lt; sum / n &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">&#x27;C&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">char</span>* c = <span class="keyword">new</span> <span class="type">char</span>[n];</span><br><span class="line">            <span class="type">char</span> max;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">            &#123;</span><br><span class="line">                cin &gt;&gt; *(c + j);</span><br><span class="line">                <span class="keyword">if</span> (j == <span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    max = *(c);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span> (*(c + j) &gt; max)</span><br><span class="line">                    &#123;</span><br><span class="line">                        max = *(c + j);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            cout &lt;&lt; max &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">&#x27;F&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">double</span>* f = <span class="keyword">new</span> <span class="type">double</span>[n];</span><br><span class="line">            <span class="type">double</span> min;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">            &#123;</span><br><span class="line">                cin &gt;&gt; *(f + j);</span><br><span class="line">                <span class="keyword">if</span> (j == <span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    min = *(f);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span> (*(f + j) &lt; min)</span><br><span class="line">                    &#123;</span><br><span class="line">                        min = *(f + j);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            cout &lt;&lt; min &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="d-三串合一-指针与字符数组">D.三串合一（指针与字符数组）</h1><h2 id="题目描述">题目描述</h2><p>输入三个字符串，通过指针读取各个字符串的子串（子串是指字符串中连续的一小部分），把它们合并成一个新字符串</p><p>要求：</p><ol><li>三个字符串的创建和输入可以使用数组，也可以不用</li><li>输入后，根据三个字符串的子串的长度，计算出新字符串的长度</li><li>使用动态数组的方法创建新的字符串，并且使用指针读取三个字符串的不同部分，并且复制到新字符串中，要求整个过程都不能使用数组下标</li><li>使用指针输出新的字符串</li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">myget</span><span class="params">(<span class="type">char</span>* p, <span class="type">char</span>* p1, <span class="type">char</span>* p2, <span class="type">char</span>* p3, <span class="type">char</span>* p4, <span class="type">char</span>* p5, <span class="type">char</span>* p6)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (p1 != p4)  *p++ = *p1++;</span><br><span class="line">    <span class="keyword">while</span> (p2 != p5)  *p++ = *p2++;</span><br><span class="line">    <span class="keyword">while</span> (p3 != p6)  *p++ = *p3++;</span><br><span class="line">    *p = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span> (t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">char</span> a[<span class="number">15</span>], b[<span class="number">15</span>], c[<span class="number">15</span>];</span><br><span class="line">        cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;</span><br><span class="line">        <span class="type">int</span> a1, a2, b1, b2, c1, c2;</span><br><span class="line">        cin &gt;&gt; a1 &gt;&gt; a2 &gt;&gt; b1 &gt;&gt; b2 &gt;&gt; c1 &gt;&gt; c2;</span><br><span class="line">        <span class="type">int</span> len = a2 + b2 + c2 - (a1 + b1 + c1) + <span class="number">3</span>;</span><br><span class="line">        <span class="type">char</span>* arr = <span class="keyword">new</span> <span class="type">char</span>[len + <span class="number">1</span>];</span><br><span class="line">        <span class="type">char</span>* p = arr;</span><br><span class="line">        <span class="type">char</span>* p1 = a + a1 - <span class="number">1</span>;</span><br><span class="line">        <span class="type">char</span>* p2 = b + b1 - <span class="number">1</span>;</span><br><span class="line">        <span class="type">char</span>* p3 = c + c1 - <span class="number">1</span>;</span><br><span class="line">        <span class="type">char</span>* p4 = a + a2;</span><br><span class="line">        <span class="type">char</span>* p5 = b + b2;</span><br><span class="line">        <span class="type">char</span>* p6 = c + c2;</span><br><span class="line">        <span class="built_in">myget</span>(p, p1, p2, p3, p4, p5, p6);</span><br><span class="line">        cout &lt;&lt; arr &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">delete</span>[]arr;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="e-矩阵左转-指针与数组">E.矩阵左转（指针与数组）</h1><h2 id="题目描述">题目描述</h2><p>输入一个2*3的矩阵，将这个矩阵向左旋转90度后输出</p><p>比如现在有2*3矩阵 ：</p><p>1 2 3</p><p>4 5 6</p><p>向左旋转90度后的矩阵变为：</p><p>3 6</p><p>2 5</p><p>1 4</p><p>要求：除了矩阵创建和数据输入可以使用数组和数组下标的方法，其他过程对矩阵的任何访问都必须使用指针</p><p>提示：m行n列的二维矩阵，第i行第j列的元素与首元素的距离为i*n+j，序号从0开始计算</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">change</span><span class="params">(<span class="type">int</span>* arr1, <span class="type">int</span>* arr2, <span class="type">int</span> m, <span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; m; i++) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            *(arr2 + (m - j) * m + i) = *(arr1 + i * n + j);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="type">int</span> arr1[<span class="number">2</span>][<span class="number">3</span>], arr2[<span class="number">3</span>][<span class="number">2</span>];</span><br><span class="line">    <span class="keyword">while</span> (t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span>; i++) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++)</span><br><span class="line">            &#123;</span><br><span class="line">                cin &gt;&gt; arr1[i][j];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">change</span>(arr1[<span class="number">0</span>], arr2[<span class="number">0</span>], <span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">2</span>; j++)</span><br><span class="line">            &#123;</span><br><span class="line">                cout &lt;&lt; arr2[i][j] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            cout &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面向对象程序设计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CPP_第1周</title>
      <link href="/posts/696962755/"/>
      <url>/posts/696962755/</url>
      
        <content type="html"><![CDATA[<h1 id="a-表面积计算">A.表面积计算</h1><h2 id="题目描述">题目描述</h2><p>给出一个立方体的长宽高，计算它的表面积</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a, b, c, t, s, i;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; t; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;</span><br><span class="line">        s = <span class="number">2</span> * a * b + <span class="number">2</span> * b * c + <span class="number">2</span> * c * a;</span><br><span class="line">        cout &lt;&lt; s &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="b-表达式求值">B.表达式求值</h1><h2 id="题目描述">题目描述</h2><p>对以下表达式进行求值，a、b、c是三个变量，它们都是小于100的自然数</p><p>a+b&gt;c&amp;&amp;b==c</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a, b, c, t, s, i;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;t;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;</span><br><span class="line">        <span class="keyword">if</span> (a + b &gt; c &amp;&amp; b == c)</span><br><span class="line">        &#123;</span><br><span class="line">            s = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        &#123;</span><br><span class="line">            s = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; s &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="c-成绩评定">C.成绩评定</h1><h2 id="题目描述">题目描述</h2><p>对于给出0～100之间的成绩进行成绩评定，大于等于85是A，75分至85以下是B，65至75分以下是C，60至65分以下是D，60分以下是F</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">double</span> a, t, i;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=t;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; a;</span><br><span class="line">        <span class="keyword">if</span> (a &gt;= <span class="number">85</span>)</span><br><span class="line">            cout &lt;&lt; <span class="string">&#x27;A&#x27;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (a &gt;= <span class="number">75</span>)</span><br><span class="line">            cout &lt;&lt; <span class="string">&#x27;B&#x27;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (a &gt;= <span class="number">65</span>)</span><br><span class="line">            cout &lt;&lt; <span class="string">&#x27;C&#x27;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (a &gt;= <span class="number">60</span>)</span><br><span class="line">            cout &lt;&lt; <span class="string">&#x27;D&#x27;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            cout &lt;&lt; <span class="string">&#x27;F&#x27;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="d-超重青蛙">D.超重青蛙</h1><h2 id="题目描述">题目描述</h2><p>在青蛙王国，每个青蛙有着不同的体重。<br>给出一组青蛙的体重，计算里面超出平均体重的青蛙数量。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> max 100</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> t,i,j;</span><br><span class="line"><span class="type">double</span> c[max],a,b,s;</span><br><span class="line">s=<span class="number">0</span>;</span><br><span class="line">cin&gt;&gt;t;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=t;i++)</span><br><span class="line">&#123;</span><br><span class="line">cin&gt;&gt;a;</span><br><span class="line">b=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;=a;j++)</span><br><span class="line">&#123;</span><br><span class="line">cin&gt;&gt;c[j];</span><br><span class="line">s+=c[j];</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">double</span> average;</span><br><span class="line">average=s/a;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;=a;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(c[j]&gt;average)</span><br><span class="line">&#123;</span><br><span class="line">b++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;b&lt;&lt;endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h1 id="e-求n的阶乘">E.求n的阶乘</h1><h2 id="题目描述">题目描述</h2><p>求n的阶乘（n大于等于1，小于等于12）</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> m,i,sum;</span><br><span class="line">sum=<span class="number">1</span>;</span><br><span class="line">cin&gt;&gt;m;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">&#123;</span><br><span class="line">sum*=i;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;sum&lt;&lt;endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面向对象程序设计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计网学习笔记</title>
      <link href="/posts/3215378818/"/>
      <url>/posts/3215378818/</url>
      
        <content type="html"><![CDATA[<ol class="series-items"><li><a href="/posts/2296455701/" title="计网Chapter 1">计网Chapter 1</a></li><li><a href="/posts/363590279/" title="计网Chapter2">计网Chapter2</a></li><li><a href="/posts/1655489041/" title="计网Chapter3">计网Chapter3</a></li><li><a href="/posts/4240988082/" title="计网Chapter4">计网Chapter4</a></li><li><a href="/posts/2345625380/" title="计网Chapter5">计网Chapter5</a></li><li><a href="/posts/314979998/" title="计网Chapter6">计网Chapter6</a></li><li><a href="/posts/222697760/" title="计网实验报告">计网实验报告</a></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>面向对象程序设计目录</title>
      <link href="/posts/2666278668/"/>
      <url>/posts/2666278668/</url>
      
        <content type="html"><![CDATA[<ol class="series-items"><li><a href="/posts/696962755/" title="CPP_第1周">CPP_第1周</a></li><li><a href="/posts/994009389/" title="CPP_第2周">CPP_第2周</a></li><li><a href="/posts/2206402120/" title="CPP_第3周">CPP_第3周</a></li><li><a href="/posts/508837617/" title="CPP_第4周">CPP_第4周</a></li><li><a href="/posts/2800245140/" title="CPP_第5周">CPP_第5周</a></li><li><a href="/posts/3026056826/" title="CPP_第6周">CPP_第6周</a></li><li><a href="/posts/216109343/" title="CPP_第7周">CPP_第7周</a></li><li><a href="/posts/1417838921/" title="CPP_第8周">CPP_第8周</a></li><li><a href="/posts/3963545132/" title="CPP_第9周">CPP_第9周</a></li><li><a href="/posts/1153292558/" title="CPP_第10周">CPP_第10周</a></li><li><a href="/posts/4227972715/" title="CPP_第11周">CPP_第11周</a></li><li><a href="/posts/4004778373/" title="CPP_第12周">CPP_第12周</a></li><li><a href="/posts/1443395296/" title="CPP_第13周">CPP_第13周</a></li><li><a href="/posts/3420409433/" title="CPP_第14周">CPP_第14周</a></li><li><a href="/posts/1935878460/" title="CPP_第15周">CPP_第15周</a></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Blog目录</title>
      <link href="/posts/4199349087/"/>
      <url>/posts/4199349087/</url>
      
        <content type="html"><![CDATA[<ol class="series-items"><li><a href="/posts/205686455/" title="OS报告">OS报告</a></li><li><a href="/posts/1990012807/" title="数据库学习笔记">数据库学习笔记</a></li><li><a href="/posts/3972354381/" title="头歌_数据库实验">头歌_数据库实验</a></li><li><a href="/posts/3215378818/" title="计网学习笔记">计网学习笔记</a></li><li><a href="/posts/2666278668/" title="面向对象程序设计目录">面向对象程序设计目录</a></li><li><a href="/posts/1029327720/" title="头歌——python实验">头歌——python实验</a></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>头歌_数据库实验</title>
      <link href="/posts/3972354381/"/>
      <url>/posts/3972354381/</url>
      
        <content type="html"><![CDATA[<ol class="series-items"><li><a href="/posts/33322/" title="实验2 MySQL软件操作及建库建表建数据">实验2 MySQL软件操作及建库建表建数据</a></li><li><a href="/posts/57811/" title="实验3 MySQL的DDL语言">实验3 MySQL的DDL语言</a></li><li><a href="/posts/43911/" title="实验4 MySQL单表查询">实验4 MySQL单表查询</a></li><li><a href="/posts/43230/" title="实验5 SQL的多表查询-1">实验5 SQL的多表查询-1</a></li><li><a href="/posts/48365/" title="实验6 SQL的多表查询-2">实验6 SQL的多表查询-2</a></li><li><a href="/posts/15145/" title="实验7 SQL的复杂多表查询-1">实验7 SQL的复杂多表查询-1</a></li><li><a href="/posts/14962/" title="实验8 SQL的复杂多表查询-2">实验8 SQL的复杂多表查询-2</a></li><li><a href="/posts/90/" title="实验9 SQL视图">实验9 SQL视图</a></li><li><a href="/posts/54623/" title="实验10 SQL互联网业务查询-1">实验10 SQL互联网业务查询-1</a></li><li><a href="/posts/21532/" title="实验11 SQL互联网业务查询-2">实验11 SQL互联网业务查询-2</a></li><li><a href="/posts/973/" title="实验12 数据库E-R图设计">实验12 数据库E-R图设计</a></li><li><a href="/posts/31554/" title="实验13 数据库编程-1">实验13 数据库编程-1</a></li><li><a href="/posts/3767/" title="实验14 数据库编程-2">实验14 数据库编程-2</a></li><li><a href="/posts/32272/" title="实验16 数据库触发器与权限">实验16 数据库触发器与权限</a></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>数据库学习笔记</title>
      <link href="/posts/1990012807/"/>
      <url>/posts/1990012807/</url>
      
        <content type="html"><![CDATA[<ol class="series-items"><li><a href="/posts/1419064164/" title="DataBase 增删改语句">DataBase 增删改语句</a></li><li><a href="/posts/802921560/" title="DataBase 常用函数">DataBase 常用函数</a></li><li><a href="/posts/1146913277/" title="DataBase 查询语句">DataBase 查询语句</a></li><li><a href="/posts/3438945314/" title="DataBase 聚合函数">DataBase 聚合函数</a></li><li><a href="/posts/2160201343/" title="DataBase 视图">DataBase 视图</a></li><li><a href="/posts/4201200877/" title="DataBase 连接">DataBase 连接</a></li><li><a href="/posts/1132319962/" title="DataBase 存储过程">DataBase 存储过程</a></li><li><a href="/posts/1698569466/" title="DataBase 触发器和事件">DataBase 触发器和事件</a></li><li><a href="/posts/1137404687/" title="DataBase 事务">DataBase 事务</a></li><li><a href="/posts/129956530/" title="DataBase 数据类型">DataBase 数据类型</a></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>实验16 数据库触发器与权限</title>
      <link href="/posts/32272/"/>
      <url>/posts/32272/</url>
      
        <content type="html"><![CDATA[<h1 id="第1关-执行-create-user-创建以2022100904为用户名的用户-同时设置其密码为root1234">第1关 执行 CREATE USER 创建以2022100904为用户名的用户，同时设置其密码为root1234</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">&#x27;2022100904&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED <span class="keyword">WITH</span> mysql_native_password <span class="keyword">BY</span> <span class="string">&#x27;root1234&#x27;</span>;</span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br><span class="line">#以下代码禁止删除</span><br><span class="line"><span class="keyword">SELECT</span> mysql.user.Host, mysql.user.User <span class="keyword">FROM</span> mysql.user <span class="keyword">WHERE</span> <span class="keyword">USER</span> <span class="operator">=</span> <span class="string">&#x27;2022100904&#x27;</span>;</span><br></pre></td></tr></table></figure><h1 id="第2关-给予创建的用户2022100904在mydata数据库中授予-j-表-select-权限">第2关 给予创建的用户2022100904在mydata数据库中授予&quot;J&quot; 表 SELECT 权限</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">USE mydata;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">SELECT</span> <span class="keyword">ON</span> mydata.J <span class="keyword">TO</span> <span class="string">&#x27;2022100904&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span>;</span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br><span class="line">#以下代码禁止删除</span><br><span class="line"><span class="keyword">SHOW</span> GRANTS <span class="keyword">FOR</span> <span class="string">&#x27;2022100904&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span>;</span><br></pre></td></tr></table></figure><h1 id="第3关-给予创建的用户2022100904-2022100908授予-j-表-的all-privileges权限">第3关 给予创建的用户2022100904、2022100908授予&quot;J&quot;表 的ALL PRIVILEGES权限</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">USE mydata;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">ON</span> mydata.J <span class="keyword">TO</span> <span class="string">&#x27;2022100904&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span>;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">ON</span> mydata.J <span class="keyword">TO</span> <span class="string">&#x27;2022100908&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span>;</span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br><span class="line">#以下代码禁止删除</span><br><span class="line"><span class="keyword">SHOW</span> GRANTS <span class="keyword">FOR</span> <span class="string">&#x27;2022100904&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span>;</span><br><span class="line"><span class="keyword">SHOW</span> GRANTS <span class="keyword">FOR</span> <span class="string">&#x27;2022100908&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span>;</span><br></pre></td></tr></table></figure><h1 id="第4关-给予创建的用户2022100904在mydata数据库中授予-j-表的update和insert权限">第4关 给予创建的用户2022100904在mydata数据库中授予“J”表的UPDATE和INSERT权限</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">USE mydata;</span><br><span class="line"></span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">UPDATE</span>,<span class="keyword">INSERT</span> <span class="keyword">ON</span> mydata.J <span class="keyword">TO</span> <span class="string">&#x27;2022100904&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> <span class="keyword">WITH</span> <span class="keyword">GRANT</span> OPTION;</span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br><span class="line">#以下代码禁止删除</span><br><span class="line"><span class="keyword">SHOW</span> GRANTS <span class="keyword">FOR</span> <span class="string">&#x27;2022100904&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span>;</span><br></pre></td></tr></table></figure><h1 id="第5关-回收用户2022100904在mydata数据库中授予的-j-表-select权限">第5关 回收用户2022100904在mydata数据库中授予的 “J” 表 SELECT权限</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">USE mydata;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">REVOKE</span> <span class="keyword">SELECT</span> <span class="keyword">ON</span> mydata.J <span class="keyword">FROM</span> <span class="string">&#x27;2022100904&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span>;</span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br><span class="line">#以下代码禁止删除</span><br><span class="line"><span class="keyword">SHOW</span> GRANTS <span class="keyword">FOR</span> <span class="string">&#x27;2022100904&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span>;</span><br></pre></td></tr></table></figure><h1 id="第6关-回收用户2022100904-2022100908在mydata数据库的中授予-的j表all-privileges权限">第6关 回收用户2022100904、2022100908在mydata数据库的中授予 的J表ALL PRIVILEGES权限</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">USE mydata;</span><br><span class="line"></span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">REVOKE</span> <span class="keyword">ALL</span> <span class="keyword">ON</span> mydata.J <span class="keyword">FROM</span> <span class="string">&#x27;2022100904&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span>;</span><br><span class="line"><span class="keyword">REVOKE</span> <span class="keyword">ALL</span> <span class="keyword">ON</span> mydata.J <span class="keyword">FROM</span> <span class="string">&#x27;2022100908&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span>;</span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br><span class="line">#以下代码禁止删除</span><br><span class="line"><span class="keyword">SHOW</span> GRANTS <span class="keyword">FOR</span> <span class="string">&#x27;2022100904&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span>;</span><br><span class="line"><span class="keyword">SHOW</span> GRANTS <span class="keyword">FOR</span> <span class="string">&#x27;2022100908&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span>;</span><br></pre></td></tr></table></figure><h1 id="第7关-回收用户2022100904在mydata数据中授予的-j-表update和insert的权限">第7关 回收用户2022100904在mydata数据中授予的“J”表UPDATE和INSERT的权限</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">USE mydata;</span><br><span class="line"></span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">REVOKE</span> <span class="keyword">UPDATE</span>,<span class="keyword">INSERT</span> <span class="keyword">ON</span> mydata.J <span class="keyword">FROM</span> <span class="string">&#x27;2022100904&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span>;</span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br><span class="line">#以下代码禁止删除</span><br><span class="line"><span class="keyword">SHOW</span> GRANTS <span class="keyword">FOR</span> <span class="string">&#x27;2022100904&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span>;</span><br></pre></td></tr></table></figure><h1 id="第8关-创建角色名为-r1的角色">第8关 创建角色名为 R1的角色</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">CREATE</span> ROLE <span class="string">&#x27;R1&#x27;</span>;</span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br><span class="line">#以下代码禁止删除</span><br><span class="line"><span class="keyword">SELECT</span> mysql.user.Host, mysql.user.User <span class="keyword">FROM</span> mysql.user <span class="keyword">WHERE</span> <span class="keyword">USER</span> <span class="operator">=</span> <span class="string">&#x27;R1&#x27;</span>;</span><br></pre></td></tr></table></figure><h1 id="第9关-给予创建的角色r1在mydata数据库中授予-j-表-的select-update-insert权限">第9关 给予创建的角色R1在mydata数据库中授予&quot;J&quot; 表 的SELECT 、UPDATE、INSERT权限</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">USE mydata;</span><br><span class="line"></span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">SELECT</span>,<span class="keyword">UPDATE</span>,<span class="keyword">INSERT</span> <span class="keyword">ON</span> mydata.J <span class="keyword">TO</span> <span class="string">&#x27;R1&#x27;</span>;</span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br><span class="line">#以下代码禁止删除</span><br><span class="line"><span class="keyword">SHOW</span> GRANTS <span class="keyword">FOR</span> <span class="string">&#x27;R1&#x27;</span>;</span><br></pre></td></tr></table></figure><h1 id="第10关-给予创建的用户2022100904授予角色r1权限">第10关 给予创建的用户2022100904授予角色R1权限</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">USE mydata;</span><br><span class="line"></span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">GRANT</span> <span class="string">&#x27;R1&#x27;</span> <span class="keyword">TO</span> <span class="string">&#x27;2022100904&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span>;</span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br><span class="line">#以下代码禁止删除</span><br><span class="line"><span class="keyword">SHOW</span> GRANTS <span class="keyword">FOR</span> <span class="string">&#x27;2022100904&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span>;</span><br></pre></td></tr></table></figure><h1 id="第11关-给予已授权限的角色r1在mydata数据库中再次授予-j-表-的delete权限">第11关 给予已授权限的角色R1在mydata数据库中再次授予&quot;J&quot; 表 的DELETE权限</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">USE mydata;</span><br><span class="line"></span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">DELETE</span> <span class="keyword">ON</span> mydata.J <span class="keyword">TO</span> <span class="string">&#x27;R1&#x27;</span>;</span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br><span class="line">#以下代码禁止删除</span><br><span class="line"><span class="keyword">SHOW</span> GRANTS <span class="keyword">FOR</span> <span class="string">&#x27;R1&#x27;</span>;</span><br></pre></td></tr></table></figure><h1 id="第12关-回收角色r1-对-j-表的-insert-权限">第12关 回收角色R1 对 J 表的 INSERT 权限</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">USE mydata;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">REVOKE</span> <span class="keyword">INSERT</span> <span class="keyword">ON</span> mydata.J <span class="keyword">FROM</span> <span class="string">&#x27;R1&#x27;</span>;</span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br><span class="line">#以下代码禁止删除</span><br><span class="line"><span class="keyword">SHOW</span> GRANTS <span class="keyword">FOR</span> <span class="string">&#x27;R1&#x27;</span>;</span><br></pre></td></tr></table></figure><h1 id="第13关-通过角色r1回收用户2022100904的被授予j表的select-update-insert权限">第13关 通过角色R1回收用户2022100904的被授予J表的SELECT 、UPDATE、INSERT权限</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">USE mydata;</span><br><span class="line"></span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">REVOKE</span> <span class="string">&#x27;R1&#x27;</span> <span class="keyword">FROM</span> <span class="string">&#x27;2022100904&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span>;</span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br><span class="line">#以下代码禁止删除</span><br><span class="line"><span class="keyword">SHOW</span> GRANTS <span class="keyword">FOR</span> <span class="string">&#x27;2022100904&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span>;</span><br></pre></td></tr></table></figure><h1 id="第14关-编写一个名为insert-s的触发器-在s表执行-insert-语句后被激发">第14关 编写一个名为INSERT_S的触发器，在S表执行 INSERT 语句后被激发</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">USE mydata;</span><br><span class="line"></span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line">DELIMITER $$</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TRIGGER</span> INSERT_S</span><br><span class="line"> AFTER <span class="keyword">INSERT</span> <span class="keyword">ON</span> S</span><br><span class="line"> <span class="keyword">FOR</span> <span class="keyword">EACH</span> <span class="type">ROW</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">INSERT INTO</span> N_S <span class="keyword">VALUES</span> (<span class="string">&#x27;S6&#x27;</span>, <span class="string">&#x27;深技大&#x27;</span>, <span class="string">&#x27;20&#x27;</span>, <span class="string">&#x27;深圳&#x27;</span>,<span class="string">&#x27;root@localhost&#x27;</span>);</span><br><span class="line"><span class="keyword">END</span>$$</span><br><span class="line">DELIMITER ;</span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br><span class="line">#以下代码禁止删除</span><br><span class="line">#将记录插入S表</span><br><span class="line"><span class="keyword">INSERT INTO</span> S <span class="keyword">VALUES</span> (<span class="string">&#x27;S6&#x27;</span>, <span class="string">&#x27;深技大&#x27;</span>, <span class="string">&#x27;20&#x27;</span>, <span class="string">&#x27;深圳&#x27;</span>);</span><br><span class="line">#查看N_S表</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> N_S;</span><br></pre></td></tr></table></figure><h1 id="第15关-编写一个名为update-s的触发器-检查s表的status-只允许0-100之间-如果超过100后-改为100">第15关 编写一个名为UPDATE_S的触发器，检查S表的STATUS，只允许0-100之间，如果超过100后，改为100。</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">USE mydata;</span><br><span class="line"></span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line">DELIMITER $$</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TRIGGER</span> UPDATE_S</span><br><span class="line">BEFORE <span class="keyword">UPDATE</span> <span class="keyword">ON</span> S</span><br><span class="line"><span class="keyword">FOR</span> <span class="keyword">EACH</span> <span class="type">ROW</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">   IF(NEW.STATUS <span class="operator">&lt;</span><span class="number">0</span>) <span class="keyword">OR</span> (NEW.STATUS<span class="operator">&gt;</span><span class="number">100</span>)</span><br><span class="line">      <span class="keyword">THEN</span> <span class="keyword">SET</span> NEW.STATUS<span class="operator">=</span><span class="number">100</span>;</span><br><span class="line">   <span class="keyword">END</span> IF;</span><br><span class="line"><span class="keyword">END</span>$$</span><br><span class="line">DELIMITER ;</span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br><span class="line">#以下代码禁止删除</span><br><span class="line">#更新S表</span><br><span class="line"><span class="keyword">UPDATE</span> S <span class="keyword">SET</span> S.STATUS <span class="operator">=</span> <span class="number">300</span> <span class="keyword">WHERE</span> S.CITY <span class="operator">=</span> <span class="string">&#x27;天津&#x27;</span>;</span><br><span class="line">#查看S表</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> S;</span><br></pre></td></tr></table></figure><h1 id="第16关-编写一个名为update-spj的触发器-spj表中有更新某条记录的qty时-自动更新表spj-sumqty表">第16关 编写一个名为UPDATE_SPJ的触发器，SPJ表中有更新某条记录的QTY时，自动更新表SPJ_SUMQTY表</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">USE mydata;</span><br><span class="line"></span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line">DELIMITER $$</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TRIGGER</span> UPDATE_SPJ</span><br><span class="line">AFTER <span class="keyword">UPDATE</span> <span class="keyword">ON</span> SPJ</span><br><span class="line"><span class="keyword">FOR</span> <span class="keyword">EACH</span> <span class="type">ROW</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">UPDATE</span> SPJ_SUMQTY <span class="keyword">SET</span> SUMQTY <span class="operator">=</span> SUMQTY <span class="operator">+</span> NEW.QTY <span class="operator">-</span> OLD.QTY</span><br><span class="line">    <span class="keyword">WHERE</span> PNO <span class="operator">=</span> NEW.PNO <span class="keyword">AND</span> JNO <span class="operator">=</span> NEW.JNO;</span><br><span class="line"><span class="keyword">END</span> $$</span><br><span class="line">DELIMITER ;</span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br><span class="line">#以下代码禁止删除</span><br><span class="line">#更新SPJ表</span><br><span class="line"><span class="keyword">UPDATE</span> SPJ <span class="keyword">SET</span> SPJ.QTY <span class="operator">=</span> SPJ.QTY <span class="operator">+</span> <span class="number">200</span> <span class="keyword">WHERE</span> SPJ.JNO <span class="operator">=</span> <span class="string">&#x27;J5&#x27;</span>;</span><br><span class="line">#查看SPJ_SUMQTY表</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> SPJ_SUMQTY;</span><br></pre></td></tr></table></figure><h1 id="第17关-编写一个名为delete-spj的触发器-当spj表中有删除某条记录时-自动更新表spj-sumqty表">第17关 编写一个名为DELETE_SPJ的触发器，当SPJ表中有删除某条记录时，自动更新表SPJ_SUMQTY表</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">USE mydata;</span><br><span class="line"></span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"></span><br><span class="line">DELIMITER $$</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TRIGGER</span> DELETE_SPJ</span><br><span class="line">AFTER <span class="keyword">DELETE</span> <span class="keyword">ON</span> SPJ</span><br><span class="line"><span class="keyword">FOR</span> <span class="keyword">EACH</span> <span class="type">ROW</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">UPDATE</span> SPJ_SUMQTY <span class="keyword">SET</span> SUMQTY <span class="operator">=</span> SUMQTY <span class="operator">-</span> OLD.QTY</span><br><span class="line">    <span class="keyword">WHERE</span> SPJ_SUMQTY.PNO <span class="operator">=</span> OLD.PNO <span class="keyword">AND</span> SPJ_SUMQTY.JNO <span class="operator">=</span> OLD.JNO;</span><br><span class="line">    <span class="keyword">DELETE</span> <span class="keyword">FROM</span> SPJ_SUMQTY <span class="keyword">WHERE</span> SPJ_SUMQTY.SUMQTY <span class="operator">&lt;=</span><span class="number">0</span>;</span><br><span class="line"><span class="keyword">END</span> $$</span><br><span class="line">DELIMITER ;</span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br><span class="line">#以下代码禁止删除</span><br><span class="line">#删除SPJ表的某条记录</span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> SPJ <span class="keyword">WHERE</span> SPJ.SNO <span class="operator">=</span> <span class="string">&#x27;S2&#x27;</span> <span class="keyword">AND</span> SPJ.PNO <span class="operator">=</span> <span class="string">&#x27;P3&#x27;</span> <span class="keyword">AND</span> SPJ.JNO <span class="operator">=</span> <span class="string">&#x27;J5&#x27;</span>;</span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> SPJ <span class="keyword">WHERE</span> SPJ.SNO <span class="operator">=</span> <span class="string">&#x27;S2&#x27;</span> <span class="keyword">AND</span> SPJ.PNO <span class="operator">=</span> <span class="string">&#x27;P3&#x27;</span> <span class="keyword">AND</span> SPJ.JNO <span class="operator">=</span> <span class="string">&#x27;J1&#x27;</span>;</span><br><span class="line">#查看SPJ_SUMQTY表</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> SPJ_SUMQTY;</span><br></pre></td></tr></table></figure><h1 id="第18关-编写一个名为insert-spj的触发器-当spj表中有插入某条记录时-自动更新表spj-sumqty表">第18关 编写一个名为INSERT_SPJ的触发器，当SPJ表中有插入某条记录时，自动更新表SPJ_SUMQTY表</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">USE mydata;</span><br><span class="line"></span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line">DELIMITER $$</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TRIGGER</span> INSERT_SPJ</span><br><span class="line">AFTER <span class="keyword">INSERT</span> <span class="keyword">ON</span> SPJ</span><br><span class="line"><span class="keyword">FOR</span> <span class="keyword">EACH</span> <span class="type">ROW</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">UPDATE</span> SPJ_SUMQTY <span class="keyword">SET</span> SUMQTY <span class="operator">=</span> SUMQTY <span class="operator">+</span> NEW.QTY</span><br><span class="line">    <span class="keyword">WHERE</span> SPJ_SUMQTY.PNO <span class="operator">=</span> NEW.PNO <span class="keyword">AND</span> SPJ_SUMQTY.JNO <span class="operator">=</span>NEW.JNO;</span><br><span class="line">    IF NEW.JNO <span class="keyword">NOT</span> <span class="keyword">IN</span> (<span class="keyword">SELECT</span> JNO <span class="keyword">FROM</span> SPJ_SUMQTY)</span><br><span class="line">    <span class="keyword">OR</span> NEW.PNO <span class="keyword">NOT</span> <span class="keyword">IN</span> (<span class="keyword">SELECT</span> PNO <span class="keyword">FROM</span> SPJ_SUMQTY)</span><br><span class="line">        <span class="keyword">THEN</span> <span class="keyword">INSERT INTO</span> SPJ_SUMQTY <span class="keyword">VALUES</span> (NEW.JNO,NEW.PNO,NEW.QTY);</span><br><span class="line">    <span class="keyword">END</span> IF;</span><br><span class="line"><span class="keyword">END</span> $$</span><br><span class="line">DELIMITER ;</span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br><span class="line">#以下代码禁止删除</span><br><span class="line">#将记录插入SPJ表</span><br><span class="line"><span class="keyword">INSERT INTO</span> SPJ <span class="keyword">VALUES</span> (<span class="string">&#x27;S6&#x27;</span>, <span class="string">&#x27;P1&#x27;</span>, <span class="string">&#x27;J6&#x27;</span>, <span class="number">200</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> SPJ <span class="keyword">VALUES</span> (<span class="string">&#x27;S6&#x27;</span>, <span class="string">&#x27;P3&#x27;</span>, <span class="string">&#x27;J5&#x27;</span>, <span class="number">300</span>);</span><br><span class="line">#查看SPJ_SUMQTY表</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> SPJ_SUMQTY;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>实验14 数据库编程-2</title>
      <link href="/posts/3767/"/>
      <url>/posts/3767/</url>
      
        <content type="html"><![CDATA[<h1 id="第1关-定义一个名为proc-updategrade的存储过程">第1关 定义一个名为PROC_UPDATEGRADE的存储过程</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">USE myschool;</span><br><span class="line">#增加一列等级列</span><br><span class="line"><span class="keyword">ALTER TABLE</span> SC <span class="keyword">ADD</span> `rank` <span class="type">CHAR</span>(<span class="number">2</span>);</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">BEGIN</span> ##########</span><br><span class="line">DELIMITER $$</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> PROC_UPDATEGRADE()</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">UPDATE</span> SC <span class="keyword">SET</span> rank <span class="operator">=</span> <span class="string">&#x27;A&#x27;</span> <span class="keyword">WHERE</span> Grade <span class="operator">&gt;=</span> <span class="number">90</span> <span class="keyword">AND</span> Grade <span class="operator">&lt;=</span> <span class="number">100</span>;</span><br><span class="line">    <span class="keyword">UPDATE</span> SC <span class="keyword">SET</span> rank <span class="operator">=</span> <span class="string">&#x27;B&#x27;</span> <span class="keyword">WHERE</span> Grade <span class="operator">&gt;=</span> <span class="number">80</span> <span class="keyword">AND</span> Grade <span class="operator">&lt;</span> <span class="number">90</span>;</span><br><span class="line">    <span class="keyword">UPDATE</span> SC <span class="keyword">SET</span> rank <span class="operator">=</span> <span class="string">&#x27;C&#x27;</span> <span class="keyword">WHERE</span> Grade <span class="operator">&gt;=</span> <span class="number">70</span> <span class="keyword">AND</span> Grade <span class="operator">&lt;</span> <span class="number">80</span>;</span><br><span class="line">    <span class="keyword">UPDATE</span> SC <span class="keyword">SET</span> rank <span class="operator">=</span> <span class="string">&#x27;D&#x27;</span> <span class="keyword">WHERE</span> Grade <span class="operator">&gt;=</span> <span class="number">60</span> <span class="keyword">AND</span> Grade <span class="operator">&lt;</span> <span class="number">70</span>;</span><br><span class="line">    <span class="keyword">UPDATE</span> SC <span class="keyword">SET</span> rank <span class="operator">=</span> <span class="string">&#x27;E&#x27;</span> <span class="keyword">WHERE</span> Grade <span class="operator">&gt;=</span> <span class="number">0</span> <span class="keyword">AND</span> Grade <span class="operator">&lt;</span> <span class="number">60</span>;</span><br><span class="line"><span class="keyword">END</span>$$</span><br><span class="line">DELIMITER ;</span><br><span class="line"><span class="keyword">CALL</span> PROC_UPDATEGRADE();</span><br><span class="line">########## <span class="keyword">END</span> ##########</span><br><span class="line">#以下代码禁止删除</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> SC;</span><br></pre></td></tr></table></figure><h1 id="第2关-使用游标定义一个名为proc-jgrade无参存储过程">第2关 使用游标定义一个名为PROC_JGRADE无参存储过程</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">USE mydata;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">BEGIN</span> ##########</span><br><span class="line">DELIMITER $$</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> PROC_JGRADE()</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">DECLARE</span> PTYPE <span class="type">CHAR</span>(<span class="number">10</span>);</span><br><span class="line">    <span class="keyword">DECLARE</span> NJNO <span class="type">CHAR</span>(<span class="number">10</span>);</span><br><span class="line">    <span class="keyword">DECLARE</span> QTYTEMP <span class="type">INT</span> <span class="keyword">DEFAULT</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">DECLARE</span> JNOTEMP <span class="type">INT</span> <span class="keyword">DEFAULT</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">DECLARE</span> TEMP <span class="keyword">CURSOR</span> <span class="keyword">FOR</span></span><br><span class="line">    <span class="keyword">SELECT</span> JNO,<span class="built_in">SUM</span>(QTY)</span><br><span class="line">    <span class="keyword">FROM</span> SPJ</span><br><span class="line">    <span class="keyword">GROUP</span> <span class="keyword">BY</span> JNO</span><br><span class="line">    <span class="keyword">ORDER</span> <span class="keyword">BY</span> JNO <span class="keyword">ASC</span>;</span><br><span class="line">    <span class="keyword">OPEN</span> TEMP;</span><br><span class="line">    <span class="keyword">CREATE</span> TEMPORARY <span class="keyword">TABLE</span> temp_table(</span><br><span class="line">    SJNO <span class="type">CHAR</span>(<span class="number">10</span>) <span class="keyword">NOT NULL</span>,</span><br><span class="line">    SQTY <span class="type">CHAR</span>(<span class="number">10</span>) <span class="keyword">NOT NULL</span>,</span><br><span class="line">    JTYPE <span class="type">CHAR</span>(<span class="number">10</span>) <span class="keyword">NOT NULL</span></span><br><span class="line">    );</span><br><span class="line">    REPEAT</span><br><span class="line">    <span class="keyword">FETCH</span> TEMP <span class="keyword">INTO</span> NJNO,QTYTEMP;</span><br><span class="line">    IF(QTYTEMP<span class="operator">&lt;</span><span class="number">1000</span>)</span><br><span class="line">    <span class="keyword">THEN</span></span><br><span class="line">    <span class="keyword">SET</span> PTYPE<span class="operator">=</span><span class="string">&#x27;S&#x27;</span>;</span><br><span class="line">    ELSEIF(<span class="number">1000</span><span class="operator">&lt;=</span>QTYTEMP <span class="keyword">AND</span> QTYTEMP <span class="operator">&lt;=</span><span class="number">2000</span>)</span><br><span class="line">    <span class="keyword">THEN</span></span><br><span class="line">    <span class="keyword">SET</span> PTYPE<span class="operator">=</span><span class="string">&#x27;M&#x27;</span>;</span><br><span class="line">    ELSEIF(QTYTEMP<span class="operator">&gt;</span><span class="number">2000</span>)</span><br><span class="line">    <span class="keyword">THEN</span></span><br><span class="line">    <span class="keyword">SET</span> PTYPE<span class="operator">=</span><span class="string">&#x27;L&#x27;</span>;</span><br><span class="line">    <span class="keyword">END</span> IF;</span><br><span class="line">    <span class="keyword">INSERT INTO</span> temp_table <span class="keyword">VALUES</span>(NJNO,QTYTEMP,PTYPE);</span><br><span class="line">    <span class="keyword">SET</span> JNOTEMP <span class="operator">=</span>JNOTEMP<span class="operator">+</span><span class="number">1</span>;</span><br><span class="line">    UNTIL JNOTEMP<span class="operator">&gt;=</span><span class="number">5</span></span><br><span class="line">    <span class="keyword">END</span> REPEAT;</span><br><span class="line">    <span class="keyword">CLOSE</span> TEMP;</span><br><span class="line">    <span class="keyword">SELECT</span><span class="operator">*</span><span class="keyword">FROM</span> temp_table;</span><br><span class="line"><span class="keyword">END</span>$$</span><br><span class="line">DELIMITER ;</span><br><span class="line">########## <span class="keyword">END</span> ##########</span><br><span class="line"># 以下代码禁止删除</span><br><span class="line"><span class="keyword">CALL</span> PROC_JGRADE();</span><br></pre></td></tr></table></figure><h1 id="第3关-使用游标定义一个名为proc-numgrade有参存储过程">第3关 使用游标定义一个名为PROC_NUMGRADE有参存储过程</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">USE myschool;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">BEGIN</span> ##########</span><br><span class="line">DELIMITER $</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> proc_numgrade(<span class="keyword">IN</span> sumtemp <span class="type">CHAR</span>(<span class="number">9</span>))</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">DECLARE</span> a <span class="type">INT</span>;</span><br><span class="line">    <span class="keyword">DECLARE</span> b <span class="type">INT</span> <span class="keyword">default</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">DECLARE</span> c <span class="keyword">cursor</span> <span class="keyword">for</span></span><br><span class="line">    <span class="keyword">SELECT</span> Grade</span><br><span class="line">    <span class="keyword">FROM</span> Course,SC</span><br><span class="line">    <span class="keyword">WHERE</span> Cname <span class="operator">=</span> sumtemp <span class="keyword">AND</span> Course.Cno <span class="operator">=</span> SC.Cno;</span><br><span class="line">    <span class="keyword">DECLARE</span> contINue handler <span class="keyword">for</span> <span class="keyword">not</span> found <span class="keyword">SET</span> b <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">CREATE</span> temporary <span class="keyword">table</span> TMEP_TABLE(</span><br><span class="line">        Type <span class="type">CHAR</span>(<span class="number">30</span>),</span><br><span class="line">        Num <span class="type">INT</span></span><br><span class="line">    );</span><br><span class="line">    <span class="keyword">INSERT INTO</span> TMEP_TABLE <span class="keyword">VALUES</span>(<span class="string">&#x27;100&#x27;</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">INSERT INTO</span> TMEP_TABLE <span class="keyword">VALUES</span>(<span class="string">&#x27;[90,100)&#x27;</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">INSERT INTO</span> TMEP_TABLE <span class="keyword">VALUES</span>(<span class="string">&#x27;[80,90)&#x27;</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">INSERT INTO</span> TMEP_TABLE <span class="keyword">VALUES</span>(<span class="string">&#x27;[70,80)&#x27;</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">INSERT INTO</span> TMEP_TABLE <span class="keyword">VALUES</span>(<span class="string">&#x27;[60,70)&#x27;</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">INSERT INTO</span> TMEP_TABLE <span class="keyword">VALUES</span>(<span class="string">&#x27;[0,60)&#x27;</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">OPEN</span> c;</span><br><span class="line">    WHILE b <span class="operator">!=</span> <span class="number">1</span> do</span><br><span class="line">        <span class="keyword">FETCH</span> c <span class="keyword">INTO</span> a;</span><br><span class="line">        IF b <span class="operator">!=</span> <span class="number">1</span> <span class="keyword">THEN</span></span><br><span class="line">            IF a<span class="operator">=</span><span class="number">100</span> <span class="keyword">THEN</span> <span class="keyword">UPDATE</span> TMEP_TABLE <span class="keyword">SET</span> Num<span class="operator">=</span>Num<span class="operator">+</span><span class="number">1</span> <span class="keyword">WHERE</span> Type<span class="operator">=</span><span class="string">&#x27;100&#x27;</span>;</span><br><span class="line">            ELSEIF a<span class="operator">&gt;=</span><span class="number">90</span> <span class="keyword">AND</span> a<span class="operator">&lt;</span><span class="number">100</span> <span class="keyword">THEN</span> <span class="keyword">UPDATE</span> TMEP_TABLE <span class="keyword">SET</span> Num<span class="operator">=</span>Num<span class="operator">+</span><span class="number">1</span> <span class="keyword">WHERE</span> Type<span class="operator">=</span><span class="string">&#x27;[90,100)&#x27;</span>;</span><br><span class="line">            ELSEIF a<span class="operator">&gt;=</span><span class="number">80</span> <span class="keyword">AND</span> a<span class="operator">&lt;</span><span class="number">90</span> <span class="keyword">THEN</span> <span class="keyword">UPDATE</span> TMEP_TABLE <span class="keyword">SET</span> Num<span class="operator">=</span>Num<span class="operator">+</span><span class="number">1</span> <span class="keyword">WHERE</span> Type<span class="operator">=</span><span class="string">&#x27;[80,90)&#x27;</span>;</span><br><span class="line">            ELSEIF a<span class="operator">&gt;=</span><span class="number">70</span> <span class="keyword">AND</span> a<span class="operator">&lt;</span><span class="number">80</span> <span class="keyword">THEN</span> <span class="keyword">UPDATE</span> TMEP_TABLE <span class="keyword">SET</span> Num<span class="operator">=</span>Num<span class="operator">+</span><span class="number">1</span> <span class="keyword">WHERE</span> Type<span class="operator">=</span><span class="string">&#x27;[70,80)&#x27;</span>;</span><br><span class="line">            ELSEIF a<span class="operator">&gt;=</span><span class="number">60</span> <span class="keyword">AND</span> a<span class="operator">&lt;</span><span class="number">70</span> <span class="keyword">THEN</span> <span class="keyword">UPDATE</span> TMEP_TABLE <span class="keyword">SET</span> Num<span class="operator">=</span>Num<span class="operator">+</span><span class="number">1</span> <span class="keyword">WHERE</span> Type<span class="operator">=</span><span class="string">&#x27;[60,70)&#x27;</span>;</span><br><span class="line">            ELSEIF a<span class="operator">&gt;=</span><span class="number">0</span> <span class="keyword">AND</span> a<span class="operator">&lt;</span><span class="number">60</span> <span class="keyword">THEN</span> <span class="keyword">UPDATE</span> TMEP_TABLE <span class="keyword">SET</span> Num<span class="operator">=</span>Num<span class="operator">+</span><span class="number">1</span> <span class="keyword">WHERE</span> Type<span class="operator">=</span><span class="string">&#x27;[0,60)&#x27;</span>;</span><br><span class="line">            <span class="keyword">END</span> IF;  </span><br><span class="line">        <span class="keyword">END</span> IF;</span><br><span class="line">    <span class="keyword">END</span> WHILE;</span><br><span class="line">    <span class="keyword">CLOSE</span> c;</span><br><span class="line">    <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> TMEP_TABLE;</span><br><span class="line"><span class="keyword">END</span>;$</span><br><span class="line">DELIMITER ;</span><br><span class="line">########## <span class="keyword">END</span> ##########</span><br><span class="line"># 以下代码禁止删除</span><br><span class="line"><span class="keyword">CALL</span> PROC_NUMGRADE(<span class="string">&#x27;离散数学&#x27;</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>实验13 数据库编程-1</title>
      <link href="/posts/31554/"/>
      <url>/posts/31554/</url>
      
        <content type="html"><![CDATA[<h1 id="第1关-定义一个名为proc-count的无参数存储过程">第1关 定义一个名为PROC_COUNT的无参数存储过程</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">USE mydata;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line">DELIMITER $</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> PROC_COUNT()</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>)</span><br><span class="line">    <span class="keyword">FROM</span> J</span><br><span class="line">    <span class="keyword">WHERE</span> JNAME <span class="keyword">LIKE</span> &quot;%厂%&quot;;</span><br><span class="line"><span class="keyword">END</span> $</span><br><span class="line">DELIMITER ;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CALL</span> PROC_COUNT()</span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br></pre></td></tr></table></figure><h1 id="第2关-定义一个名为proc-jname的有参数存储过程">第2关 定义一个名为PROC_JNAME的有参数存储过程</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">USE mydata;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line">DELIMITER $</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> PROC_JNAME(<span class="keyword">IN</span> city <span class="type">CHAR</span>(<span class="number">2</span>))</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">SELECT</span> JNAME</span><br><span class="line">    <span class="keyword">FROM</span> J</span><br><span class="line">    <span class="keyword">WHERE</span> J.CITY <span class="operator">=</span> city;</span><br><span class="line"><span class="keyword">END</span> $</span><br><span class="line">DELIMITER ;</span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br><span class="line">#以下代码禁止删除</span><br><span class="line"><span class="keyword">CALL</span> PROC_JNAME(<span class="string">&#x27;天津&#x27;</span>);</span><br></pre></td></tr></table></figure><h1 id="第3关-定义一个名为proc-jinfo的有参数存储过程">第3关 定义一个名为PROC_JINFO的有参数存储过程</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">USE mydata;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line">DELIMITER $</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> PROC_JINFO(<span class="keyword">IN</span> city <span class="type">CHAR</span>(<span class="number">2</span>))</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">SELECT</span></span><br><span class="line">        JNAME,</span><br><span class="line">        PNAME,</span><br><span class="line">        <span class="built_in">SUM</span>(QTY) SUM_QTY</span><br><span class="line">    <span class="keyword">FROM</span> SPJ</span><br><span class="line">    <span class="keyword">JOIN</span> P <span class="keyword">USING</span>(PNO)</span><br><span class="line">    <span class="keyword">JOIN</span> J <span class="keyword">USING</span>(JNO)</span><br><span class="line">    <span class="keyword">WHERE</span> J.CITY <span class="operator">=</span> city</span><br><span class="line">    <span class="keyword">GROUP</span> <span class="keyword">BY</span> JNAME,PNAME</span><br><span class="line">    <span class="keyword">ORDER</span> <span class="keyword">BY</span> JNAME,PNAME;</span><br><span class="line"><span class="keyword">END</span> $</span><br><span class="line">DELIMITER ;</span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br><span class="line">#以下代码禁止删除</span><br><span class="line"><span class="keyword">CALL</span> PROC_JINFO(<span class="string">&#x27;天津&#x27;</span>);</span><br></pre></td></tr></table></figure><h1 id="第4关-定义一个名为proc-avggrade的有参数存储过程">第4关 定义一个名为PROC_AVGGRADE的有参数存储过程</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">USE myschool;</span><br><span class="line"></span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line">DELIMITER $</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> PROC_AVGGRADE(<span class="keyword">IN</span> name <span class="type">CHAR</span>(<span class="number">9</span>))</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">SELECT</span></span><br><span class="line">        <span class="built_in">AVG</span>(Grade) AVG_Grade</span><br><span class="line">    <span class="keyword">FROM</span> SC</span><br><span class="line">    <span class="keyword">JOIN</span> Course <span class="keyword">USING</span>(Cno)</span><br><span class="line">    <span class="keyword">WHERE</span> Cname <span class="operator">=</span> name;</span><br><span class="line"><span class="keyword">END</span> $</span><br><span class="line">DELIMITER ;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br><span class="line"># 以下代码禁止删除</span><br><span class="line"><span class="keyword">CALL</span> PROC_AVGGRADE(<span class="string">&#x27;数据库&#x27;</span>);</span><br></pre></td></tr></table></figure><h1 id="第5关-定义一个名为proc-sinfo的有参数存储过程">第5关 定义一个名为PROC_SINFO的有参数存储过程</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">USE mydata;</span><br><span class="line"></span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line">DELIMITER $</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> PROC_SINFO(<span class="keyword">IN</span> name <span class="type">CHAR</span>(<span class="number">10</span>))</span><br><span class="line"><span class="keyword">BEGIN</span>  </span><br><span class="line">    <span class="keyword">SELECT</span></span><br><span class="line">        JNAME,</span><br><span class="line">        PNAME,</span><br><span class="line">        <span class="built_in">SUM</span>(QTY) SUM_QTY</span><br><span class="line">    <span class="keyword">FROM</span> SPJ</span><br><span class="line">    <span class="keyword">JOIN</span> S <span class="keyword">USING</span>(SNO)</span><br><span class="line">    <span class="keyword">JOIN</span> P <span class="keyword">USING</span>(PNO)</span><br><span class="line">    <span class="keyword">JOIN</span> J <span class="keyword">USING</span>(JNO)</span><br><span class="line">    <span class="keyword">WHERE</span> SNAME <span class="operator">=</span> name</span><br><span class="line">    <span class="keyword">GROUP</span> <span class="keyword">BY</span> JNAME,PNAME</span><br><span class="line">    <span class="keyword">ORDER</span> <span class="keyword">BY</span> JNAME,PNAME;</span><br><span class="line"><span class="keyword">END</span> $</span><br><span class="line">DELIMITER ;</span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br><span class="line">#以下代码禁止删除</span><br><span class="line"><span class="keyword">CALL</span> PROC_SINFO(<span class="string">&#x27;精益&#x27;</span>);</span><br></pre></td></tr></table></figure><h1 id="第6关-定义一个名为proc-jsearch的有参数存储过程">第6关 定义一个名为PROC_JSEARCH的有参数存储过程</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">USE mydata;</span><br><span class="line"></span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line">DELIMITER $</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> PROC_JSEARCH(<span class="keyword">IN</span> <span class="keyword">no</span> <span class="type">CHAR</span>(<span class="number">2</span>))</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">SELECT</span></span><br><span class="line">        SNAME,</span><br><span class="line">        PNAME,</span><br><span class="line">        JNAME</span><br><span class="line">    <span class="keyword">FROM</span> SPJ</span><br><span class="line">    <span class="keyword">JOIN</span> S <span class="keyword">USING</span>(SNO)</span><br><span class="line">    <span class="keyword">JOIN</span> P <span class="keyword">USING</span>(PNO)</span><br><span class="line">    <span class="keyword">JOIN</span> J <span class="keyword">USING</span>(JNO)</span><br><span class="line">    <span class="keyword">WHERE</span> SPJ.JNO <span class="operator">=</span> <span class="keyword">no</span></span><br><span class="line">    <span class="keyword">ORDER</span> <span class="keyword">BY</span> SNAME,PNAME;</span><br><span class="line"><span class="keyword">END</span> $</span><br><span class="line">DELIMITER ;</span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br><span class="line">#以下代码禁止删除</span><br><span class="line"><span class="keyword">CALL</span> PROC_JSEARCH(<span class="string">&#x27;J2&#x27;</span>);</span><br></pre></td></tr></table></figure><h1 id="第7关-定义一个名为proc-supdate的有参数存储过程">第7关 定义一个名为PROC_SUPDATE的有参数存储过程</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">USE mydata;</span><br><span class="line"></span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line">DELIMITER $</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> PROC_SUPDATE(<span class="keyword">no</span> <span class="type">CHAR</span>(<span class="number">3</span>),name <span class="type">CHAR</span>(<span class="number">10</span>),city <span class="type">CHAR</span>(<span class="number">10</span>))</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">UPDATE</span> S</span><br><span class="line">    <span class="keyword">SET</span> SNAME <span class="operator">=</span> name,</span><br><span class="line">        CITY <span class="operator">=</span> city</span><br><span class="line">    <span class="keyword">WHERE</span> SNO <span class="operator">=</span> <span class="keyword">no</span>;</span><br><span class="line"><span class="keyword">END</span> $</span><br><span class="line">DELIMITER ;</span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br><span class="line">#以下代码禁止删除</span><br><span class="line"><span class="keyword">CALL</span> PROC_SUPDATE(<span class="string">&#x27;S4&#x27;</span>, <span class="string">&#x27;深技大&#x27;</span>, <span class="string">&#x27;深圳&#x27;</span>);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> S;</span><br></pre></td></tr></table></figure><h1 id="第8关-定义一个名为proc-avgweight的有参数存储过程">第8关 定义一个名为PROC_AVGWEIGHT的有参数存储过程</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">USE mydata;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line">DELIMITER $</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> PROC_AVGWEIGHT(<span class="keyword">IN</span> sno <span class="type">CHAR</span>(<span class="number">3</span>),<span class="keyword">IN</span> jno <span class="type">CHAR</span>(<span class="number">3</span>),<span class="keyword">OUT</span> AVG_WEIGHT <span class="type">INT</span>)</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">SELECT</span></span><br><span class="line">        <span class="built_in">SUM</span>(WEIGHT<span class="operator">*</span>QTY)<span class="operator">/</span><span class="built_in">SUM</span>(QTY)</span><br><span class="line">    <span class="keyword">INTO</span> AVG_WEIGHT</span><br><span class="line">    <span class="keyword">FROM</span> SPJ</span><br><span class="line">    <span class="keyword">JOIN</span> P <span class="keyword">USING</span>(PNO)</span><br><span class="line">    <span class="keyword">WHERE</span> SPJ.SNO <span class="operator">=</span> sno <span class="keyword">AND</span> SPJ.JNO <span class="operator">=</span> jno</span><br><span class="line">    <span class="keyword">GROUP</span> <span class="keyword">BY</span> SPJ.SNO,SPJ.JNO;</span><br><span class="line"><span class="keyword">END</span> $</span><br><span class="line">DELIMITER ;</span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br><span class="line"><span class="keyword">CALL</span> PROC_AVGWEIGHT(<span class="string">&#x27;S2&#x27;</span>,<span class="string">&#x27;J2&#x27;</span>,<span class="variable">@AVG_WEIGHT</span>);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="variable">@AVG_WEIGHT</span>;</span><br></pre></td></tr></table></figure><h1 id="第9关-定义一个名为proc-jgrade的有参数存储过程">第9关 定义一个名为PROC_JGRADE的有参数存储过程</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">USE mydata;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line">DELIMITER $</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> PROC_JGRADE(<span class="keyword">IN</span> jno <span class="type">CHAR</span>(<span class="number">3</span>),<span class="keyword">OUT</span> JTYPE <span class="type">CHAR</span>(<span class="number">1</span>))</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">SELECT</span></span><br><span class="line">        <span class="keyword">CASE</span></span><br><span class="line">            <span class="keyword">WHEN</span> <span class="built_in">SUM</span>(QTY) <span class="operator">&gt;</span> <span class="number">2000</span> <span class="keyword">THEN</span> <span class="string">&#x27;L&#x27;</span></span><br><span class="line">            <span class="keyword">WHEN</span> <span class="built_in">SUM</span>(QTY) <span class="keyword">BETWEEN</span> <span class="number">1000</span> <span class="keyword">AND</span> <span class="number">2000</span> <span class="keyword">THEN</span> <span class="string">&#x27;M&#x27;</span></span><br><span class="line">            <span class="keyword">ELSE</span> <span class="string">&#x27;S&#x27;</span></span><br><span class="line">        <span class="keyword">END</span>  type</span><br><span class="line">        <span class="keyword">INTO</span> JTYPE</span><br><span class="line">    <span class="keyword">FROM</span> SPJ</span><br><span class="line">    <span class="keyword">WHERE</span> SPJ.JNO <span class="operator">=</span> jno;</span><br><span class="line"><span class="keyword">END</span>$</span><br><span class="line">DELIMITER ;</span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br><span class="line">#以下代码禁止删除</span><br><span class="line"><span class="keyword">CALL</span> PROC_JGRADE(<span class="string">&#x27;J1&#x27;</span>, <span class="variable">@JTYPE</span>);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="variable">@JTYPE</span>;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>实验12 数据库E-R图设计</title>
      <link href="/posts/973/"/>
      <url>/posts/973/</url>
      
        <content type="html"><![CDATA[<p>1、注意事项：<br>1)、先完成实体的关系模型(表)，确定实体的主码(尽量单列做主码)<br>2)、联系的转换：<br>①1:1的联系<br>联系合并到某个1端，并在该表中增加另一个实体的码(作为外码，不作为主属性！)，以及添加联系本身的属性。<br>② 1:n的联系<br>合并到n端对应的表中，将1端的码添加到n端的表(作为外码，不作为主属性！)，以及添加联系本身的属性。<br>③m:n的联系<br>必须增加一个新表，新表的码至少由联系两端实体的码组合而成，同时增加相关的联系属性(如有时间等辅助标识唯一属性，一般应作为主属性)。</p><p>3)、课本P232，1：1，1：n联系时，把转换新的关系模式打叉，以后工作时除非很特殊的场景，都不要转换为新的表。ER图的设计虽然理论上是最简关系，但关系型数据库的缺点之一就是表相对较多，多表查询可能时延较大，商用时还可能根据性能降低范式合表（只要业务模型能规避低范式的增删改问题即可）。</p><p>4）注意事项：<strong>取决于业务建模</strong><br><strong>①</strong> <strong>联系需要有意义，而不仅是取值约束</strong><br><strong>②</strong> <strong>联系可能需要新增时间等主属性</strong><br><strong>③</strong> <strong>两个实体之间可能存在多种联系</strong><br><strong>④</strong> <strong>三元联系之外，依然可能存在两两间联系</strong><br><strong>⑤</strong> <strong>联系可以再与实体或联系产生联系</strong><br><strong>⑥</strong> <strong>通过编号规则可增加信息量，减少主属性</strong><br><strong>⑦</strong> <strong>有时通过完整性约束(比如触发器)可约束取值，不一定要通过表来约束</strong></p><p><strong>题目1：</strong><br>某医院病房信息系统中需要如下数据信息：<br>科室：科地址，科名(不重复)，科电话<br>病房：床位数量，病房号<br>医生：姓名，职称，性别，工号<br>病人：姓名，病历号，性别</p><p>其中，一个科室有多个病房、多个医生，一个病房只能属于一个科室，一个医生只属于一个科室，但可负责多个病人的诊治(简化，只考虑每人一次诊断)，一个病人入住病房后（一个病房可能住多名病人）的主管医生只有一个。<em>(注：题目特意未描述医生与病房的联系，请按题意作答。因此分组综合实验宣讲时，都必须讲E-R图的设计，自然语言描述数据库设计容易二义性。)</em><br>完成如下设计：<br>（1）设计该信息系统的E－R图；（20分）<br><img src="https://raw.githubusercontent.com/crayz-l/Learning_picgo/main/img/sql_experiment12_1" alt=""></p><p>（2）将该E-R图转换为关系模型结构，注明每个关系模式的主码(下划线)和外码(可用FK标注)，是否满足BCNF。（10分）<br>科室（<u>科名</u>，科地址，科电话）<br>病房（<u>病房号</u>，床位数量，科名（FK））<br>医生（<u>工号</u>，姓名，职称，性别，科名（FK））<br>病人（<u>病历号</u>，姓名，性别，病房号（FK），主管医生工号（FK））<br>没有任何部分码依赖、传递依赖、或非主属性到主码的依赖，所以均满足BCNF。</p><p>（3）假设病人可以看多个医生(同一个医生也可以看<strong>多</strong>次)，那么是否需要新建表？请仅写出该新建的表，其他不用写。标注主码(下划线)和外码(可用FK标注)。（10分）<br>诊断（<u>医生工号（FK）</u>，<u>病历号（FK）</u>，<u>诊断时间</u>，诊断）</p><p><strong>题目2：</strong><br>某工厂信息系统需如下数据信息，集团有多个工厂，每间工厂可生产多种产品，且每种产品可以在多间工厂生产，每间工厂需记录生产产品的<strong>该月产量</strong>；每间工厂聘用多名职工，且每名职工只能在一间工厂工作，工厂聘用职工有聘期和工资。工厂的属性有厂名、工厂编号、地址，产品的属性有产品名、产品编号、规格，职工的属性有职工号、姓名。<br>（1）根据上述语义画出E-R图，要求画出属性；（15分）<br><img src="https://raw.githubusercontent.com/crayz-l/Learning_picgo/main/img/sql_experiment12_2" alt=""><br>（2）将该E-R模型转换为关系模型，指出每个关系模式的主码(下划线)和外码(可用FK标注)，以及是否满足BCNF。（15分）<br>工厂（<u>工厂编号</u>，厂名，地址）满足BCNF;<br>产品（<u>产品编号</u>，产品名，规格）满足BCNF；<br>职工（<u>职工号</u>，姓名，聘期，工资，工厂编号（FK））满足BCNF；<br>生产记录（<u>工厂编号（FK）</u>，<u>产品编号（FK）</u>，生产年月，月产量）满足BCNF。<br>由于记录月产量肯定需要按月份划分，所以在生产记录表中引入生产年月这一属性。</p><p><strong>题目3：</strong><br>某高校设计的数据库需设计如下属性列：<br>①   首先课程号、准考证号均为唯一，请根据下表的列名确定对应属性列；<em>(提示：唯一即能够标识一个实体，先读完题目，然后根据下表排除后的列名找出课程号、准考证号能唯一确定的列。此外，本题特意不用学号)；</em><br>②   教室号和考试时间(含日期时间)决定唯一的考场，每门课可以有多个考场(而一个考场在某考试时间只能考一门课)；一人可以考多门课(不同学期可以考同一门课)；<br>③   缓考情况里比如缓考/休学需记录在该学期的该次选课里，成绩为空；<br><strong>请根据题干作答，</strong> 其他语义不再赘述 <em>(题目并未给出很详细的信息，但可以按题意给出唯一参考答案。)</em></p><table><thead><tr><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td>准考证号</td><td>姓名</td><td>教室号</td><td>考试时间</td><td>主监考工号</td><td>座位号</td><td>缓考情况</td><td>考试成绩</td><td>考试成绩</td><td>考试成绩</td><td>考试成绩</td></tr><tr><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>课程号</td><td>课程名</td><td>学期</td><td>成绩</td></tr><tr><td></td><td></td><td></td><td></td><td></td><td></td><td>缓考/休学/缺考…</td><td></td><td></td><td>2022-1</td><td></td></tr></tbody></table><p>(1)请回答以上关系是否满足3NF？是否满足2NF？<br>由题目可知，在考试成绩一列还可细分，不满足1NF，故不满足3NF和2NF</p><p>(2)若不满足，请将其转化为符合3NF，表名自定，不要增删属性，注明主码(下划线)和外码(用FK标注)。<em>提示：用E-R图思想比列举函数依赖关系往往更直观，尤其商用需要描述上百个属性时。</em><br>学生信息（<u>准考证号</u>，姓名）<br>课程信息（<u>课程号</u>，课程名）<br>考场信息（<u>教室号</u>，<u>考试时间</u>，课程号（FK），主监考工号）<br>考场座位（<u>准考证号（FK）</u>，<u>教室号（FK）</u>，<u>考试时间</u>，座位号）<br>考试成绩（<u>准考证号（FK）</u>，<u>课程号（FK）</u>，<u>学期</u>，<u>缓考情况</u>，成绩）</p>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>实验11 SQL互联网业务查询-2</title>
      <link href="/posts/21532/"/>
      <url>/posts/21532/</url>
      
        <content type="html"><![CDATA[<h1 id="第1关-查询某网站每个日期新用户的次日留存率">第1关 查询某网站每个日期新用户的次日留存率</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">USE mydata;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">with</span> Table_a <span class="keyword">as</span>(</span><br><span class="line">    <span class="keyword">SELECT</span></span><br><span class="line">        user_id,</span><br><span class="line">        <span class="built_in">MIN</span>(<span class="type">date</span>) <span class="type">date</span></span><br><span class="line">    <span class="keyword">FROM</span> login</span><br><span class="line">    <span class="keyword">GROUP</span> <span class="keyword">BY</span> user_id</span><br><span class="line">)</span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    Table_a.date,</span><br><span class="line">    ROUND (<span class="built_in">COUNT</span>(<span class="keyword">DISTINCT</span> login.user_id)<span class="operator">/</span><span class="built_in">COUNT</span>(Table_a.user_id),<span class="number">3</span>) p</span><br><span class="line"><span class="keyword">FROM</span> Table_a</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> login <span class="keyword">ON</span> Table_a.user_id <span class="operator">=</span> login.user_id <span class="keyword">AND</span> DATEDIFF(login.date,Table_a.date) <span class="operator">=</span> <span class="number">1</span></span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> Table_a.date</span><br><span class="line"><span class="keyword">UNION</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    login.date,</span><br><span class="line">    <span class="number">0.000</span></span><br><span class="line"><span class="keyword">FROM</span> login</span><br><span class="line"><span class="keyword">WHERE</span> <span class="type">date</span> <span class="keyword">NOT</span> <span class="keyword">IN</span>(</span><br><span class="line">    <span class="keyword">SELECT</span> <span class="type">date</span></span><br><span class="line">    <span class="keyword">FROM</span> Table_a</span><br><span class="line">)</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="type">date</span></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br></pre></td></tr></table></figure><h1 id="第2关-查询满足条件的用户">第2关 查询满足条件的用户</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">USE mydata;</span><br><span class="line"></span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    user_id,</span><br><span class="line">    <span class="built_in">MIN</span>(<span class="keyword">CASE</span> <span class="keyword">WHEN</span> num <span class="operator">=</span> <span class="number">1</span> <span class="keyword">THEN</span> <span class="type">date</span> <span class="keyword">END</span>) first_buy_date,</span><br><span class="line">    <span class="built_in">MAX</span>(<span class="keyword">CASE</span> <span class="keyword">WHEN</span> num <span class="operator">=</span> <span class="number">2</span> <span class="keyword">THEN</span> <span class="type">date</span> <span class="keyword">END</span>) second_buy_date,</span><br><span class="line">    <span class="built_in">COUNT</span>(<span class="operator">*</span>) cnt</span><br><span class="line"><span class="keyword">FROM</span> (</span><br><span class="line">    <span class="keyword">SELECT</span></span><br><span class="line">        <span class="operator">*</span>,</span><br><span class="line">        <span class="built_in">row_number</span>() <span class="keyword">over</span>(<span class="keyword">partition</span> <span class="keyword">by</span> user_id <span class="keyword">order</span> <span class="keyword">by</span> <span class="type">date</span>) num</span><br><span class="line">    <span class="keyword">FROM</span> order_info</span><br><span class="line">    <span class="keyword">WHERE</span> status <span class="operator">=</span> <span class="string">&#x27;completed&#x27;</span></span><br><span class="line">    <span class="keyword">AND</span> <span class="type">date</span> <span class="operator">&gt;</span> <span class="string">&#x27;2021-10-15&#x27;</span></span><br><span class="line">    <span class="keyword">AND</span> product_name <span class="keyword">IN</span> (<span class="string">&#x27;C++&#x27;</span>,<span class="string">&#x27;Python&#x27;</span>,<span class="string">&#x27;Java&#x27;</span>)</span><br><span class="line">) a</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> user_id</span><br><span class="line"><span class="keyword">HAVING</span> <span class="built_in">COUNT</span>(<span class="number">1</span>)<span class="operator">&gt;=</span><span class="number">2</span></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br></pre></td></tr></table></figure><h1 id="第3关-查询未完成订单率排名前三的用户">第3关 查询未完成订单率排名前三的用户</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">USE mydata;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    product_name,</span><br><span class="line">    user_id,</span><br><span class="line">    rnk,</span><br><span class="line">    CONCAT(FORMAT(incomp_rate<span class="operator">*</span><span class="number">100</span>, <span class="number">2</span>), <span class="string">&#x27;%&#x27;</span>) incomp_rate</span><br><span class="line"><span class="keyword">FROM</span>(</span><br><span class="line">    <span class="keyword">SELECT</span></span><br><span class="line">        product_name,</span><br><span class="line">        user_id,</span><br><span class="line">        <span class="built_in">DENSE_RANK</span>() <span class="keyword">OVER</span> (<span class="keyword">PARTITION</span> <span class="keyword">BY</span> product_name <span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="built_in">SUM</span>(IF(status <span class="operator">=</span> <span class="string">&#x27;no_completed&#x27;</span>,<span class="number">1</span>,<span class="number">0</span>)) <span class="operator">/</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">DESC</span>)  rnk,</span><br><span class="line">        ROUND(<span class="built_in">SUM</span>(IF(status <span class="operator">=</span> <span class="string">&#x27;no_completed&#x27;</span>,<span class="number">1</span>,<span class="number">0</span>))<span class="operator">/</span><span class="built_in">COUNT</span>(<span class="operator">*</span>),<span class="number">4</span>) incomp_rate</span><br><span class="line">    <span class="keyword">FROM</span> order_info</span><br><span class="line">    <span class="keyword">WHERE</span> <span class="type">date</span> <span class="keyword">BETWEEN</span> <span class="string">&#x27;2021-10-16&#x27;</span> <span class="keyword">AND</span> <span class="string">&#x27;2021-10-31&#x27;</span></span><br><span class="line">    <span class="keyword">GROUP</span> <span class="keyword">BY</span> product_name,user_id</span><br><span class="line">    <span class="keyword">HAVING</span> incomp_rate <span class="operator">&gt;</span> <span class="number">0</span></span><br><span class="line">    <span class="keyword">ORDER</span> <span class="keyword">BY</span> product_name,rnk</span><br><span class="line">) a</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> product_name,user_id</span><br><span class="line"><span class="keyword">HAVING</span> rnk <span class="operator">&lt;=</span> <span class="number">3</span></span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>实验10 SQL互联网业务查询-1</title>
      <link href="/posts/54623/"/>
      <url>/posts/54623/</url>
      
        <content type="html"><![CDATA[<h1 id="第1关-查找购买个数超过20-重量小于50的商品-按照商品id升序排序">第1关 查找购买个数超过20,重量小于50的商品，按照商品id升序排序</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">USE mygoods;</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">SELECT</span> G.id,<span class="built_in">SUM</span>(T.count) total</span><br><span class="line"><span class="keyword">FROM</span> goods G</span><br><span class="line"><span class="keyword">JOIN</span> trans T <span class="keyword">USING</span>(id)</span><br><span class="line"><span class="keyword">WHERE</span> weight <span class="operator">&lt;</span> <span class="number">50</span></span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> T.id</span><br><span class="line"><span class="keyword">HAVING</span> <span class="built_in">SUM</span>(T.count)<span class="operator">&gt;</span><span class="number">20</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> G.id;</span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br></pre></td></tr></table></figure><h1 id="第2关-查询向follow表中user-id-1-的用户-推荐其关注的人喜欢的音乐">第2关 查询向follow表中user_id = 1 的用户，推荐其关注的人喜欢的音乐</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">USE mymusic;</span><br><span class="line"></span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> music_name</span><br><span class="line"><span class="keyword">FROM</span> music</span><br><span class="line"><span class="keyword">WHERE</span> id <span class="keyword">IN</span>(</span><br><span class="line">    <span class="keyword">SELECT</span> music_id</span><br><span class="line">    <span class="keyword">FROM</span> music_likes mi,follow f</span><br><span class="line">    <span class="keyword">WHERE</span> mi.user_id <span class="operator">=</span> f.follower_id <span class="keyword">AND</span> f.user_id <span class="operator">=</span> <span class="number">1</span></span><br><span class="line">        <span class="keyword">AND</span> music_id <span class="keyword">NOT</span> <span class="keyword">IN</span>(</span><br><span class="line">        <span class="keyword">SELECT</span> music_id</span><br><span class="line">        <span class="keyword">FROM</span> music_likes mi</span><br><span class="line">        <span class="keyword">WHERE</span> user_id <span class="operator">=</span> <span class="number">1</span></span><br><span class="line">    )</span><br><span class="line">)</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> music_name</span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br></pre></td></tr></table></figure><h1 id="第3关-查询向follow表中user-id用户-推荐其关注的人喜欢的音乐">第3关 查询向follow表中user_id用户，推荐其关注的人喜欢的音乐</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">USE mymusic;</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> f.user_id,music_name</span><br><span class="line"><span class="keyword">FROM</span> music_likes mi</span><br><span class="line"><span class="keyword">RIGHT</span> <span class="keyword">JOIN</span> follow f <span class="keyword">ON</span> f.follower_id <span class="operator">=</span> mi.user_id</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> music m <span class="keyword">ON</span> mi.music_id <span class="operator">=</span> m.id</span><br><span class="line"><span class="keyword">WHERE</span> music_id <span class="keyword">NOT</span> <span class="keyword">IN</span>(</span><br><span class="line">    <span class="keyword">SELECT</span> music_id</span><br><span class="line">    <span class="keyword">FROM</span> (</span><br><span class="line">        <span class="keyword">SELECT</span> Tablea.<span class="operator">*</span></span><br><span class="line">        <span class="keyword">FROM</span> (</span><br><span class="line">            <span class="keyword">SELECT</span></span><br><span class="line">            mi1.<span class="operator">*</span>,</span><br><span class="line">            f1.follower_id</span><br><span class="line">            <span class="keyword">FROM</span> follow f1,music_likes mi1</span><br><span class="line">            <span class="keyword">WHERE</span> f1.user_id <span class="operator">=</span> mi1.user_id</span><br><span class="line">        ) Tablea,music_likes mi2</span><br><span class="line">        <span class="keyword">WHERE</span> Tablea.follower_id <span class="operator">=</span> mi2.user_id <span class="keyword">AND</span> Tablea.music_id <span class="operator">=</span> mi2.music_id</span><br><span class="line">    ) Tableb</span><br><span class="line">)</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> user_id,music_name</span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br></pre></td></tr></table></figure><h1 id="第4关-查询用户日活数及支付金额">第4关 查询用户日活数及支付金额</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">USE myusers;</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">   lr.dt,</span><br><span class="line">   <span class="built_in">COUNT</span>(<span class="keyword">DISTINCT</span> lr.user_id) dau,</span><br><span class="line">   <span class="built_in">SUM</span>(nu.is_new) dau_new,</span><br><span class="line">   <span class="built_in">SUM</span>(up.pay_money) total_pay,</span><br><span class="line">   <span class="built_in">SUM</span>(IF(nu.is_new<span class="operator">=</span><span class="number">1</span>,up.pay_money,<span class="keyword">NULL</span>)) total_pay_new</span><br><span class="line"><span class="keyword">FROM</span> (<span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> user_id,dt <span class="keyword">FROM</span> login_record) lr</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> new_user nu <span class="keyword">ON</span> lr.user_id <span class="operator">=</span> nu.user_id</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> user_pay up <span class="keyword">ON</span> lr.user_id <span class="operator">=</span> up.user_id <span class="keyword">AND</span> lr.dt <span class="operator">=</span> up.dt</span><br><span class="line"></span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> lr.dt</span><br><span class="line"><span class="keyword">HAVING</span> <span class="built_in">SUM</span>(up.pay_money) <span class="keyword">IS</span> <span class="keyword">NOT NULL</span></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br></pre></td></tr></table></figure><h1 id="第5关-查询各工程号最大的按零件号合计供应量以及该零件号-并先按工程号升序-再按零件号升序排序">第5关 查询各工程号最大的按零件号合计供应量以及该零件号，并先按工程号升序，再按零件号升序排序。</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">USE mydata;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">SELECT</span> JNO,PNO,SUM_QTY maxsum</span><br><span class="line"><span class="keyword">FROM</span> (</span><br><span class="line">    <span class="keyword">SELECT</span> JNO,PNO,<span class="built_in">SUM</span>(QTY) SUM_QTY</span><br><span class="line">    <span class="keyword">FROM</span> SPJ</span><br><span class="line">    <span class="keyword">GROUP</span> <span class="keyword">BY</span> JNO,PNO</span><br><span class="line">    <span class="keyword">ORDER</span> <span class="keyword">BY</span> JNO,PNO</span><br><span class="line">) A</span><br><span class="line"><span class="keyword">WHERE</span> SUM_QTY <span class="operator">=</span>(</span><br><span class="line">    <span class="keyword">SELECT</span> <span class="built_in">MAX</span>(SUM_QTY) maxsum</span><br><span class="line">    <span class="keyword">FROM</span>(</span><br><span class="line">        <span class="keyword">SELECT</span> JNO,PNO,<span class="built_in">SUM</span>(QTY) SUM_QTY</span><br><span class="line">            <span class="keyword">FROM</span> SPJ</span><br><span class="line">            <span class="keyword">GROUP</span> <span class="keyword">BY</span> JNO,PNO</span><br><span class="line">            <span class="keyword">ORDER</span> <span class="keyword">BY</span> JNO,PNO) B</span><br><span class="line">    <span class="keyword">WHERE</span> A.JNO <span class="operator">=</span> B.JNO</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>实验9 SQL视图</title>
      <link href="/posts/90/"/>
      <url>/posts/90/</url>
      
        <content type="html"><![CDATA[<h1 id="第1关-请为三建工程项目建立一个供应情况的视图v-spq-包括供应商代码-sno-零件代码-pno-供应数量-qty">第1关 请为三建工程项目建立一个供应情况的视图V_SPQ，包括供应商代码(SNO)、零件代码(PNO)、供应数量(QTY)</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">USE mydata;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> V_SPQ <span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> SNO,PNO,QTY</span><br><span class="line"><span class="keyword">FROM</span> SPJ</span><br><span class="line"><span class="keyword">JOIN</span> J <span class="keyword">USING</span>(JNO)</span><br><span class="line"><span class="keyword">WHERE</span> JNAME <span class="operator">=</span> <span class="string">&#x27;三建&#x27;</span>;</span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br><span class="line">#以下代码禁止删除</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> V_SPQ;</span><br></pre></td></tr></table></figure><h1 id="第2关-从视图v-spq找出三建工程项目使用的各种零件代码及其数">第2关 从视图V_SPQ找出三建工程项目使用的各种零件代码及其数</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">USE mydata;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">SELECT</span> PNO ,<span class="built_in">SUM</span>(QTY) SUM_QTY</span><br><span class="line"><span class="keyword">FROM</span> V_SPQ</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> PNO</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> SUM_QTY <span class="keyword">DESC</span></span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br></pre></td></tr></table></figure><h1 id="第3关-从视图v-spq找出供应商s1的供应情况">第3关 从视图V_SPQ找出供应商S1的供应情况</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">USE mydata;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">SELECT</span> PNO,QTY</span><br><span class="line"><span class="keyword">FROM</span> V_SPQ</span><br><span class="line"><span class="keyword">WHERE</span> SNO <span class="operator">=</span> <span class="string">&#x27;S1&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br></pre></td></tr></table></figure><h1 id="第4关-定义查询s2供应商的所有供应明细的视图v-spj2">第4关 定义查询S2供应商的所有供应明细的视图V_SPJ2</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">USE mydata;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> V_SPJ2 <span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> SPJ</span><br><span class="line"><span class="keyword">WHERE</span> SNO <span class="operator">=</span> <span class="string">&#x27;S2&#x27;</span>;</span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br><span class="line">#以下代码禁止删除</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> V_SPJ2;</span><br></pre></td></tr></table></figure><h1 id="第5关-定义查询北京的供应商的编号-名称和城市的视图v-bjs">第5关 定义查询北京的供应商的编号、名称和城市的视图V_BJS</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">USE mydata;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> V_BJS <span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> SNO,SNAME,CITY</span><br><span class="line"><span class="keyword">FROM</span> S</span><br><span class="line"><span class="keyword">WHERE</span> CITY <span class="operator">=</span> <span class="string">&#x27;北京&#x27;</span>;</span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br><span class="line">#以下代码禁止删除</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> V_BJS;</span><br></pre></td></tr></table></figure><h1 id="第6关-定义查询各工程名称使用的各种颜色零件的个数的视图v-pjq">第6关 定义查询各工程名称使用的各种颜色零件的个数的视图V_PJQ</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">USE mydata;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> V_PJQ <span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> JNAME,COLOR,<span class="built_in">SUM</span>(QTY) SUM_QTY</span><br><span class="line"><span class="keyword">FROM</span> SPJ,P,J</span><br><span class="line"><span class="keyword">WHERE</span> SPJ.PNO <span class="operator">=</span> P.PNO <span class="keyword">AND</span> SPJ.JNO <span class="operator">=</span> J.JNO</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> JNAME,COLOR;</span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br><span class="line">#以下代码禁止删除</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> V_PJQ <span class="keyword">ORDER</span> <span class="keyword">BY</span> V_PJQ.JNAME <span class="keyword">ASC</span>, V_PJQ.COLOR <span class="keyword">ASC</span>;</span><br></pre></td></tr></table></figure><h1 id="第7关-将视图v-spq中供应数量为400的供应商改为-s1-并观察基本表spj的变化">第7关 将视图V_SPQ中供应数量为400的供应商改为’S1’，并观察基本表SPJ的变化</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">USE mydata;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">UPDATE</span> V_SPQ</span><br><span class="line"><span class="keyword">SET</span> SNO <span class="operator">=</span> <span class="string">&#x27;S1&#x27;</span></span><br><span class="line"><span class="keyword">WHERE</span> QTY<span class="operator">=</span><span class="number">400</span>;</span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br><span class="line">#以下代码禁止删除</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> SPJ;</span><br></pre></td></tr></table></figure><h1 id="第8关-建立比赛-1001-的所有解答的视图v-1001-并要求进行修改和插入操作时仍需保证该视图只有比赛1001的解答">第8关 建立比赛 1001 的所有解答的视图v_1001，并要求进行修改和插入操作时仍需保证该视图只有比赛1001的解答。</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">USE `sqlexp<span class="operator">-</span>sztuoj`;</span><br><span class="line"></span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> v_1001 <span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> solution</span><br><span class="line"><span class="keyword">WHERE</span> contest_id <span class="operator">=</span> <span class="string">&#x27;1001&#x27;</span></span><br><span class="line"><span class="keyword">WITH</span> <span class="keyword">CHECK</span> OPTION;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br><span class="line">#保证下面一行MYSQL语句在<span class="number">16</span>行的位置，以保证结果匹配</span><br><span class="line"><span class="keyword">UPDATE</span> v_1001 <span class="keyword">SET</span> v_1001.contest_id <span class="operator">=</span> <span class="number">1002</span>;</span><br></pre></td></tr></table></figure><h1 id="第9关-建立2020级做了1003号题的选手视图v-user2020-1003-包括user-id-name-result">第9关 建立2020级做了1003号题的选手视图v_user2020_1003（包括user_id、name、result）</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">USE `sqlexp<span class="operator">-</span>sztuoj`;</span><br><span class="line"></span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> v_user2020_1003 <span class="keyword">As</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> u.user_id,name,<span class="keyword">result</span></span><br><span class="line"><span class="keyword">FROM</span> users u,solution s</span><br><span class="line"><span class="keyword">WHERE</span> u.user_id <span class="operator">=</span> s.user_id <span class="keyword">AND</span> s.user_id <span class="keyword">LIKE</span> &quot;2020%&quot; <span class="keyword">AND</span> s.problem_id <span class="operator">=</span> <span class="number">1003</span> ;</span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br><span class="line">#以下代码禁止删除</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> v_user2020_1003;</span><br></pre></td></tr></table></figure><h1 id="第10关-建立2020级做了1001号题且result为6的选手视图v-user2020-1001-6">第10关 建立2020级做了1001号题且result为6的选手视图v_user2020_1001_6</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">USE `sqlexp<span class="operator">-</span>sztuoj`;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> v_user2020_1001_6 <span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> u.user_id,u.name,s.result,s.problem_id</span><br><span class="line"><span class="keyword">FROM</span> users u,solution s</span><br><span class="line"><span class="keyword">WHERE</span> u.user_id <span class="operator">=</span> s.user_id <span class="keyword">AND</span> s.user_id <span class="keyword">LIKE</span> &quot;2020%&quot; <span class="keyword">AND</span> s.problem_id <span class="operator">=</span> <span class="number">1001</span> <span class="keyword">AND</span> s.result <span class="operator">=</span> <span class="number">6</span>;</span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br><span class="line">#以下代码禁止删除</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> v_user2020_1001_6;</span><br></pre></td></tr></table></figure><h1 id="第11关-将选手的user-id及解答的平均avgmemory定义为一个视图v-users-avgmemory">第11关 将选手的user_id及解答的平均avgmemory定义为一个视图v_users_avgmemory</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">USE `sqlexp<span class="operator">-</span>sztuoj`;</span><br><span class="line"></span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> v_users_avgmemory <span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> user_id,<span class="built_in">AVG</span>(memory) avgmemory</span><br><span class="line"><span class="keyword">FROM</span> solution</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> user_id;</span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> v_users_avgmemory;</span><br></pre></td></tr></table></figure><h1 id="第12关-删除视图v-1001">第12关 删除视图v_1001</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">USE `sqlexp<span class="operator">-</span>sztuoj`;</span><br><span class="line"></span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">VIEW</span> v_1001;</span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br><span class="line">#保证下面一行MYSQL语句在<span class="number">9</span>行的位置，以保证结果匹配</span><br><span class="line"><span class="keyword">SELECT</span> v_1001.<span class="operator">*</span> <span class="keyword">FROM</span> v_1001;</span><br></pre></td></tr></table></figure><h1 id="第13关-在视图v-users-avgmemory中查询平均memory在2000以下的选手信息及平均memory">第13关 在视图v_users_avgmemory中查询平均memory在2000以下的选手信息及平均memory</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">USE `sqlexp<span class="operator">-</span>sztuoj`;</span><br><span class="line"></span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> v_users_avgmemory</span><br><span class="line"><span class="keyword">WHERE</span> avgmemory <span class="operator">&lt;</span> <span class="number">2000</span></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br></pre></td></tr></table></figure><h1 id="第14关-在视图v-1001中删除user-id为201902010318的记录">第14关 在视图v_1001中删除user_id为201902010318的记录</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">USE `sqlexp<span class="operator">-</span>sztuoj`;</span><br><span class="line"></span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> v_1001</span><br><span class="line"><span class="keyword">WHERE</span> user_id <span class="operator">=</span> <span class="number">201902010318</span>;</span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br><span class="line">#以下代码禁止删除</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> v_1001;</span><br></pre></td></tr></table></figure><h1 id="第15关-在视图v-users-avgmemory中插入一条记录-2020100904-1800">第15关 在视图v_users_avgmemory中插入一条记录(2020100904，1800)</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">USE `sqlexp<span class="operator">-</span>sztuoj`;</span><br><span class="line"></span><br><span class="line">#请在第<span class="number">5</span>行开始添加实现代码，务必保证从第<span class="number">5</span>行开始添加代码，以保证结果匹配</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">INSERT INTO</span> v_users_avgmemory <span class="keyword">VALUE</span>(<span class="number">2020100904</span>,<span class="number">1800</span>)</span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br></pre></td></tr></table></figure><h1 id="第16关-在视图v-user2020-1003中将user-id为20200202的result更改为10">第16关 在视图v_user2020_1003中将user_id为20200202的result更改为10</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">USE `sqlexp<span class="operator">-</span>sztuoj`;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">UPDATE</span> v_user2020_1003</span><br><span class="line"><span class="keyword">SET</span> <span class="keyword">result</span> <span class="operator">=</span> <span class="number">10</span></span><br><span class="line"><span class="keyword">WHERE</span> user_id <span class="operator">=</span> <span class="string">&#x27;20200202&#x27;</span>;</span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br><span class="line">#以下代码禁止删除</span><br><span class="line"><span class="keyword">SELECT</span> v_user2020_1003.<span class="operator">*</span> <span class="keyword">FROM</span> v_user2020_1003 <span class="keyword">WHERE</span> v_user2020_1003.user_id <span class="operator">=</span> <span class="string">&#x27;20200202&#x27;</span>;</span><br></pre></td></tr></table></figure><h1 id="第17关-根据该需求给spj表插入相应数据">第17关 根据该需求给SPJ表插入相应数据</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">USE mydata;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">INSERT INTO</span> SPJ (SNO,PNO,JNO,QTY)</span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    <span class="string">&#x27;S3&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;P4&#x27;</span>,</span><br><span class="line">    JNO,</span><br><span class="line">    <span class="keyword">NULL</span></span><br><span class="line"><span class="keyword">FROM</span> J</span><br><span class="line"><span class="keyword">WHERE</span> JNAME <span class="keyword">LIKE</span> <span class="string">&#x27;%厂&#x27;</span>;</span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br><span class="line">#以下代码禁止删除</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> SPJ;</span><br></pre></td></tr></table></figure><h1 id="第18关-创建一个名为v-pjmaxsp的视图">第18关 创建一个名为V_PJMAXSP的视图</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">USE mydata;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> TemTable <span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> JNO,SNO,<span class="built_in">SUM</span>(QTY) SUM_QTY</span><br><span class="line"><span class="keyword">FROM</span> SPJ</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> SNO,JNO</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> JNO,QTY <span class="keyword">DESC</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> V_PJMAXSP <span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> TemTable.JNO,TemTable.SNO,SNAME</span><br><span class="line"><span class="keyword">FROM</span> TemTable,S</span><br><span class="line"><span class="keyword">WHERE</span> SUM_QTY<span class="operator">&gt;=</span><span class="keyword">ALL</span>(<span class="keyword">SELECT</span> SUM_QTY <span class="keyword">FROM</span> TemTable t <span class="keyword">WHERE</span> TemTable.JNO<span class="operator">=</span>t.JNO)</span><br><span class="line">    <span class="keyword">AND</span> TemTable.SNO <span class="operator">=</span> S.SNO</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> JNO,SNO;</span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br><span class="line">#以下代码禁止删除</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> V_PJMAXSP;</span><br></pre></td></tr></table></figure><h1 id="第19关-创建一个名为test的视图">第19关 创建一个名为test的视图</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">USE `sqlexp<span class="operator">-</span>sztuoj`;</span><br><span class="line"></span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> test <span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> u.<span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> users u</span><br><span class="line"><span class="keyword">JOIN</span> solution s <span class="keyword">USING</span>(user_id)</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span>(</span><br><span class="line">    <span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line">    <span class="keyword">FROM</span> solution A</span><br><span class="line">    <span class="keyword">WHERE</span> A.user_id <span class="operator">=</span> <span class="string">&#x27;202002020217&#x27;</span> <span class="keyword">AND</span> <span class="keyword">result</span> <span class="operator">=</span> <span class="number">4</span> <span class="keyword">AND</span> <span class="keyword">language</span> <span class="operator">=</span> <span class="number">1</span></span><br><span class="line">        <span class="keyword">AND</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span>(</span><br><span class="line">            <span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line">            <span class="keyword">FROM</span> solution B</span><br><span class="line">            <span class="keyword">WHERE</span> u.user_id <span class="operator">=</span> B.user_id <span class="keyword">AND</span> A.problem_id <span class="operator">=</span> B.problem_id</span><br><span class="line">        )</span><br><span class="line">)</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> u.user_id</span><br><span class="line"><span class="keyword">HAVING</span> <span class="built_in">COUNT</span>(<span class="keyword">DISTINCT</span> s.contest_id) <span class="operator">=</span> <span class="number">3</span>;</span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br><span class="line">#以下代码禁止删除</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> test;</span><br></pre></td></tr></table></figure><h1 id="第20关-创建一个名为v-qty-rank的视图">第20关 创建一个名为V_QTY_RANK的视图</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">USE mydata;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> V_QTY_RANK</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    <span class="operator">*</span>,</span><br><span class="line">    <span class="keyword">CASE</span></span><br><span class="line">        <span class="keyword">WHEN</span> QTY <span class="operator">&gt;=</span> <span class="number">500</span> <span class="keyword">THEN</span> <span class="string">&#x27;A&#x27;</span></span><br><span class="line">        <span class="keyword">WHEN</span> QTY <span class="keyword">BETWEEN</span> <span class="number">200</span> <span class="keyword">AND</span> <span class="number">500</span> <span class="keyword">THEN</span> <span class="string">&#x27;B&#x27;</span></span><br><span class="line">        <span class="keyword">WHEN</span> QTY <span class="operator">&lt;</span> <span class="number">200</span> <span class="keyword">THEN</span> <span class="string">&#x27;C&#x27;</span></span><br><span class="line">        <span class="keyword">ELSE</span> <span class="keyword">NULL</span></span><br><span class="line">    <span class="keyword">END</span> <span class="keyword">AS</span> QTY_RANK</span><br><span class="line"><span class="keyword">FROM</span> SPJ</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> QTY_RANK;</span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br><span class="line">#以下代码禁止删除</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> V_QTY_RANK;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>实验8 SQL的复杂多表查询-2</title>
      <link href="/posts/14962/"/>
      <url>/posts/14962/</url>
      
        <content type="html"><![CDATA[<h1 id="第1关-基于派生表查询每个队员解答中超过他平均memory的user-id及题目编号problem-id">第1关 基于派生表查询每个队员解答中超过他平均memory的user_id及题目编号problem_id</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">USE `sqlexp<span class="operator">-</span>sztuoj`;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">SELECT</span> s.user_id,s.problem_id</span><br><span class="line"><span class="keyword">FROM</span>(</span><br><span class="line">    <span class="keyword">SELECT</span> user_id,<span class="built_in">AVG</span>(memory) <span class="keyword">AS</span> AM</span><br><span class="line">    <span class="keyword">FROM</span> solution</span><br><span class="line">    <span class="keyword">GROUP</span> <span class="keyword">BY</span> user_id</span><br><span class="line">) <span class="keyword">AS</span> Ta</span><br><span class="line"><span class="keyword">JOIN</span> solution s <span class="keyword">USING</span>(user_id)</span><br><span class="line"><span class="keyword">WHERE</span> s.memory <span class="operator">&gt;</span> Ta.AM</span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br></pre></td></tr></table></figure><h1 id="第2关-用any-all实现查询2019级选手-user-id前4位为2019-满足比2020级其中一个选手注册时间早即可的选手">第2关 用ANY/ALL实现查询2019级选手（user_id前4位为2019）满足比2020级其中一个选手注册时间早即可的选手</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">USE `sqlexp<span class="operator">-</span>sztuoj`;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">SELECT</span> user_id,reg_time,name</span><br><span class="line"><span class="keyword">FROM</span> users</span><br><span class="line"><span class="keyword">WHERE</span> user_id <span class="keyword">LIKE</span> <span class="string">&#x27;2019%&#x27;</span> <span class="keyword">AND</span> reg_time <span class="operator">&lt;</span> <span class="keyword">ANY</span>(</span><br><span class="line">    <span class="keyword">SELECT</span> reg_time</span><br><span class="line">    <span class="keyword">FROM</span> users</span><br><span class="line">    <span class="keyword">WHERE</span> user_id <span class="keyword">LIKE</span> <span class="string">&#x27;2020%&#x27;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br></pre></td></tr></table></figure><h1 id="第3关-用聚集查询实现查询2019级选手-user-id前4位为2019-满足比2020级其中一个选手注册时间早即可的选手">第3关 用聚集查询实现查询2019级选手（user_id前4位为2019）满足比2020级其中一个选手注册时间早即可的选手</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">USE `sqlexp<span class="operator">-</span>sztuoj`;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">SELECT</span> user_id,reg_time,name</span><br><span class="line"><span class="keyword">FROM</span> users</span><br><span class="line"><span class="keyword">WHERE</span> user_id <span class="keyword">LIKE</span> &quot;2019%&quot; <span class="keyword">AND</span> reg_time <span class="operator">&lt;</span>(</span><br><span class="line">    <span class="keyword">SELECT</span> <span class="built_in">MAX</span>(reg_time)</span><br><span class="line">    <span class="keyword">FROM</span> users</span><br><span class="line">    <span class="keyword">WHERE</span> user_id <span class="keyword">LIKE</span> &quot;2020%&quot;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br></pre></td></tr></table></figure><h1 id="第4关-用any-all实现查询2019级选手所有比2020级选手注册时间都早的选手信息">第4关 用ANY/ALL实现查询2019级选手所有比2020级选手注册时间都早的选手信息</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">USE `sqlexp<span class="operator">-</span>sztuoj`;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> users</span><br><span class="line"><span class="keyword">WHERE</span> user_id <span class="keyword">LIKE</span> &quot;2019%&quot; <span class="keyword">AND</span> reg_time <span class="operator">&lt;</span> <span class="keyword">ALL</span>(</span><br><span class="line">    <span class="keyword">SELECT</span> reg_time</span><br><span class="line">    <span class="keyword">FROM</span> users</span><br><span class="line">    <span class="keyword">WHERE</span> user_id <span class="keyword">LIKE</span>&quot;2020%&quot;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br></pre></td></tr></table></figure><h1 id="第5关-用聚集查询实现查询2019级选手所有比2020级选手注册时间都早的选手信息">第5关 用聚集查询实现查询2019级选手所有比2020级选手注册时间都早的选手信息</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">USE `sqlexp<span class="operator">-</span>sztuoj`;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> users</span><br><span class="line"><span class="keyword">WHERE</span> user_id <span class="keyword">LIKE</span> &quot;2019%&quot; <span class="keyword">AND</span> reg_time<span class="operator">&lt;</span>(</span><br><span class="line">    <span class="keyword">SELECT</span> <span class="built_in">MIN</span>(reg_time)</span><br><span class="line">    <span class="keyword">FROM</span> users</span><br><span class="line">    <span class="keyword">WHERE</span> user_id <span class="keyword">LIKE</span> &quot;2020%&quot;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br></pre></td></tr></table></figure><h1 id="第6关-用-not-exists-实现查询至少参与过-202002020217-选手参与过的所有比赛的选手信息">第6关 用 NOT EXISTS 实现查询至少参与过&quot;202002020217&quot;选手参与过的所有比赛的选手信息</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">USE `sqlexp<span class="operator">-</span>sztuoj`;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> users</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span>(</span><br><span class="line">    <span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line">    <span class="keyword">FROM</span> (</span><br><span class="line">        <span class="keyword">SELECT</span> contest_id</span><br><span class="line">        <span class="keyword">FROM</span> solution s</span><br><span class="line">        <span class="keyword">WHERE</span> user_id <span class="operator">=</span> <span class="string">&#x27;202002020217&#x27;</span> <span class="keyword">AND</span> contest_id <span class="keyword">IS</span> <span class="keyword">NOT NULL</span></span><br><span class="line">    ) s1</span><br><span class="line">    <span class="keyword">WHERE</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> (</span><br><span class="line">        <span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line">        <span class="keyword">FROM</span> solution s2</span><br><span class="line">        <span class="keyword">WHERE</span> s1.contest_id <span class="operator">=</span> s2.contest_id <span class="keyword">AND</span> users.user_id <span class="operator">=</span> s2.user_id</span><br><span class="line">    )</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br></pre></td></tr></table></figure><h1 id="第7关-求至少用了供应商-s1所供应的全部零件的工程号-jno">第7关 求至少用了供应商 S1所供应的全部零件的工程号 JNO</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">USE mydata;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> a.JNO</span><br><span class="line"><span class="keyword">FROM</span>(</span><br><span class="line">    <span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line">    <span class="keyword">FROM</span> SPJ</span><br><span class="line">    <span class="keyword">WHERE</span> PNO <span class="keyword">IN</span> (</span><br><span class="line">        <span class="keyword">SELECT</span> PNO</span><br><span class="line">        <span class="keyword">FROM</span> (</span><br><span class="line">            <span class="keyword">SELECT</span> PNO,JNO</span><br><span class="line">            <span class="keyword">FROM</span> SPJ</span><br><span class="line">            <span class="keyword">WHERE</span> SNO <span class="operator">=</span> <span class="string">&#x27;S1&#x27;</span></span><br><span class="line">        ) Ta</span><br><span class="line">    )</span><br><span class="line">) a,</span><br><span class="line">(</span><br><span class="line">    <span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line">    <span class="keyword">FROM</span> SPJ</span><br><span class="line">    <span class="keyword">WHERE</span> PNO <span class="keyword">IN</span> (</span><br><span class="line">        <span class="keyword">SELECT</span> PNO</span><br><span class="line">        <span class="keyword">FROM</span> (</span><br><span class="line">            <span class="keyword">SELECT</span> PNO,JNO</span><br><span class="line">            <span class="keyword">FROM</span> SPJ</span><br><span class="line">            <span class="keyword">WHERE</span> SNO <span class="operator">=</span> <span class="string">&#x27;S1&#x27;</span></span><br><span class="line">        ) Ta</span><br><span class="line">    )</span><br><span class="line">) b</span><br><span class="line"><span class="keyword">WHERE</span> a.JNO <span class="operator">=</span> b.JNO <span class="keyword">AND</span> a.PNO <span class="operator">!=</span> b.PN</span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>实验7 SQL的复杂多表查询-1</title>
      <link href="/posts/15145/"/>
      <url>/posts/15145/</url>
      
        <content type="html"><![CDATA[<h1 id="第1关-求各颜色零件的平均重量">第1关 求各颜色零件的平均重量</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">USE mydata;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    COLOR,</span><br><span class="line">    <span class="built_in">AVG</span>(WEIGHT)</span><br><span class="line"><span class="keyword">FROM</span> P</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> COLOR;</span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br></pre></td></tr></table></figure><h1 id="第2关-求北京和天津供应商的总个数">第2关 求北京和天津供应商的总个数</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">USE mydata;</span><br><span class="line"></span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    CITY,</span><br><span class="line">    <span class="built_in">COUNT</span>(<span class="operator">*</span>)</span><br><span class="line"><span class="keyword">FROM</span> S</span><br><span class="line"><span class="keyword">WHERE</span> CITY <span class="operator">=</span> <span class="string">&#x27;北京&#x27;</span></span><br><span class="line"><span class="keyword">UNION</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    CITY,</span><br><span class="line">    <span class="built_in">COUNT</span>(<span class="operator">*</span>)</span><br><span class="line"><span class="keyword">FROM</span> S</span><br><span class="line"><span class="keyword">WHERE</span> CITY <span class="operator">=</span> <span class="string">&#x27;天津&#x27;</span></span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br></pre></td></tr></table></figure><h1 id="第3关-求各供应商供应的零件总数">第3关 求各供应商供应的零件总数</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">USE mydata;</span><br><span class="line"></span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    SNO,</span><br><span class="line">    <span class="built_in">SUM</span>(QTY) SUM_QTY</span><br><span class="line"><span class="keyword">FROM</span> SPJ</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> SNO</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> SUM_QTY <span class="keyword">DESC</span>;</span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br></pre></td></tr></table></figure><h1 id="第4关-求各供应商供应给各工程的零件总数">第4关 求各供应商供应给各工程的零件总数</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">USE mydata;</span><br><span class="line"></span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    SNO,</span><br><span class="line">    JNO,</span><br><span class="line">    <span class="built_in">SUM</span>(QTY) SUM_QTY</span><br><span class="line"><span class="keyword">FROM</span> SPJ</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> SNO,JNO</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> SNO <span class="keyword">DESC</span>, JNO <span class="keyword">DESC</span>;</span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br></pre></td></tr></table></figure><h1 id="第5关-求重量大于所有零件平均重量的零件名称">第5关 求重量大于所有零件平均重量的零件名称</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">USE mydata;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    PNAME</span><br><span class="line"><span class="keyword">FROM</span> P</span><br><span class="line"><span class="keyword">WHERE</span> WEIGHT <span class="operator">&gt;</span> (</span><br><span class="line">    <span class="keyword">SELECT</span> <span class="built_in">AVG</span>(WEIGHT)</span><br><span class="line">    <span class="keyword">FROM</span> P</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br></pre></td></tr></table></figure><h1 id="第6关-查询供应了1000个以上零件的供应商名称">第6关 查询供应了1000个以上零件的供应商名称</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">USE mydata;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    SNAME</span><br><span class="line"><span class="keyword">FROM</span> S,SPJ</span><br><span class="line"><span class="keyword">WHERE</span> S.SNO <span class="operator">=</span> SPJ.SNO</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> SNAME</span><br><span class="line"><span class="keyword">HAVING</span> <span class="built_in">SUM</span>(QTY)<span class="operator">&gt;</span><span class="number">1000</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> SNAME <span class="keyword">DESC</span>;</span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br></pre></td></tr></table></figure><h1 id="第7关-统计p表中颜色为蓝色的零件个数-并指定该查询列的名称为-蓝色零件数">第7关 统计P表中颜色为蓝色的零件个数，并指定该查询列的名称为“蓝色零件数”</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">USE mydata;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    <span class="built_in">COUNT</span>(COLOR) <span class="string">&#x27;蓝色零件数&#x27;</span></span><br><span class="line"><span class="keyword">FROM</span> P</span><br><span class="line"><span class="keyword">WHERE</span> COLOR <span class="operator">=</span> <span class="string">&#x27;蓝&#x27;</span>;</span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br></pre></td></tr></table></figure><h1 id="第8关-查询p表中各零件的编号-名称及重量按85-计算后的信息-其中重量按85-计算后的查询列名改为-零件净重">第8关 查询P表中各零件的编号，名称及重量按85%计算后的信息，其中重量按85%计算后的查询列名改为“零件净重”</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">USE mydata;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    PNO,</span><br><span class="line">    PNAME,</span><br><span class="line">    WEIGHT <span class="operator">*</span> <span class="number">0.85</span> <span class="string">&#x27;零件净重&#x27;</span></span><br><span class="line"><span class="keyword">FROM</span> P</span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br></pre></td></tr></table></figure><h1 id="第9关-查询-s表status值大于20且小于50-或sname字段值的第一个字为-精-或第三个字为-益-或-民-的供应">第9关 查询 S表STATUS值大于20且小于50，或SNAME字段值的第一个字为“精”或第三个字为“益”或“民”的供应</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">USE mydata;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> S</span><br><span class="line"><span class="keyword">WHERE</span> (STATUS <span class="operator">&gt;</span> <span class="number">20</span> <span class="keyword">AND</span> STATUS <span class="operator">&lt;</span> <span class="number">50</span>)<span class="keyword">OR</span> (SNAME <span class="keyword">LIKE</span> <span class="string">&#x27;精%&#x27;</span> <span class="keyword">OR</span> SNAME <span class="keyword">LIKE</span> <span class="string">&#x27;__益&#x27;</span> <span class="keyword">OR</span> SNAME <span class="keyword">LIKE</span> <span class="string">&#x27;__民&#x27;</span>);</span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br></pre></td></tr></table></figure><h1 id="第10关-将spj表按qty值降序排列-再找出spj表中前6条记录-用limit-6">第10关 将SPJ表按QTY值降序排列，再找出SPJ表中前6条记录(用limit 6)</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">USE mydata;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line">SELEC <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> SPJ</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> QTY <span class="keyword">DESC</span></span><br><span class="line">LIMIT <span class="number">6</span></span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br></pre></td></tr></table></figure><h1 id="第11关-找出供应零件总数量不低于1000的供应商号码-及每个供应商供应的总数量-并且结果按总数量降序排列">第11关 找出供应零件总数量不低于1000的供应商号码，及每个供应商供应的总数量，并且结果按总数量降序排列</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">USE mydata;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    SNO,</span><br><span class="line">    <span class="built_in">SUM</span>(QTY) SUM_QTY</span><br><span class="line"><span class="keyword">FROM</span> SPJ</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> SNO</span><br><span class="line"><span class="keyword">HAVING</span> <span class="built_in">SUM</span>(QTY) <span class="operator">&gt;=</span><span class="number">1000</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> SUM_QTY <span class="keyword">DESC</span></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br></pre></td></tr></table></figure><h1 id="第12关-找出工程项目j1使用的各种零件的名称及其数量">第12关 找出工程项目J1使用的各种零件的名称及其数量</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">USE mydata;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    PNAME,</span><br><span class="line">    <span class="built_in">SUM</span>(QTY) SUM_QTY</span><br><span class="line"><span class="keyword">FROM</span> SPJ,P</span><br><span class="line"><span class="keyword">WHERE</span> SPJ.PNO <span class="operator">=</span> P.PNO <span class="keyword">AND</span> SPJ.JNO <span class="operator">=</span> <span class="string">&#x27;J1&#x27;</span></span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> PNAME</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> SUM_QTY <span class="keyword">DESC</span>;</span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br></pre></td></tr></table></figure><h1 id="第13关-求使用了300个及以上p1零件的工程名称">第13关 求使用了300个及以上P1零件的工程名称</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">USE mydata;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    JNAME</span><br><span class="line"><span class="keyword">FROM</span> J</span><br><span class="line"><span class="keyword">JOIN</span> SPJ <span class="keyword">USING</span>(JNO)</span><br><span class="line"><span class="keyword">WHERE</span> SPJ.PNO <span class="operator">=</span> <span class="string">&#x27;P1&#x27;</span></span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> JNAME</span><br><span class="line"><span class="keyword">HAVING</span>  <span class="built_in">SUM</span>(QTY) <span class="operator">&gt;</span> <span class="number">300</span>;</span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br></pre></td></tr></table></figure><h1 id="第14关-求各工程-名-使用的各城市供应的零件总数">第14关 求各工程（名）使用的各城市供应的零件总数</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">USE mydata;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    JNAME,</span><br><span class="line">    S.CITY,</span><br><span class="line">    <span class="built_in">SUM</span>(QTY) SUM_QTY</span><br><span class="line"><span class="keyword">FROM</span> SPJ</span><br><span class="line"><span class="keyword">JOIN</span> S <span class="keyword">USING</span>(SNO)</span><br><span class="line"><span class="keyword">JOIN</span> J <span class="keyword">USING</span>(JNO)</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> JNAME,S.CITY</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> JNAME <span class="keyword">DESC</span>,S.CITY <span class="keyword">DESC</span></span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br></pre></td></tr></table></figure><h1 id="第15关-用嵌套查询这样的工程：供给该工程的零件p3的平均供应量-大于其中一种供给工程j1的零件的最大供应量">第15关 用嵌套查询这样的工程：供给该工程的零件P3的平均供应量，大于其中一种供给工程J1的零件的最大供应量</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">USE mydata;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">SELECT</span> JNO</span><br><span class="line"><span class="keyword">FROM</span> (</span><br><span class="line">    <span class="keyword">SELECT</span> JNO,<span class="built_in">AVG</span>(QTY) JQ</span><br><span class="line">    <span class="keyword">FROM</span> SPJ</span><br><span class="line">    <span class="keyword">WHERE</span> PNO <span class="operator">=</span> <span class="string">&#x27;P3&#x27;</span></span><br><span class="line">    <span class="keyword">GROUP</span> <span class="keyword">BY</span> JNO</span><br><span class="line">) T1</span><br><span class="line"><span class="keyword">WHERE</span> JQ <span class="operator">&gt;</span><span class="keyword">ANY</span>(</span><br><span class="line">    <span class="keyword">SELECT</span> PQ</span><br><span class="line">    <span class="keyword">FROM</span>(</span><br><span class="line">        <span class="keyword">SELECT</span> <span class="built_in">MAX</span>(QTY) PQ</span><br><span class="line">        <span class="keyword">FROM</span> SPJ</span><br><span class="line">        <span class="keyword">WHERE</span> JNO <span class="operator">=</span><span class="string">&#x27;J1&#x27;</span></span><br><span class="line">        <span class="keyword">GROUP</span> <span class="keyword">BY</span> PNO</span><br><span class="line">    ) T2</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br></pre></td></tr></table></figure><h1 id="第16关-用链接查询这样的工程：供给该工程的零件p3的平均供应量-大于其中一种供给工程j1的零件的最大供应量">第16关 用链接查询这样的工程：供给该工程的零件P3的平均供应量，大于其中一种供给工程J1的零件的最大供应量</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">USE mydata;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> JNO</span><br><span class="line"><span class="keyword">FROM</span> (</span><br><span class="line">    <span class="keyword">SELECT</span> JNO,<span class="built_in">AVG</span>(QTY) JQ</span><br><span class="line">    <span class="keyword">FROM</span> SPJ</span><br><span class="line">    <span class="keyword">WHERE</span> PNO <span class="operator">=</span> <span class="string">&#x27;P3&#x27;</span></span><br><span class="line">    <span class="keyword">GROUP</span> <span class="keyword">BY</span> JNO</span><br><span class="line">) T1</span><br><span class="line"><span class="keyword">JOIN</span> (</span><br><span class="line">    <span class="keyword">SELECT</span> <span class="built_in">MAX</span>(QTY) PQ</span><br><span class="line">    <span class="keyword">FROM</span> SPJ</span><br><span class="line">    <span class="keyword">WHERE</span> JNO <span class="operator">=</span><span class="string">&#x27;J1&#x27;</span></span><br><span class="line">    <span class="keyword">GROUP</span> <span class="keyword">BY</span> PNO</span><br><span class="line">) T2</span><br><span class="line"><span class="keyword">ON</span> T1.JQ <span class="operator">&gt;</span> T2.PQ</span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br></pre></td></tr></table></figure><h1 id="第17关-查询这样的工程号：供应该工程零件p3的平均供应量-不小于工程j1使用各零件合计数量的最小值">第17关 查询这样的工程号：供应该工程零件P3的平均供应量，不小于工程J1使用各零件合计数量的最小值</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">USE mydata;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">SELECT</span> JNO</span><br><span class="line"><span class="keyword">FROM</span> (</span><br><span class="line">    <span class="keyword">SELECT</span> JNO,<span class="built_in">AVG</span>(QTY) JQ</span><br><span class="line">    <span class="keyword">FROM</span> SPJ</span><br><span class="line">    <span class="keyword">WHERE</span> PNO<span class="operator">=</span><span class="string">&#x27;P3&#x27;</span></span><br><span class="line">    <span class="keyword">GROUP</span> <span class="keyword">BY</span> JN</span><br><span class="line">) T1</span><br><span class="line"><span class="keyword">WHERE</span> JQ<span class="operator">&gt;=</span>(</span><br><span class="line">    <span class="keyword">SELECT</span> <span class="built_in">MIN</span>(PQ)</span><br><span class="line">    <span class="keyword">FROM</span> (</span><br><span class="line">        <span class="keyword">SELECT</span> <span class="built_in">SUM</span>(QTY) PQ</span><br><span class="line">        <span class="keyword">FROM</span> SPJ</span><br><span class="line">        <span class="keyword">WHERE</span> JNO <span class="operator">=</span> <span class="string">&#x27;J1&#x27;</span></span><br><span class="line">        <span class="keyword">GROUP</span> <span class="keyword">BY</span> PNO</span><br><span class="line">    ) T2</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>实验6 SQL的多表查询-2</title>
      <link href="/posts/48365/"/>
      <url>/posts/48365/</url>
      
        <content type="html"><![CDATA[<h1 id="第1关-查询每个选手的信息及其提交的解答信息-没做题的选手不显示">第1关 查询每个选手的信息及其提交的解答信息，没做题的选手不显示</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">USE `sqlexp<span class="operator">-</span>sztuoj`;</span><br><span class="line">#请在此处添加实现代码，在语句末尾加LIMIT <span class="number">50</span>，即可显示查询结果前<span class="number">50</span>条。</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> users u,solution s</span><br><span class="line"><span class="keyword">WHERE</span> u.user_id <span class="operator">=</span> s.user_id</span><br><span class="line">LIMIT <span class="number">50</span>;</span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br></pre></td></tr></table></figure><h1 id="第2关-查询做了1001题且耗时大于500-time-的选手信息">第2关 查询做了1001题且耗时大于500（time）的选手信息</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">USE `sqlexp<span class="operator">-</span>sztuoj`;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> u.user_id,u.reg_time,u.name</span><br><span class="line"><span class="keyword">FROM</span> users u,solution s</span><br><span class="line"><span class="keyword">WHERE</span> u.user_id <span class="operator">=</span> s.user_id <span class="keyword">AND</span> s.time<span class="operator">&gt;</span><span class="number">500</span> <span class="keyword">AND</span> s.problem_id <span class="operator">=</span> <span class="number">1001</span>;</span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br></pre></td></tr></table></figure><h1 id="第3关-查询所有选手信息及其提交的解答信息-没做题的选手也要显示">第3关 查询所有选手信息及其提交的解答信息，没做题的选手也要显示</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">USE `sqlexp<span class="operator">-</span>sztuoj`;</span><br><span class="line">#请在此处添加实现代码，在语句末尾加LIMIT <span class="number">50</span>，即可显示查询结果前<span class="number">50</span>条。</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> users u</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> solution s</span><br><span class="line">    <span class="keyword">ON</span> u.user_id <span class="operator">=</span> s.user_id</span><br><span class="line">LIMIT <span class="number">50</span>;</span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br></pre></td></tr></table></figure><h1 id="第4关-查询每个选手的信息-交的题目-和提交的结果-没做题的选手不显示">第4关 查询每个选手的信息、交的题目、和提交的结果，没做题的选手不显示</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">USE `sqlexp<span class="operator">-</span>sztuoj`;</span><br><span class="line">#请在此处添加实现代码，在语句末尾加LIMIT <span class="number">50</span>，即可显示查询结果前<span class="number">50</span>条。</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">SELECT</span> u.user_id,u.reg_time,u.name,s.problem_id,s.result</span><br><span class="line"><span class="keyword">FROM</span> users u</span><br><span class="line"><span class="keyword">JOIN</span> solution s</span><br><span class="line">    <span class="keyword">ON</span> u.user_id <span class="operator">=</span> s.user_id</span><br><span class="line">LIMIT <span class="number">50</span>;</span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br></pre></td></tr></table></figure><h1 id="第5关-用嵌套查询查找和problem-id为-1026-的题目属于同一个比赛的题目信息">第5关 用嵌套查询查找和problem_id为 1026 的题目属于同一个比赛的题目信息</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">USE `sqlexp<span class="operator">-</span>sztuoj`;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> problem p</span><br><span class="line"><span class="keyword">WHERE</span> problem_id <span class="keyword">IN</span>(</span><br><span class="line">    <span class="keyword">SELECT</span> problem_id</span><br><span class="line">    <span class="keyword">FROM</span> contest_problem</span><br><span class="line">    <span class="keyword">WHERE</span> contest_id <span class="keyword">IN</span>(</span><br><span class="line">        <span class="keyword">SELECT</span> contest_id</span><br><span class="line">        <span class="keyword">FROM</span> contest_problem</span><br><span class="line">        <span class="keyword">WHERE</span> problem_id <span class="operator">=</span> <span class="string">&#x27;1026&#x27;</span></span><br><span class="line">    )</span><br><span class="line">)</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> problem_id;</span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br></pre></td></tr></table></figure><h1 id="第6关-用连接查询查找和problem-id为-1026-的题目属于同一个比赛的题目信息">第6关 用连接查询查找和problem_id为 1026 的题目属于同一个比赛的题目信息</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">USE `sqlexp<span class="operator">-</span>sztuoj`;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> p.problem_id,title,description,hint,time_limit,memory_limit</span><br><span class="line"><span class="keyword">FROM</span> problem p,contest_problem cpA,contest_problem cpB</span><br><span class="line"><span class="keyword">WHERE</span> cpA.problem_id <span class="operator">=</span> <span class="number">1026</span> <span class="keyword">AND</span> cpA.contest_id <span class="operator">=</span> cpB.contest_id <span class="keyword">AND</span> cpB.problem_id <span class="operator">=</span> p.problem_id</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> p.problem_id</span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br></pre></td></tr></table></figure><h1 id="第7关-用-exists-实现查询做了-1032-号题的选手信息">第7关 用 EXISTS 实现查询做了 1032 号题的选手信息</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">USE `sqlexp<span class="operator">-</span>sztuoj`;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> users u</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">EXISTS</span>(</span><br><span class="line">    <span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line">    <span class="keyword">FROM</span> solution</span><br><span class="line">    <span class="keyword">WHERE</span> problem_id <span class="operator">=</span> <span class="number">1032</span> <span class="keyword">AND</span> u.user_id <span class="operator">=</span> user_id</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br></pre></td></tr></table></figure><h1 id="第8关-用not-exists实现查询没做-1032-号题的选手信息">第8关 用NOT EXISTS实现查询没做 1032 号题的选手信息</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">USE `sqlexp<span class="operator">-</span>sztuoj`;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> users u</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span>(</span><br><span class="line">    <span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line">    <span class="keyword">FROM</span> solution s</span><br><span class="line">    <span class="keyword">WHERE</span> problem_id <span class="operator">=</span> <span class="number">1032</span> <span class="keyword">AND</span> u.user_id <span class="operator">=</span> s.user_id</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br></pre></td></tr></table></figure><h1 id="第9关-用-exists-实现查询和problem-id为-1026-的题目属于同一个比赛的题目信息">第9关 用 EXISTS 实现查询和problem_id为 1026 的题目属于同一个比赛的题目信息</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">USE `sqlexp<span class="operator">-</span>sztuoj`;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> problem p</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">EXISTS</span>(</span><br><span class="line">    <span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line">    <span class="keyword">FROM</span> contest_problem cpA,contest_problem cpB</span><br><span class="line">    <span class="keyword">WHERE</span> cpA.problem_id <span class="operator">=</span> <span class="number">1026</span> <span class="keyword">AND</span> cpA.contest_id <span class="operator">=</span> cpB.contest_id <span class="keyword">AND</span> p.problem_id <span class="operator">=</span> cpB.problem_id</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br></pre></td></tr></table></figure><h1 id="第10关-用-not-exists-实现查询参与过所有比赛的选手信息">第10关 用 NOT EXISTS 实现查询参与过所有比赛的选手信息</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">USE `sqlexp<span class="operator">-</span>sztuoj`;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> users u</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span>(</span><br><span class="line">    <span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line">    <span class="keyword">FROM</span> contest c</span><br><span class="line">    <span class="keyword">WHERE</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span>(</span><br><span class="line">        <span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line">        <span class="keyword">FROM</span> solution s</span><br><span class="line">        <span class="keyword">WHERE</span> u.user_id <span class="operator">=</span> s.user_id <span class="keyword">AND</span> c.contest_id <span class="operator">=</span> s.contest_id</span><br><span class="line">    )</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>实验5 SQL的多表查询-1</title>
      <link href="/posts/43230/"/>
      <url>/posts/43230/</url>
      
        <content type="html"><![CDATA[<h1 id="第1关-等值连接：求s表和j表城市相同的等值连接-列顺序还是按照s-j表">第1关 等值连接：求S表和J表城市相同的等值连接(列顺序还是按照S、J表)</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">USE mydata;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">from</span> S,J</span><br><span class="line"><span class="keyword">WHERE</span> S.CITY <span class="operator">=</span> J.CITY</span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br></pre></td></tr></table></figure><h1 id="第2关-查询供应情况-并显示供应商-零件和工程三者的名称">第2关 查询供应情况，并显示供应商、零件和工程三者的名称</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">USE mydata;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">SELECT</span> SNAME,PNAME,JNAME,QTY</span><br><span class="line"><span class="keyword">FROM</span> SPJ</span><br><span class="line"><span class="keyword">JOIN</span> S <span class="keyword">USING</span> (SNO)</span><br><span class="line"><span class="keyword">JOIN</span> P <span class="keyword">USING</span>(PNO)</span><br><span class="line"><span class="keyword">JOIN</span> J <span class="keyword">USING</span>(JNO)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 第二种写法</span></span><br><span class="line"><span class="keyword">SELECT</span> SNAME,PNAME,JNAME,QTY</span><br><span class="line"><span class="keyword">FROM</span> SPJ</span><br><span class="line"><span class="keyword">JOIN</span> S <span class="keyword">ON</span> SPJ.SNO <span class="operator">=</span> S.SNO</span><br><span class="line"><span class="keyword">JOIN</span> P <span class="keyword">ON</span> SPJ.PNO <span class="operator">=</span> P.PNO</span><br><span class="line"><span class="keyword">JOIN</span> J <span class="keyword">ON</span> SPJ.JNO <span class="operator">=</span> J.JNO</span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br></pre></td></tr></table></figure><h1 id="第3关-找出上海厂商供应的所有零件号码">第3关 找出上海厂商供应的所有零件号码</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">USE mydata;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> PNO</span><br><span class="line"><span class="keyword">FROM</span> SPJ,S</span><br><span class="line"><span class="keyword">WHERE</span> SPJ.SNO <span class="operator">=</span> S.SNO <span class="keyword">AND</span> S.CITY <span class="operator">=</span> <span class="string">&#x27;上海&#x27;</span></span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br></pre></td></tr></table></figure><h1 id="第4关-找出使用上海产的零件的工程名称">第4关 找出使用上海产的零件的工程名称</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">USE mydata;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">SELECT</span> JNAME</span><br><span class="line"><span class="keyword">FROM</span> J</span><br><span class="line"><span class="keyword">WHERE</span> JNO <span class="keyword">IN</span>(</span><br><span class="line">    <span class="keyword">SELECT</span> JNO</span><br><span class="line">    <span class="keyword">FROM</span> SPJ,S</span><br><span class="line">    <span class="keyword">WHERE</span> SPJ.SNO <span class="operator">=</span> S.SNO <span class="keyword">AND</span> S.CITY <span class="operator">=</span> <span class="string">&#x27;上海&#x27;</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> JNAME <span class="keyword">DESC</span></span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br></pre></td></tr></table></figure><h1 id="第5关-找出没有使用天津产的零件的工程号码">第5关  找出没有使用天津产的零件的工程号码</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">USE mydata;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">SELECT</span> JNO</span><br><span class="line"><span class="keyword">FROM</span> J</span><br><span class="line"><span class="keyword">WHERE</span> JNO <span class="keyword">NOT</span> <span class="keyword">IN</span> (</span><br><span class="line">    <span class="keyword">SELECT</span> JNO</span><br><span class="line">    <span class="keyword">FROM</span> SPJ,S</span><br><span class="line">    <span class="keyword">WHERE</span> SPJ.SNO <span class="operator">=</span> S.SNO <span class="keyword">AND</span> S.CITY <span class="operator">=</span> <span class="string">&#x27;天津&#x27;</span></span><br><span class="line">);</span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br></pre></td></tr></table></figure><h1 id="第6关-求供应工程j1零件为红色的供应商号码sno">第6关 求供应工程J1零件为红色的供应商号码SNO</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">USE mydata;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">SELECT</span> SNO</span><br><span class="line"><span class="keyword">FROM</span> SPJ,P</span><br><span class="line"><span class="keyword">WHERE</span> SPJ.JNO <span class="operator">=</span> <span class="string">&#x27;J1&#x27;</span> <span class="keyword">AND</span> SPJ.PNO <span class="operator">=</span> P.PNO <span class="keyword">AND</span> P.COLOR <span class="operator">=</span> <span class="string">&#x27;红&#x27;</span>;</span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br></pre></td></tr></table></figure><h1 id="第7关-求没有使用天津供应商生产的红色零件的工程号-jno">第7关 求没有使用天津供应商生产的红色零件的工程号 JNO</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">USE mydata;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">SELECT</span> JNO</span><br><span class="line"><span class="keyword">FROM</span> J</span><br><span class="line"><span class="keyword">WHERE</span> JNO <span class="keyword">NOT</span> <span class="keyword">IN</span> (</span><br><span class="line">    <span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> JNO</span><br><span class="line">    <span class="keyword">FROM</span> SPJ,S,P</span><br><span class="line">    <span class="keyword">WHERE</span>  SPJ.SNO <span class="operator">=</span> S.SNO <span class="keyword">AND</span> SPJ.PNO <span class="operator">=</span> P.PNO <span class="keyword">AND</span></span><br><span class="line">        P.COLOR <span class="operator">=</span> <span class="string">&#x27;红&#x27;</span> <span class="keyword">AND</span> S.CITY <span class="operator">=</span> <span class="string">&#x27;天津&#x27;</span></span><br><span class="line">)</span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br></pre></td></tr></table></figure><h1 id="第8关-查询所有-红色-的15公斤及以上的零件名">第8关 查询所有“红色”的15公斤及以上的零件名</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">USE mydata;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">SELECT</span> PNAME</span><br><span class="line"><span class="keyword">FROM</span> P</span><br><span class="line"><span class="keyword">WHERE</span> COLOR <span class="operator">=</span> <span class="string">&#x27;红&#x27;</span> <span class="keyword">AND</span> WEIGHT <span class="operator">&gt;=</span> <span class="number">15</span>;</span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br></pre></td></tr></table></figure><h1 id="第9关-查询工程名称中含有-厂-字的工程明细">第9关 查询工程名称中含有“厂”字的工程明细</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">USE mydata;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> J</span><br><span class="line"><span class="keyword">WHERE</span> JNAME <span class="keyword">LIKE</span> <span class="string">&#x27;%厂&#x27;</span>;</span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>实验4 MySQL单表查询</title>
      <link href="/posts/43911/"/>
      <url>/posts/43911/</url>
      
        <content type="html"><![CDATA[<h1 id="第1关-在users表中新增一个用户-user-id为2019100904学号-name为-2019-物联网-李明">第1关 在users表中新增一个用户，user_id为2019100904学号，name为’2019-物联网-李明’</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">USE `sqlexp<span class="operator">-</span>sztuoj`;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">INSERT INTO</span> users(user_id,name)</span><br><span class="line"><span class="keyword">VALUES</span>(<span class="number">2019100904</span>,<span class="string">&#x27;2019-物联网-李明&#x27;</span>);</span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br><span class="line">#以下代码禁止删除</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> users <span class="keyword">WHERE</span> users.user_id <span class="operator">=</span> <span class="string">&#x27;2019100904&#x27;</span>;</span><br></pre></td></tr></table></figure><h1 id="第2关-在users表中更新用户-user-id为robot-2-的信息-name设为-机器人二号">第2关 在users表中更新用户 user_id为robot_2 的信息，name设为 ‘机器人二号’</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">USE `sqlexp<span class="operator">-</span>sztuoj`;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">UPDATE</span> users</span><br><span class="line"><span class="keyword">SET</span> name<span class="operator">=</span><span class="string">&#x27;机器人二号&#x27;</span></span><br><span class="line"><span class="keyword">WHERE</span> user_id<span class="operator">=</span><span class="string">&#x27;robot_2&#x27;</span>;</span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br><span class="line">#以下代码禁止删除</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> users <span class="keyword">WHERE</span> users.user_id <span class="operator">=</span> <span class="string">&#x27;robot_2&#x27;</span>;</span><br></pre></td></tr></table></figure><h1 id="第3关-将solution表中所有-problem-id-为1003-题目的解答结果-result-设为-6">第3关 将solution表中所有 problem_id 为1003 题目的解答结果（result）设为 6</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">USE `sqlexp<span class="operator">-</span>sztuoj`;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">UPDATE</span> solution</span><br><span class="line"><span class="keyword">SET</span> <span class="keyword">result</span><span class="operator">=</span><span class="number">6</span></span><br><span class="line"><span class="keyword">WHERE</span> problem_id<span class="operator">=</span><span class="number">1003</span>;</span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br><span class="line">#以下代码禁止删除</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> solution <span class="keyword">WHERE</span> solution.problem_id <span class="operator">=</span> <span class="number">1003</span>;</span><br></pre></td></tr></table></figure><h1 id="第4关-删除solution表中比赛contest-id-为1001的全部解答">第4关 删除solution表中比赛contest_id 为1001的全部解答</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">USE `sqlexp<span class="operator">-</span>sztuoj`;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> solution</span><br><span class="line"><span class="keyword">WHERE</span> contest_id<span class="operator">=</span><span class="number">1001</span>;</span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br><span class="line">#以下代码禁止删除</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> solution <span class="keyword">WHERE</span> solution.contest_id <span class="operator">=</span> <span class="number">1001</span>;</span><br></pre></td></tr></table></figure><h1 id="第5关-查询所有-contest-的-title-和-end-time">第5关 查询所有 contest 的 title 和 end_time</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">USE `sqlexp<span class="operator">-</span>sztuoj`;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">SELECT</span> title,end_time</span><br><span class="line"><span class="keyword">FROM</span> contest;</span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br></pre></td></tr></table></figure><h1 id="第6关-查询哪些选手的-user-id-提交过-solution-要求结果中-user-id-不重复">第6关 查询哪些选手的 user_id 提交过 solution，要求结果中 user_id 不重复</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">USE `sqlexp<span class="operator">-</span>sztuoj`;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> user_id</span><br><span class="line"><span class="keyword">FROM</span> solution;</span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br></pre></td></tr></table></figure><h1 id="第7关-查询-end-time-晚于-2020-11-21-17-30-00-的-contest-id">第7关 查询 end_time 晚于 ‘2020-11-21 17:30:00’ 的 contest_id</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">USE `sqlexp<span class="operator">-</span>sztuoj`;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">SELECT</span> contest_id <span class="keyword">FROM</span> contest</span><br><span class="line"><span class="keyword">WHERE</span> end_time<span class="operator">&gt;</span><span class="string">&#x27;2020-11-21 17:30:00&#x27;</span>;</span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br></pre></td></tr></table></figure><h1 id="第8关-查询-problem-id-在-1005-1009-之间的-problem-的-title">第8关 查询 problem_id 在 1005~1009 之间的 problem 的 title</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">USE `sqlexp<span class="operator">-</span>sztuoj`;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">SELECT</span> title <span class="keyword">FROM</span> problem</span><br><span class="line"><span class="keyword">WHERE</span> problem_id<span class="operator">&gt;=</span><span class="number">1005</span> <span class="keyword">and</span> problem_id<span class="operator">&lt;=</span><span class="number">1009</span>;</span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br></pre></td></tr></table></figure><h1 id="第9关-查询-language-不在-0-1-3-中的-solution-的-code-length">第9关 查询 language 不在 0、1、3 中的 solution 的 code_length</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">USE `sqlexp<span class="operator">-</span>sztuoj`;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">SELECT</span> code_length <span class="keyword">FROM</span> solution</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">language</span> <span class="keyword">NOT</span> <span class="keyword">IN</span> (<span class="number">0</span>,<span class="number">1</span>,<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br></pre></td></tr></table></figure><h1 id="第10关-查询2018级选手信息-user-id-为学号的用户前4位为年级">第10关 查询2018级选手信息（user_id 为学号的用户前4位为年级）</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">USE `sqlexp<span class="operator">-</span>sztuoj`;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> users</span><br><span class="line"><span class="keyword">WHERE</span> user_id <span class="keyword">LIKE</span> <span class="string">&#x27;2018%&#x27;</span></span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br></pre></td></tr></table></figure><h1 id="第11关-查询-生医-专业选手信息-name-中有-生医-的选手">第11关 查询’生医’专业选手信息（name 中有 ‘生医’ 的选手）</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">USE `sqlexp<span class="operator">-</span>sztuoj`;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> users</span><br><span class="line"><span class="keyword">WHERE</span> name <span class="keyword">LIKE</span> <span class="string">&#x27;%生医%&#x27;</span>;</span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br></pre></td></tr></table></figure><h1 id="第12关-查询不属于任何比赛的solution的-solution-id-和-in-date-contest-id-为-null">第12关 查询不属于任何比赛的solution的 solution_id 和 in_date（contest_id 为 NULL）</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">USE `sqlexp<span class="operator">-</span>sztuoj`;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">SELECT</span> solution_id,in_date <span class="keyword">FROM</span> solution</span><br><span class="line"><span class="keyword">WHERE</span> contest_id <span class="keyword">is</span> <span class="keyword">NULL</span>;</span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br></pre></td></tr></table></figure><h1 id="第13关-查询-result-为-6-且-problem-id大于1010-的-solution-id与language">第13关 查询 result 为 6 且 problem_id大于1010 的 solution_id与language</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">USE `sqlexp<span class="operator">-</span>sztuoj`;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">SELECT</span> solution_id,<span class="keyword">language</span> <span class="keyword">FROM</span> solution</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">result</span><span class="operator">=</span><span class="number">6</span> <span class="keyword">and</span> problem_id<span class="operator">&gt;</span><span class="number">1010</span>;</span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br></pre></td></tr></table></figure><h1 id="第14关-查询提交过solution的选手人数">第14关 查询提交过solution的选手人数</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">USE `sqlexp<span class="operator">-</span>sztuoj`;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="keyword">DISTINCT</span> user_id)</span><br><span class="line"><span class="keyword">FROM</span> solution;</span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br></pre></td></tr></table></figure><h1 id="第15关-查询耗内存-memory-最多的solution的内存消耗大小与-solution-id">第15关 查询耗内存（memory）最多的solution的内存消耗大小与 solution_id</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">USE `sqlexp<span class="operator">-</span>sztuoj`;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">SELECT</span> memory,solution_id <span class="keyword">FROM</span> solution</span><br><span class="line"><span class="keyword">WHERE</span> memory  <span class="keyword">IN</span></span><br><span class="line">(</span><br><span class="line">    <span class="keyword">SELECT</span> <span class="built_in">MAX</span>(memory)</span><br><span class="line">    <span class="keyword">FROM</span> solution</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br></pre></td></tr></table></figure><h1 id="第16关-查询每个题目的提交数">第16关 查询每个题目的提交数</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">USE `sqlexp<span class="operator">-</span>sztuoj`;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">SELECT</span> problem_id,<span class="built_in">COUNT</span>(problem_id)</span><br><span class="line"><span class="keyword">FROM</span> solution</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> problem_id;</span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br></pre></td></tr></table></figure><h1 id="第17关-查询提交数大于20的题目的题号">第17关 查询提交数大于20的题目的题号</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">USE `sqlexp<span class="operator">-</span>sztuoj`;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">SELECT</span> problem_id <span class="keyword">FROM</span> solution</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> problem_id</span><br><span class="line"><span class="keyword">HAVING</span> <span class="built_in">COUNT</span>(problem_id)<span class="operator">&gt;</span><span class="number">20</span>;</span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br></pre></td></tr></table></figure><h1 id="第18关-查找所有problem-id-为1001-的解答或contest-id-为空的解答">第18关 查找所有problem_id 为1001 的解答或contest_id 为空的解答</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">USE `sqlexp<span class="operator">-</span>sztuoj`;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> solution</span><br><span class="line"><span class="keyword">WHERE</span> problem_id<span class="operator">=</span><span class="number">1001</span> <span class="keyword">or</span> contest_id <span class="keyword">is</span> <span class="keyword">NULL</span>;</span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>实验3 MySQL的DDL语言</title>
      <link href="/posts/57811/"/>
      <url>/posts/57811/</url>
      
        <content type="html"><![CDATA[<h1 id="第1关-将p表中的所有红色零件的重量增加6">第1关 将P表中的所有红色零件的重量增加6</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">USE mydata;</span><br><span class="line"></span><br><span class="line"><span class="keyword">UPDATE</span> P</span><br><span class="line"><span class="keyword">set</span> WEIGHT<span class="operator">=</span>WEIGHT<span class="operator">+</span><span class="number">6</span></span><br><span class="line"><span class="keyword">WHERE</span> COLOR<span class="operator">=</span><span class="string">&#x27;红&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> P;</span><br></pre></td></tr></table></figure><h1 id="第2关-把p表中全部红色零件的颜色改成蓝色">第2关 把P表中全部红色零件的颜色改成蓝色</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">USE mydata;</span><br><span class="line"></span><br><span class="line"><span class="keyword">UPDATE</span> P</span><br><span class="line"><span class="keyword">SET</span> COLOR<span class="operator">=</span><span class="string">&#x27;蓝&#x27;</span></span><br><span class="line"><span class="keyword">WHERE</span> COLOR<span class="operator">=</span><span class="string">&#x27;红&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> P;</span><br></pre></td></tr></table></figure><h1 id="第3关-将spj表中由s5供给j4的零件p6改为由s3供应">第3关 将SPJ表中由S5供给J4的零件P6改为由S3供应</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">USE mydata;</span><br><span class="line"></span><br><span class="line"><span class="keyword">UPDATE</span> SPJ</span><br><span class="line"><span class="keyword">SET</span> SNO<span class="operator">=</span>&quot;S3&quot;</span><br><span class="line"><span class="keyword">WHERE</span> PNO<span class="operator">=</span>&quot;P6&quot; <span class="keyword">AND</span> JNO<span class="operator">=</span>&quot;J4&quot; <span class="keyword">AND</span> SNO<span class="operator">=</span>&quot;S5&quot;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> SPJ;</span><br></pre></td></tr></table></figure><h1 id="第4关-将spj表中所有天津供应商的qty属性值减少11-用子查询方式">第4关 将SPJ表中所有天津供应商的QTY属性值减少11（用子查询方式）</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">USE mydata;</span><br><span class="line"></span><br><span class="line"><span class="keyword">UPDATE</span> SPJ</span><br><span class="line"><span class="keyword">SET</span> QTY<span class="operator">=</span>QTY<span class="number">-11</span></span><br><span class="line"><span class="keyword">WHERE</span> SNO <span class="keyword">IN</span></span><br><span class="line">(</span><br><span class="line">    <span class="keyword">SELECT</span> SNO</span><br><span class="line">    <span class="keyword">FROM</span> S</span><br><span class="line">    <span class="keyword">WHERE</span> CITY<span class="operator">=</span><span class="string">&#x27;天津&#x27;</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> SPJ;</span><br></pre></td></tr></table></figure><h1 id="第5关-删除j表中的所有工程项目在天津的记录">第5关 删除J表中的所有工程项目在天津的记录</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">USE mydata;</span><br><span class="line"></span><br><span class="line"><span class="keyword">DELETE</span></span><br><span class="line"><span class="keyword">FROM</span> J</span><br><span class="line"><span class="keyword">WHERE</span> CITY<span class="operator">=</span><span class="string">&#x27;天津&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> J;</span><br></pre></td></tr></table></figure><h1 id="第6关-从spj表中删除供应商号是s2的记录">第6关 从SPJ表中删除供应商号是S2的记录</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">USE mydata;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">DELETE</span></span><br><span class="line"><span class="keyword">FROM</span> SPJ</span><br><span class="line"><span class="keyword">WHERE</span> SNO<span class="operator">=</span>&quot;S2&quot;;</span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br><span class="line">#以下代码禁止删除</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> SPJ;</span><br></pre></td></tr></table></figure><h1 id="第7关-从spj表中删除零件名称为螺丝刀的记录-用子查询方式">第7关 从SPJ表中删除零件名称为螺丝刀的记录（用子查询方式）</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">USE mydata;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">DELETE</span></span><br><span class="line"><span class="keyword">FROM</span> SPJ</span><br><span class="line"><span class="keyword">WHERE</span> PNO <span class="keyword">IN</span></span><br><span class="line">(</span><br><span class="line">    <span class="keyword">SELECT</span> PNO</span><br><span class="line">    <span class="keyword">FROM</span> P</span><br><span class="line">    <span class="keyword">WHERE</span> PNAME<span class="operator">=</span>&quot;螺丝刀&quot;</span><br><span class="line">);  </span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br><span class="line">#以下代码禁止删除</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> SPJ;</span><br></pre></td></tr></table></figure><h1 id="第8关-删除p表中所有的记录">第8关 删除P表中所有的记录</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">USE mydata;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> P;</span><br><span class="line"> </span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br><span class="line">#以下代码禁止删除</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> P</span><br></pre></td></tr></table></figure><h1 id="第9关-请将-s2-j6-p4-200-插入供应情况关系表spj">第9关 请将(S2，J6，P4，200)插入供应情况关系表SPJ</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">USE mydata;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">INSERT</span></span><br><span class="line"><span class="keyword">INTO</span> SPJ(SNO,PNO,JNO,QTY)</span><br><span class="line"><span class="keyword">VALUES</span>(&quot;S2&quot;,&quot;P4&quot;,&quot;J6&quot;,<span class="number">200</span>);  </span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br><span class="line">#以下代码禁止删除</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> SPJ;</span><br></pre></td></tr></table></figure><h1 id="第10关-求供应工程j1零件的供应商号码sno">第10关 求供应工程J1零件的供应商号码SNO</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">USE mydata;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> SNO</span><br><span class="line"><span class="keyword">FROM</span> SPJ</span><br><span class="line"><span class="keyword">WHERE</span> JNO<span class="operator">=</span>&quot;J1&quot;;</span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br></pre></td></tr></table></figure><h1 id="第11关-求供应工程j1零件p1的供应商号码sno">第11关 求供应工程J1零件P1的供应商号码SNO</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">USE mydata;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">######### <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">SELECT</span> SNO</span><br><span class="line"><span class="keyword">FROM</span> SPJ</span><br><span class="line"><span class="keyword">WHERE</span> JNO<span class="operator">=</span>&quot;J1&quot; <span class="keyword">AND</span> PNO<span class="operator">=</span>&quot;P1&quot;;</span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br></pre></td></tr></table></figure><h1 id="第12关-找出所有供应商的姓名和所在城市">第12关 找出所有供应商的姓名和所在城市</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">USE mydata;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">SELECT</span> SNAME,CITY</span><br><span class="line"><span class="keyword">FROM</span> S</span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br></pre></td></tr></table></figure><h1 id="第13关-找出所有零件的名称-颜色-重量">第13关 找出所有零件的名称、颜色、重量</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">USE mydata;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">SELECT</span> PNAME,COLOR,WEIGHT</span><br><span class="line"><span class="keyword">FROM</span> P;</span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br></pre></td></tr></table></figure><h1 id="第14关-找出使用供应商s1所供应零件的工程号码">第14关 找出使用供应商S1所供应零件的工程号码</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">USE mydata;</span><br><span class="line">#请在此处添加实现代码</span><br><span class="line">########## <span class="keyword">Begin</span> ##########</span><br><span class="line"><span class="keyword">SELECT</span> JNO</span><br><span class="line"><span class="keyword">FROM</span> SPJ</span><br><span class="line"><span class="keyword">WHERE</span> SNO<span class="operator">=</span>&quot;S1&quot;;</span><br><span class="line"></span><br><span class="line">########## <span class="keyword">End</span> ##########</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>实验2 MySQL软件操作及建库建表建数据</title>
      <link href="/posts/33322/"/>
      <url>/posts/33322/</url>
      
        <content type="html"><![CDATA[<h1 id="第1关-创建数据库">第1关  创建数据库</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> DATABASE mydata;</span><br><span class="line"></span><br><span class="line"><span class="keyword">show</span> databases;</span><br></pre></td></tr></table></figure><h1 id="第2关-创建供应商表s-并插入数据">第2关 创建供应商表S，并插入数据</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">USE mydata;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE TABLE</span> S(</span><br><span class="line">   SNO <span class="type">CHAR</span>(<span class="number">2</span>),</span><br><span class="line">   SNAME <span class="type">VARCHAR</span>(<span class="number">5</span>),</span><br><span class="line">   STATUS <span class="type">INT</span>,</span><br><span class="line">   CITY <span class="type">CHAR</span>(<span class="number">2</span>)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">INSERT INTO</span> S <span class="keyword">VALUES</span>(<span class="string">&#x27;S1&#x27;</span>,<span class="string">&#x27;精益&#x27;</span>,<span class="number">20</span>,<span class="string">&#x27;天津&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> S <span class="keyword">VALUES</span>(<span class="string">&#x27;S2&#x27;</span>,<span class="string">&#x27;盛锡&#x27;</span>,<span class="number">10</span>,<span class="string">&#x27;北京&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> S <span class="keyword">VALUES</span>(<span class="string">&#x27;S3&#x27;</span>,<span class="string">&#x27;东方红&#x27;</span>,<span class="number">30</span>,<span class="string">&#x27;北京&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> S <span class="keyword">VALUES</span>(<span class="string">&#x27;S4&#x27;</span>,<span class="string">&#x27;丰泰盛&#x27;</span>,<span class="number">20</span>,<span class="string">&#x27;天津&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> S <span class="keyword">VALUES</span>(<span class="string">&#x27;S5&#x27;</span>,<span class="string">&#x27;为民&#x27;</span>,<span class="number">30</span>,<span class="string">&#x27;上海&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> S;</span><br></pre></td></tr></table></figure><h1 id="第3关-创建零件表p-并插入数据">第3关 创建零件表P，并插入数据</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">USE mydata;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE TABLE</span> P(</span><br><span class="line">    PNO <span class="type">CHAR</span>(<span class="number">2</span>),</span><br><span class="line">    PNAME <span class="type">VARCHAR</span>(<span class="number">5</span>),</span><br><span class="line">    COLOR <span class="type">CHAR</span>(<span class="number">1</span>),</span><br><span class="line">    WEIGHT <span class="type">INT</span></span><br><span class="line"></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT INTO</span> P <span class="keyword">VALUES</span> (<span class="string">&#x27;P1&#x27;</span>,<span class="string">&#x27;螺母&#x27;</span>,<span class="string">&#x27;红&#x27;</span>,<span class="number">12</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> P <span class="keyword">VALUES</span> (<span class="string">&#x27;P2&#x27;</span>,<span class="string">&#x27;螺栓&#x27;</span>,<span class="string">&#x27;绿&#x27;</span>,<span class="number">17</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> P <span class="keyword">VALUES</span> (<span class="string">&#x27;P3&#x27;</span>,<span class="string">&#x27;螺丝刀&#x27;</span>,<span class="string">&#x27;蓝&#x27;</span>,<span class="number">14</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> P <span class="keyword">VALUES</span> (<span class="string">&#x27;P4&#x27;</span>,<span class="string">&#x27;螺丝刀&#x27;</span>,<span class="string">&#x27;红&#x27;</span>,<span class="number">14</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> P <span class="keyword">VALUES</span> (<span class="string">&#x27;P5&#x27;</span>,<span class="string">&#x27;凸轮&#x27;</span>,<span class="string">&#x27;蓝&#x27;</span>,<span class="number">40</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> P <span class="keyword">VALUES</span> (<span class="string">&#x27;P6&#x27;</span>,<span class="string">&#x27;齿轮&#x27;</span>,<span class="string">&#x27;红&#x27;</span>,<span class="number">30</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> P;</span><br></pre></td></tr></table></figure><h1 id="第4关-创建工程项目表j-并插入数据">第4关 创建工程项目表J，并插入数据</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">USE mydata;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE TABLE</span> J(</span><br><span class="line">    JNO <span class="type">CHAR</span>(<span class="number">2</span>),</span><br><span class="line">    JNAME <span class="type">VARCHAR</span>(<span class="number">5</span>),</span><br><span class="line">    CITY <span class="type">CHAR</span>(<span class="number">2</span>)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">INSERT INTO</span> J <span class="keyword">VALUES</span> (<span class="string">&#x27;J1&#x27;</span>,<span class="string">&#x27;三建&#x27;</span>,<span class="string">&#x27;北京&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> J <span class="keyword">VALUES</span> (<span class="string">&#x27;J2&#x27;</span>,<span class="string">&#x27;一汽&#x27;</span>,<span class="string">&#x27;长春&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> J <span class="keyword">VALUES</span> (<span class="string">&#x27;J3&#x27;</span>,<span class="string">&#x27;弹簧厂&#x27;</span>,<span class="string">&#x27;天津&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> J <span class="keyword">VALUES</span> (<span class="string">&#x27;J4&#x27;</span>,<span class="string">&#x27;造船厂&#x27;</span>,<span class="string">&#x27;天津&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> J <span class="keyword">VALUES</span> (<span class="string">&#x27;J5&#x27;</span>,<span class="string">&#x27;机车厂&#x27;</span>,<span class="string">&#x27;唐山&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> J <span class="keyword">VALUES</span> (<span class="string">&#x27;J6&#x27;</span>,<span class="string">&#x27;无线电厂&#x27;</span>,<span class="string">&#x27;常州&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> J <span class="keyword">VALUES</span> (<span class="string">&#x27;J7&#x27;</span>,<span class="string">&#x27;半导体厂&#x27;</span>,<span class="string">&#x27;南京&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> J;</span><br></pre></td></tr></table></figure><h1 id="第5关-创建供应情况表spj-并插入数据">第5关 创建供应情况表SPJ，并插入数据</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">USE mydata;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE TABLE</span> SPJ(</span><br><span class="line">    SNO <span class="type">CHAR</span>(<span class="number">2</span>),</span><br><span class="line">    PNO <span class="type">CHAR</span>(<span class="number">2</span>),</span><br><span class="line">    JNO <span class="type">CHAR</span>(<span class="number">2</span>),</span><br><span class="line">    QTY <span class="type">INT</span></span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT INTO</span> SPJ(SNO,PNO,JNO,QTY)</span><br><span class="line"><span class="keyword">VALUES</span>(<span class="string">&#x27;S1&#x27;</span>, <span class="string">&#x27;P1&#x27;</span>, <span class="string">&#x27;J1&#x27;</span>, <span class="number">200</span>),</span><br><span class="line">    (<span class="string">&#x27;S1&#x27;</span>, <span class="string">&#x27;P1&#x27;</span>, <span class="string">&#x27;J3&#x27;</span>, <span class="number">100</span>),</span><br><span class="line">    (<span class="string">&#x27;S1&#x27;</span>, <span class="string">&#x27;P1&#x27;</span>, <span class="string">&#x27;J4&#x27;</span>, <span class="number">700</span>),</span><br><span class="line">    (<span class="string">&#x27;S1&#x27;</span>, <span class="string">&#x27;P2&#x27;</span>, <span class="string">&#x27;J2&#x27;</span>, <span class="number">100</span>),</span><br><span class="line">    (<span class="string">&#x27;S2&#x27;</span>, <span class="string">&#x27;P3&#x27;</span>, <span class="string">&#x27;J1&#x27;</span>, <span class="number">400</span>),</span><br><span class="line">    (<span class="string">&#x27;S2&#x27;</span>, <span class="string">&#x27;P3&#x27;</span>, <span class="string">&#x27;J2&#x27;</span>, <span class="number">200</span>),</span><br><span class="line">    (<span class="string">&#x27;S2&#x27;</span>, <span class="string">&#x27;P3&#x27;</span>, <span class="string">&#x27;J4&#x27;</span>, <span class="number">500</span>),</span><br><span class="line">    (<span class="string">&#x27;S2&#x27;</span>, <span class="string">&#x27;P3&#x27;</span>, <span class="string">&#x27;J5&#x27;</span>, <span class="number">400</span>),</span><br><span class="line">    (<span class="string">&#x27;S2&#x27;</span>, <span class="string">&#x27;P5&#x27;</span>, <span class="string">&#x27;J1&#x27;</span>, <span class="number">400</span>),</span><br><span class="line">    (<span class="string">&#x27;S2&#x27;</span>, <span class="string">&#x27;P5&#x27;</span>, <span class="string">&#x27;J2&#x27;</span>, <span class="number">100</span>),</span><br><span class="line">    (<span class="string">&#x27;S3&#x27;</span>, <span class="string">&#x27;P1&#x27;</span>, <span class="string">&#x27;J1&#x27;</span>, <span class="number">200</span>),</span><br><span class="line">    (<span class="string">&#x27;S3&#x27;</span>, <span class="string">&#x27;P3&#x27;</span>, <span class="string">&#x27;J1&#x27;</span>, <span class="number">200</span>),</span><br><span class="line">    (<span class="string">&#x27;S4&#x27;</span>, <span class="string">&#x27;P5&#x27;</span>, <span class="string">&#x27;J1&#x27;</span>, <span class="number">100</span>),</span><br><span class="line">    (<span class="string">&#x27;S4&#x27;</span>, <span class="string">&#x27;P6&#x27;</span>, <span class="string">&#x27;J3&#x27;</span>, <span class="number">300</span>),  </span><br><span class="line">    (<span class="string">&#x27;S4&#x27;</span>, <span class="string">&#x27;P6&#x27;</span>, <span class="string">&#x27;J4&#x27;</span>, <span class="number">200</span>),</span><br><span class="line">    (<span class="string">&#x27;S5&#x27;</span>, <span class="string">&#x27;P2&#x27;</span>, <span class="string">&#x27;J4&#x27;</span>, <span class="number">100</span>),</span><br><span class="line">    (<span class="string">&#x27;S5&#x27;</span>, <span class="string">&#x27;P3&#x27;</span>, <span class="string">&#x27;J1&#x27;</span>, <span class="number">200</span>),</span><br><span class="line">    (<span class="string">&#x27;S5&#x27;</span>, <span class="string">&#x27;P6&#x27;</span>, <span class="string">&#x27;J2&#x27;</span>, <span class="number">200</span>),</span><br><span class="line">    (<span class="string">&#x27;S5&#x27;</span>, <span class="string">&#x27;P6&#x27;</span>, <span class="string">&#x27;J4&#x27;</span>, <span class="number">500</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> SPJ;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OS报告</title>
      <link href="/posts/205686455/"/>
      <url>/posts/205686455/</url>
      
        <content type="html"><![CDATA[<p><a href="https://pan.baidu.com/share/init?surl=dp9Thx6mB8kHrWhWw2OHYw&amp;pwd=yaka">资料下载请点此处</a></p><p>操作系统的实验是基于linux系统，多数同学都是使用windows系统，此时需要安装Vmware应用来使用虚拟机，建议linux系统的版本为Ubuntu22，过于新的版本会存在一定的bug。</p><p>24年春季学期操作系统的报告内容及相关复习资料已存在网盘链接中，有需要的同学可以自行下载。<br>网盘中还存放Vmware安装包，激活密钥以及Ubuntu22的镜像。</p><p>推荐网课：<a href="https://www.bilibili.com/video/BV1qd4y177eA/?spm_id_from=333.337.search-card.all.click&amp;vd_source=7ea8b289c9b1077782b6b55d6b14d8fc">操作系统原理期末速成不挂科主攻大题_哔哩哔哩_bilibili</a></p>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 操作系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/posts/16107/"/>
      <url>/posts/16107/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="quick-start">Quick Start</h2><h3 id="create-a-new-post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="run-server">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="generate-static-files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="deploy-to-remote-sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>计网Chapter6</title>
      <link href="/posts/314979998/"/>
      <url>/posts/314979998/</url>
      
        <content type="html"><![CDATA[<h2 id="1-应用层概述">1.应用层概述</h2><p>应用层：计算机网络体系结构的最顶层，设计和建立计算机网络的最终目的<br>1. 早期基于文本的应用：电子邮件，远程登录，文件传输，新闻组<br>2. 20世纪90年代出现的万维网WWW<br>3. 即时通信，P2P文件共享及音视频应用</p><h2 id="2-客户-服务器方式-c-s方式-和对等方式-p2p方式">2.客户-服务器方式（C/S方式）和对等方式（P2P方式）</h2><p>开发一种新的网络应用首先应考虑的是<strong>网络应用程序在各种端系统上的组织方式和它们之间的关系</strong></p><h3 id="2-1-客户-服务器方式">2.1 客户-服务器方式</h3><p>客户和服务器是指通信中涉及的两个应用进程，而C/S方式描述的是进程之间服务和被服务的关系<br><strong>客户是服务的请求方，服务器是服务的提供方。</strong><br><strong>服务器总是处于运行状态，并等待客户的服务请求。</strong><br>基于C/S方式的应用服务通常是<strong>服务集中型</strong><br>而通常会出现一台服务器无法给多台客户机提供服务的情况，为此，常用计算机群集构建一个强大的虚拟服务器</p><h3 id="2-2对等方式">2.2对等方式</h3><p>没有固定的服务请求者和服务提供者<br>常见的P2P应用：P2P文件共享，即时通信等<br>基于P2P的应用通常是服务分散型，其可扩展性非常高，系统性能不会因为规模增大而降低</p><h2 id="3-动态主机配置协议dhcp">3.动态主机配置协议DHCP</h2><p>DHCP提供了一种即插即用联网机制，<strong>允许一台计算机加入新网络时可以自动获取IP地址等网络信息而不用手工参与</strong></p><p>DHCP发送的报文类型：</p><ol><li>DHCP DISCOVER：DHCP发现报文</li><li>DHCP REQUEST：DHCP请求报文</li><li>DHCP NACK：DHCP否认报文</li><li>DHCP OFFER：DHCP提供报文</li><li>DHCP ACK：DHCP确认报文</li><li>DHCP RELEASE：DHCP释放报文<br><img src="https://raw.githubusercontent.com/crayz-l/Learning_picgo/main/img/%E8%AE%A1%E7%BD%91chapter6.3-1" alt="image.png"></li></ol><p>DHCP在运输层使用UDP协议封装</p><ol><li>DHCP客户的UDP端口号为68</li><li>DHCP服务器的UDP端口号为67</li></ol><p>DHCP客户未获取IP地址前的地址为0.0.0.0</p><p>DHCP中继代理：给路由器配置DHCP服务器的IP地址，由路由器代替主机请求获取IP地址，以减少网络中的DHCP服务器数量</p><h2 id="4-域名系统dns">4.域名系统DNS</h2><p>定义：Internet使用的命名系统，将便于人们记忆，具有特定含义的网址转换为便于机器处理的IP地址</p><p>Internet采用层次树状结构的域名结构<br>···.三级域名.二级域名.顶级域名<br>顶级域名TLD的分类：</p><ol><li>国家顶级域名nTLD<ol><li>如：cn表示中国，us表示美国，uk表示英国</li><li>国家顶级域名下注册的二级域名由该国家自行确定<ul><li>我国二级域名分类：<ul><li>类别域名：<ul><li>ac（科研机构）</li><li>com（工商、金融等企业）</li><li>edu（教育机构）</li><li>gov（政府部门）</li><li>net（提供网络服务的机构）</li><li>mil（军事机构）</li><li>org（非营利性组织）</li></ul></li><li>行政区域名：共34个</li></ul></li></ul></li></ol></li><li>通用顶级域名gTLD<ol><li>com：公司企业</li><li>net：网络服务机构</li><li>int：国际组织</li><li>org：非营利性组织</li><li>edu：美国教育机构</li><li>gov：美国政府部门</li><li>mil：美国军事部门</li></ol></li><li>反向域arpa<br>用于反向域名解析，IP地址-&gt;域名</li></ol><p>DNS（分布式系统）使用分布在各地的域名服务器实现域名到IP地址的转换<br>域名服务器的类型：<br>1. 根域名服务器<br>根域名服务器通常并不直接对域名进行解析，而是返回该域名所属顶级域名的顶级域名服务器的IP地址<br>2. 顶级域名服务器<br>管理在该顶级域名服务器注册的所有二级域名<br>3. 权限域名服务器<br>管理某个区域的域名<br>4. 本地域名服务器/默认域名服务器<br>作为代理，将主机发送的报文转发到上述域名服务器</p><p>域名解析的两种查询方式</p><ol><li>递归查询<br>从主机开始逐级向权限域名服务器发送查询<br><img src="https://raw.githubusercontent.com/crayz-l/Learning_picgo/main/img/%E8%AE%A1%E7%BD%91chapter6.4-1" alt="image.png"></li><li>迭代查询<br>由主机向本地域名服务器发送递归查询，而本地域名服务器逐个向上级域名服务器发送查询请求<br><img src="https://raw.githubusercontent.com/crayz-l/Learning_picgo/main/img/%E8%AE%A1%E7%BD%91chapter6.4-2" alt="image.png"></li></ol><p>为提高查询效率，域名服务器和主机都采用了高速缓存。<br>如果在本人使用的客户机发送网址请求已有人发送过同样的请求，域名服务器会暂时记录在高速缓存中，而当有相同请求发送到域名服务器后，本地域名服务器不用再次查询，而是直接将对应的IP地址发送到客户机</p><p>DNS使用UDP协议，端口号为53</p><h2 id="5-文件传送协议ftp">5.文件传送协议FTP</h2><p>文件传送协议FTP是Internet使用最广泛的文件传送协议，采用C/S方式</p><ul><li>提供交互式访问，允许客户指明文件类型和格式，且允许文件具有存取权限</li><li>屏蔽各计算机系统的细节，适用于异构网络中任意计算机传送文件</li></ul><p>基本工作原理：FTP客户和服务器之间建立两个并行的TCP连接</p><ol><li>控制连接，整个会话期间一直打开，传送FTP相关控制命令</li><li>数据连接，用于文件传输，传输文件时打开，结束则关闭</li><li>默认情况下，FTP服务器使用TCP 21端口进行控制连接，TCP 20端口进行数据连接。但是否使用TCP 20端口取决于FTP是否是主动方式，若是被动方式，则由服务器和和客户自行协商<br><img src="https://raw.githubusercontent.com/crayz-l/Learning_picgo/main/img/%E8%AE%A1%E7%BD%91chapter6.5-1" alt="image.png"></li></ol><h2 id="6-电子邮件">6.电子邮件</h2><p>电子邮件（E-mail），Internet早期的应用，采用C/S方式<br>主要组成构件：</p><ol><li>用户代理<br>用户与电子邮件系统的接口，又称电子邮件客户端软件</li><li>邮件服务器<br>电子邮件系统的基础设施，用于发送和接收邮件</li><li>电子邮件所需协议<ol><li>发送协议SMTP<ol><li>基于TCP连接，端口为25</li><li>只能传送ASCII码文本</li><li>用于用户代理到邮件服务器以及邮件服务器之间的邮件发送<br><img src="https://raw.githubusercontent.com/crayz-l/Learning_picgo/main/img/%E8%AE%A1%E7%BD%91chapter6.6-1" alt="image.png"></li><li>为了解决非ASCII码文本传输的问题，采用多用途因特网邮件扩展MIME进行转换</li></ol></li><li>读取协议：<ol><li>邮局协议POP3<br>简单，功能有限，只能以下载并删除（or保存）从服务器下载到用户计算机，不允许用户在服务器上管理邮件</li><li>因特网邮件访问协议IMAP<br>用户可以在自己计算机管理服务器中的邮件</li></ol></li></ol></li></ol><p>基于万维网WWW的电子邮件：</p><ul><li>通过浏览器登录服务器万维网网站即可管理，收发和阅读电子邮件</li><li>这种方式在用户和服务器之间使用HTTP超文本传送协议，服务器和服务器之间还是SMTP协议</li></ul><h2 id="7-万维网www">7.万维网WWW</h2><p>WWW：一个大规模的、联机式的信息储藏所，运行在Internet上的分布式应用</p><p>浏览器的重要部分：渲染引擎（浏览器内核）</p><p>统一资源定位符URL：Internet上任何种类“资源”的位置<br>格式：&lt;协议&gt;://&lt;主机&gt;:&lt;端口&gt;/&lt;路径&gt;</p><p>万维网文档（前端）：</p><ol><li>HTML：超文本标记语言</li><li>css：层叠样式表</li><li>JavaScript：脚本语言</li></ol><p>超文本传输协议HTTP：</p><ol><li>HTTP的版本<ol><li>HTTP/1.0：<ol><li>非持续连接，每请求一次都要建立连接，收到响应就关闭</li></ol></li><li>HTTP/1.1：<ol><li>持续连接，响应之后仍然保持连接；</li><li>流水线，收到HTTP响应报文前可持续发送请求报文</li></ol></li></ol></li><li>HTTP报文：<ol><li>请求报文<br><img src="https://raw.githubusercontent.com/crayz-l/Learning_picgo/main/img/%E8%AE%A1%E7%BD%91chapter6.7-1" alt="image.png"></li><li>响应报文<br><img src="https://raw.githubusercontent.com/crayz-l/Learning_picgo/main/img/%E8%AE%A1%E7%BD%91chapter6.7-2" alt="image.png"><br>状态码（5大类33种）：<ol><li>1xx表示通知信息，如请求收到or正在处理</li><li>2xx表示成功</li><li>3xx表示重定向，即完成请求还必须采取进一步行动</li><li>4xx表示客户差错</li><li>5xx表示服务器差错</li></ol></li></ol></li></ol><p>Cookie：对无状态的HTTP进行状态化的技术。<br>可以让万维网服务器记住用户，无需用户主动提供用户标识信息。下次访问时可以不用重复识别</p><p>Web缓存：可位于客户机or中间系统，位于中间系统上的又称代理服务器。<br>当新请求到达时，若发现这个请求与暂时存放的请求相同，就发送暂存的响应，而无需按照URL再次访问</p>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计网Chapter5</title>
      <link href="/posts/2345625380/"/>
      <url>/posts/2345625380/</url>
      
        <content type="html"><![CDATA[<h2 id="1-运输层概述">1.运输层概述</h2><p>运输层的任务：为运行在不同主机上的应用进程提供直接的通信服务</p><p>运输层主要使用的两种协议：</p><ol><li>面向连接的TCP</li><li>无连接的UDP</li></ol><h2 id="2-端口号-复用与分用的概念">2.端口号、复用与分用的概念</h2><p>TCP/IP体系的运输层使用<strong>端口号</strong>区分应用层的不同应用进程：</p><ul><li>端口号：占16比特，取值范围为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn><mo>−</mo><mn>65535</mn></mrow><annotation encoding="application/x-tex">0-65535</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">6</span><span class="mord">5</span><span class="mord">5</span><span class="mord">3</span><span class="mord">5</span></span></span></span><ul><li>熟知端口号：0~1023，被应用在TCP/IP体系的一些重要应用协议，如：<ul><li>FTP：21/20</li><li>HTTP：80</li><li>DNS：53</li></ul></li><li>登记端口号：1024~49151，为没有熟知端口号的应用程序使用</li><li>短暂端口号：49152~65535，留给客户进程选择暂时使用。通信结束后，可供其他进程使用</li></ul></li><li>端口号只具有本地意义，不同计算机中的相同端口号没有联系</li></ul><p>发送方的复用和接收方的分用<br><img src="https://raw.githubusercontent.com/crayz-l/Learning_picgo/main/img/%E8%AE%A1%E7%BD%91chapter5.2-1" alt="image.png"></p><p>TCP/IP体系的应用层常用协议所使用的运输层熟知端口号<br><img src="https://raw.githubusercontent.com/crayz-l/Learning_picgo/main/img/%E8%AE%A1%E7%BD%91chapter5.2-2" alt="image.png"></p><p>UDP协议：</p><ol><li>RIP：520</li><li>DNS：53</li><li>TFTP：69</li><li>SNMP：161</li><li>DHCP：67/68<br>TCP协议：</li><li>SMTP：25</li><li>FTP：21/20</li><li>BGP：179</li><li>HTTP：80</li><li>HTTPS：443<br>在网络层中，无论UDP还是TCP都用IP协议封装，UDP的协议字段为17，TCP的为6</li></ol><h2 id="3-udp和tcp的对比">3.UDP和TCP的对比</h2><p><img src="https://raw.githubusercontent.com/crayz-l/Learning_picgo/main/img/%E8%AE%A1%E7%BD%91chapter5.3-1" alt="image.png"></p><table><thead><tr><th style="text-align:center">行为</th><th>UDP</th><th>TCP</th></tr></thead><tbody><tr><td style="text-align:center">连接方式</td><td>无连接</td><td>面向连接</td></tr><tr><td style="text-align:center">通信</td><td>支持一对一，一对多，多对一和多对多交互通信<img src="https://raw.githubusercontent.com/crayz-l/Learning_picgo/main/img/%E8%AE%A1%E7%BD%91chapter5.3-2" alt="image.png"><br></td><td>一对一通信<img src="https://raw.githubusercontent.com/crayz-l/Learning_picgo/main/img/%E8%AE%A1%E7%BD%91chapter5.3-3" alt="image.png"><br></td></tr><tr><td style="text-align:center">对报文的处理</td><td>对应用层交付的报文直接打包<img src="https://raw.githubusercontent.com/crayz-l/Learning_picgo/main/img/%E8%AE%A1%E7%BD%91chapter5.3-4" alt="image.png"><br></td><td>以字节流传输<img src="https://raw.githubusercontent.com/crayz-l/Learning_picgo/main/img/%E8%AE%A1%E7%BD%91chapter5.3-5" alt="image.png"><br></td></tr><tr><td style="text-align:center">传输类型</td><td>尽最大努力交付，不可靠传输<img src="https://raw.githubusercontent.com/crayz-l/Learning_picgo/main/img/%E8%AE%A1%E7%BD%91chapter5.3-6" alt="image.png"><br></td><td>可靠传输，使用流量控制和拥塞控制<img src="https://raw.githubusercontent.com/crayz-l/Learning_picgo/main/img/%E8%AE%A1%E7%BD%91chapter5.3-7" alt="image.png"><br><br></td></tr><tr><td style="text-align:center">首部</td><td>首部开销小，仅8字节<img src="https://raw.githubusercontent.com/crayz-l/Learning_picgo/main/img/%E8%AE%A1%E7%BD%91chapter5.3-8" alt="image.png"><br></td><td>首部最小20字节，最大60字节<img src="https://raw.githubusercontent.com/crayz-l/Learning_picgo/main/img/%E8%AE%A1%E7%BD%91chapter5.3-9" alt="image.png"><br></td></tr></tbody></table><h2 id="4-tcp的流量控制">4.TCP的流量控制</h2><p>流量控制：使发送方的发送速率不要过快，让接收方来得及接收</p><p>滑动窗口机制作为流量控制的体现</p><ol><li>TCP接收方通过接收窗口来限制发送窗口的大小<br><strong>通过画图来体会发送窗口的变化</strong><br><img src="https://raw.githubusercontent.com/crayz-l/Learning_picgo/main/img/%E8%AE%A1%E7%BD%91chapter5.4-1" alt="image.png"></li><li>接收到接收方的零窗口通知，启动持续计时器，超时后，发送零窗口探测报文<br><img src="https://raw.githubusercontent.com/crayz-l/Learning_picgo/main/img/%E8%AE%A1%E7%BD%91chapter5.4-2" alt="image.png"></li></ol><h2 id="5-tcp的拥塞控制">5.TCP的拥塞控制</h2><p>概念：</p><ol><li>拥塞：对网络中某一资源的需求超过该资源所能提供的可用部分，网络性能变差</li><li>出现拥塞而不控制，吞吐量将随输入负载的增大而下降</li></ol><p>拥塞控制算法：<br>前置条件：数据单向传送；接收方缓存空间足够大；以最大报文段的个数为单位<br>前置概念：<br>1. 发送方维护一个状态变量 拥塞窗口cwnd，<br>维护原则：网络出现拥塞，则cwnd减少，反之增大<br>网络拥塞的依据：出现超时重传<br>2.发送窗口 swnd=cwnd<br>3.慢开始门限ssthresh，判断算法切换的依据</p><ol><li>慢开始<br>在cwnd &lt; ssthresh时，cwnd呈现2的指数增长趋势</li><li>拥塞避免算法<ol><li>在cwnd &gt; ssthresh时，cwnd呈现线性增长</li><li>判断网络拥塞出现后，将ssthresh值更新为出现拥塞时cwnd的一半，且cwnd从1开始，重新执行慢开始算法</li></ol></li><li>快重传算法<br>基于网络并非拥塞但因为超时重传而误判拥塞出现的情况而研究出来的算法<br>原理：当发送方发送的报文段丢失后，会继续发送报文段，而接收方接收到失序到达的报文段，会重新发送对已丢失报文段的前一报文段的确认报文，提醒发送方接收方想要丢失的那一个报文段，当连续三次接收到相同的确认报文，发送方会重新发送丢失的报文段，而不必等到超时重传<br><img src="https://raw.githubusercontent.com/crayz-l/Learning_picgo/main/img/%E8%AE%A1%E7%BD%91chapter5.5-1" alt="image.png"></li><li>快恢复算法<br>基于快重传算法的前提下，连续收到三个连续重复的确认后，ssthresh值和cwnd值更新为当前窗口的一半，执行拥塞避免算法<br><img src="https://raw.githubusercontent.com/crayz-l/Learning_picgo/main/img/%E8%AE%A1%E7%BD%91chapter5.5-2" alt="image.png"><br><img src="https://raw.githubusercontent.com/crayz-l/Learning_picgo/main/img/%E8%AE%A1%E7%BD%91chapter5.5-3" alt="image.png"></li></ol><h2 id="6-tcp超时重传时间的选择">6.TCP超时重传时间的选择</h2><p>超时重传时间RTO应略大于往返时间RTT</p><ol><li>RTO 小于 RTT ：引起不必要的超时重传</li><li>RTO 远大于 RTT ：网络信道资源空闲，降低传输效率</li></ol><p>超时重传时间<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><mi>T</mi><mi>O</mi><mo>=</mo><mi>R</mi><mi>T</mi><msub><mi>T</mi><mi>S</mi></msub><mo>+</mo><mn>4</mn><mo>∗</mo><mi>R</mi><mi>T</mi><msub><mi>T</mi><mi>D</mi></msub></mrow><annotation encoding="application/x-tex">RTO=RTT_S+4*RTT_D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">4</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">D</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>加权平均往返时间</mtext><mi>R</mi><mi>T</mi><msub><mi>T</mi><mi>S</mi></msub><mo>=</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>α</mi><mo stretchy="false">)</mo><mo>∗</mo><mi>R</mi><mi>T</mi><msub><mi>T</mi><mrow><mi>S</mi><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>+</mo><mi>α</mi><mo>∗</mo><mtext>新</mtext><mi>R</mi><mi>T</mi><mi>T</mi><mtext>样本</mtext><mo separator="true">,</mo><mi>i</mi><mo>≥</mo><mn>2</mn><mo separator="true">,</mo><mn>0</mn><mo>≤</mo><mi>α</mi><mo>&lt;</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">加权平均往返时间RTT_S=(1-\alpha)*RTT_{Si-1}+\alpha*新RTT样本,i\geq2,0\leq\alpha&lt;1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord cjk_fallback">加</span><span class="mord cjk_fallback">权</span><span class="mord cjk_fallback">平</span><span class="mord cjk_fallback">均</span><span class="mord cjk_fallback">往</span><span class="mord cjk_fallback">返</span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">间</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="mord mathdefault mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord cjk_fallback">新</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord cjk_fallback">样</span><span class="mord cjk_fallback">本</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span><br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mi>R</mi><mi>T</mi><msub><mi>T</mi><mrow><mi>S</mi><mn>1</mn></mrow></msub><mo>=</mo><mi>R</mi><mi>T</mi><msub><mi>T</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">i=1,RTT_{S1}=RTT_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi><mtext>建议标准值是</mtext><mn>1</mn><mi mathvariant="normal">/</mi><mn>8</mn><mtext>，即</mtext><mi>α</mi><mo>=</mo><mn>0.125</mn></mrow><annotation encoding="application/x-tex">\alpha建议标准值是1/8，即\alpha=0.125</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mord cjk_fallback">建</span><span class="mord cjk_fallback">议</span><span class="mord cjk_fallback">标</span><span class="mord cjk_fallback">准</span><span class="mord cjk_fallback">值</span><span class="mord cjk_fallback">是</span><span class="mord">1</span><span class="mord">/</span><span class="mord">8</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">即</span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">1</span><span class="mord">2</span><span class="mord">5</span></span></span></span><br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><mi>T</mi><mi>T</mi><mtext>偏差的加权平均</mtext><mi>R</mi><mi>T</mi><msub><mi>T</mi><mi>D</mi></msub><mo>=</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>β</mi><mo stretchy="false">)</mo><mo>∗</mo><mi>R</mi><mi>T</mi><msub><mi>T</mi><mrow><mi>S</mi><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>+</mo><mi>β</mi><mo>∗</mo><mi mathvariant="normal">∣</mi><mi>R</mi><mi>T</mi><msub><mi>T</mi><mrow><mi>S</mi><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>−</mo><mtext>新</mtext><mi>R</mi><mi>T</mi><mi>T</mi><mtext>样本</mtext><mi mathvariant="normal">∣</mi><mo separator="true">,</mo><mi>i</mi><mo>≥</mo><mn>2</mn><mo separator="true">,</mo><mn>0</mn><mo>≤</mo><mi>β</mi><mo>&lt;</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">RTT偏差的加权平均RTT_D=(1-\beta)*RTT_{Si-1}+\beta*|RTT_{Si-1}-新RTT样本|,i\geq2,0\leq\beta&lt;1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord cjk_fallback">偏</span><span class="mord cjk_fallback">差</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">加</span><span class="mord cjk_fallback">权</span><span class="mord cjk_fallback">平</span><span class="mord cjk_fallback">均</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">D</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="mord mathdefault mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="mord mathdefault mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">新</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord cjk_fallback">样</span><span class="mord cjk_fallback">本</span><span class="mord">∣</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span><br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mi>R</mi><mi>T</mi><msub><mi>T</mi><mrow><mi>D</mi><mn>1</mn></mrow></msub><mo>=</mo><mi>R</mi><mi>T</mi><msub><mi>T</mi><mn>1</mn></msub><mi mathvariant="normal">/</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">i=1,RTT_{D1}=RTT_1/2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">D</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">/</span><span class="mord">2</span></span></span></span><br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>β</mi><mtext>建议标准值是</mtext><mn>1</mn><mi mathvariant="normal">/</mi><mn>8</mn><mo separator="true">,</mo><mtext>即</mtext><mi>β</mi><mo>=</mo><mn>0.25</mn></mrow><annotation encoding="application/x-tex">\beta建议标准值是1/8,即\beta=0.25</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="mord cjk_fallback">建</span><span class="mord cjk_fallback">议</span><span class="mord cjk_fallback">标</span><span class="mord cjk_fallback">准</span><span class="mord cjk_fallback">值</span><span class="mord cjk_fallback">是</span><span class="mord">1</span><span class="mord">/</span><span class="mord">8</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord cjk_fallback">即</span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">2</span><span class="mord">5</span></span></span></span></p><p>Karn算法：计算加权平均往返时间<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><mi>T</mi><msub><mi>T</mi><mi>S</mi></msub></mrow><annotation encoding="application/x-tex">RTT_S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>时，只要报文段重传，就不采用其往返时间样本<br>但Karn算法在时延变长的情况下会导致反复重传，故修正为<strong>超时重传发生后</strong>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>新</mtext><mi>R</mi><mi>T</mi><mi>O</mi><mo>=</mo><mn>2</mn><mo>∗</mo><mtext>旧</mtext><mi>R</mi><mi>T</mi><mi>O</mi></mrow><annotation encoding="application/x-tex">新RTO=2*旧RTO</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">新</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">旧</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span></span></span></span></p><h2 id="7-tcp可靠传输的实现">7.TCP可靠传输的实现</h2><ol><li>TCP基于<strong>以字节为单位的滑动窗口</strong>实现可靠传输<ol><li>发送方在未收到接受方的确认时，可将发送窗口内还未发送的数据全部发送出去</li><li>接收方只接收序号在发送窗口内的数据<br><img src="https://raw.githubusercontent.com/crayz-l/Learning_picgo/main/img/%E8%AE%A1%E7%BD%91chapter5.7-1" alt="image.png"></li></ol></li><li>同一时刻，发送方的发送窗口和接收方的接收窗口不一定一样大<ol><li>网络传送窗口值存在时间滞后</li><li>发送方可能根据网络的拥塞情况调整窗口大小</li></ol></li><li>对于不按序到达的数据，TCP一般临时存放在缓存中，等接收到缺少的前序数据再交付上层</li><li>TCP要求接收方有累积确认和捎带确认机制，减小传输开销。<ol><li>接收方不可以过分推迟确认，导致不必要的超时重传</li><li>TCP标准规定，确认推迟时间不应超过0.5s。</li></ol></li><li>TCP的通信是全双工通信，需要弄清窗口属于哪一方的发送或接收窗口</li></ol><h2 id="8-tcp的运输连接管理">8.TCP的运输连接管理</h2><p>TCP的运输连接的三个阶段：建立TCP连接，数据传送，释放TCP连接</p><h3 id="8-1-tcp-的连接建立">8.1 TCP 的连接建立</h3><p>TCP的连接建立要解决的问题：</p><ol><li>使TCP 双发知晓对方存在</li><li>协商参数（最大窗口值，是否使用窗口扩大选项等）</li><li>对运输实体资源（如缓存大小，连接表中的项目）进行分配<br>“三报文握手”建立连接<br><img src="https://raw.githubusercontent.com/crayz-l/Learning_picgo/main/img/%E8%AE%A1%E7%BD%91chapter5.8.1-1" alt="image.png"></li></ol><h3 id="8-2-tcp的连接释放">8.2 TCP的连接释放</h3><p>“四报文挥手”释放连接<br><img src="https://raw.githubusercontent.com/crayz-l/Learning_picgo/main/img/%E8%AE%A1%E7%BD%91chapter5.8.2-1" alt="image.png"></p><h2 id="9-tcp报文段的首部格式">9.TCP报文段的首部格式</h2><p><img src="https://raw.githubusercontent.com/crayz-l/Learning_picgo/main/img/%E8%AE%A1%E7%BD%91chapter5.9-1" alt="image.png"></p><ol><li><em><strong>源端口、目的端口：占16比特，写入源/目的端口号，用来标识发送/接收该TCP报文段的应用进程</strong></em></li><li><em><strong>序号：占32比特，取值范围：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn><mo>−</mo><msup><mn>2</mn><mn>32</mn></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">0-2^{32}-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>，序号增加到最后一个后，又从0开始。用于指出本TCP报文段数据载荷的第一个字节的序号</strong></em></li><li><em><strong>确认号：占32比特，取值范围：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn><mo>−</mo><msup><mn>2</mn><mn>32</mn></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">0-2^{32}-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>，序号增加到最后一个后，又从0开始。用于指出期望收到对方下一个TCP报文段的数据载荷的第一个字节的序号以及对之前收到所有数据的确认</strong></em></li><li><em><strong>确认标志位ACK：取值为1时，确认号生效；取值为0时，确认号无效。</strong></em></li><li><em><strong>数据偏移：占4比特，以4字节为单位。用于指出TCP报文段的数据载荷部分的起始处距离TCP报文段的起始处有多远</strong></em></li><li>保留：占6比特，保留为今后使用，目前应置为0</li><li>窗口：占16比特，以字节为单位，指出发送本报文段的一方的接收窗口</li><li>校验和：占16比特，检查TCP报文段首部和数据载荷</li><li><em><strong>同步标志位SYN：在TCP建立连接时用来同步序号。在建立连接时应置为1</strong></em></li><li><em><strong>终止标志位FIN：用来释放TCP连接。在释放连接时应置为1</strong></em></li><li>复位标志位RST：用来复位TCP连接。RST=1时，表明连接异常 or 拒绝非法报文段/拒绝打开一个TCP连接</li><li>推送标志位PSH：PSH=1的报文段会尽快上交应用进程</li><li>紧急标志位URG：URG=1，紧急指针字段生效</li><li>紧急指针：占16比特，以字节为单位，用来指明紧急数据的长度</li><li>选项<br><img src="https://raw.githubusercontent.com/crayz-l/Learning_picgo/main/img/%E8%AE%A1%E7%BD%91chapter5.9-2" alt="image.png"></li><li>填充：确保报文段首部能被4整除</li></ol>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计网Chapter4</title>
      <link href="/posts/4240988082/"/>
      <url>/posts/4240988082/</url>
      
        <content type="html"><![CDATA[<h2 id="1-网络层概述">1.网络层概述</h2><p>主要任务：实现网络互连，实现数据包在各网络间的传输<br>需要解决的主要问题：</p><ol><li>网络层向运输层提供怎样的服务（“可靠传输” or “不可靠传输”）</li><li>网络层寻址问题</li><li>路由选择问题</li></ol><p>Internet 使用TCP/IP协议栈，且在网络层中常使用网际协议IP，故又称网络层为网际层<br><img src="https://raw.githubusercontent.com/crayz-l/Learning_picgo/main/img/%E8%AE%A1%E7%BD%91chapter4.1-1" alt="image.png"></p><h2 id="2-网络层提供的两种服务">2.网络层提供的两种服务</h2><h3 id="2-1-面向连接的虚电路服务">2.1 面向连接的虚电路服务</h3><p>可靠通信由网络保证，故必须建立<strong>网络层的连接——虚电路VC</strong>（Virtual Circuit）<br>通信双方沿着已建立的虚电路发送分组，除首次发送外，之后每次发送分组的首部只需添加虚电路的编号即可完成通信，通信结束后需要释放虚电路</p><h3 id="2-2-无连接的数据报服务">2.2 无连接的数据报服务</h3><p>可靠通信由用户主机保证<br>不需要建立网络层连接，每个分组可走不同路径，且分组首部必须携带目的主机的完整地址。<br>容易出现分组丢失，误码，失序等现象。</p><h2 id="3-ipv4地址">3. IPv4地址</h2><h3 id="3-1-概述">3.1 概述</h3><p>IPv4地址：每一台主机（或路由器）的每一个接口在全世界范围内的唯一的32比特的标识符<br>采用<strong>点分十进制表示方法</strong>：32比特按8个一组进行划分，每组转换为十进制数，以点 <strong>.</strong> 相连</p><p>重点：二进制和十进制的相互转换<br>二进制-&gt;十进制：8位二进制数与对应位的权值相乘的和<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi><mi>e</mi><mi>s</mi><mi>u</mi><mi>l</mi><mi>t</mi><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mn>7</mn></msubsup><msup><mn>2</mn><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msup><mo>∗</mo><mi>n</mi><mi>u</mi><msub><mi>m</mi><mi>i</mi></msub><mo separator="true">,</mo><mi>n</mi><mi>u</mi><msub><mi>m</mi><mi>i</mi></msub><mtext>是从右边第一位开始，每一位的值</mtext></mrow><annotation encoding="application/x-tex">result=\sum_{i=1}^{7}2^{i-1}*num_i,num_i是从右边第一位开始，每一位的值</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">e</span><span class="mord mathdefault">s</span><span class="mord mathdefault">u</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.253718em;vertical-align:-0.29971000000000003em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.954008em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">7</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">n</span><span class="mord mathdefault">u</span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">n</span><span class="mord mathdefault">u</span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">是</span><span class="mord cjk_fallback">从</span><span class="mord cjk_fallback">右</span><span class="mord cjk_fallback">边</span><span class="mord cjk_fallback">第</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">位</span><span class="mord cjk_fallback">开</span><span class="mord cjk_fallback">始</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">每</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">位</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">值</span></span></span></span><br>如：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>10101010</mn><msub><mo stretchy="false">)</mo><mn>2</mn></msub><mo>=</mo><mo stretchy="false">(</mo><mn>1</mn><mo>∗</mo><msup><mn>2</mn><mn>7</mn></msup><mo>+</mo><mn>0</mn><mo>∗</mo><msup><mn>2</mn><mn>6</mn></msup><mo>+</mo><mn>1</mn><mo>∗</mo><msup><mn>2</mn><mn>5</mn></msup><mo>+</mo><mn>0</mn><mo>∗</mo><msup><mn>2</mn><mn>4</mn></msup><mo>+</mo><mn>1</mn><mo>∗</mo><msup><mn>2</mn><mn>3</mn></msup><mo>+</mo><mn>0</mn><mo>∗</mo><msup><mn>2</mn><mn>2</mn></msup><mo>+</mo><mn>1</mn><mo>∗</mo><msup><mn>2</mn><mn>1</mn></msup><mo>+</mo><mn>0</mn><mo>∗</mo><msup><mn>2</mn><mn>0</mn></msup><msub><mo stretchy="false">)</mo><mn>10</mn></msub></mrow><annotation encoding="application/x-tex">(10101010)_2=(1*2^7+0*2^6+1*2^5+0*2^4+1*2^3+0*2^2+1*2^1+0*2^0)_{10}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mord">0</span><span class="mord">1</span><span class="mord">0</span><span class="mord">1</span><span class="mord">0</span><span class="mord">1</span><span class="mord">0</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">7</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>  下标分别表示n进制</p><p>十进制-&gt;二进制：除2取余法<br>对一个十进制数不断除2，记录每一次除法的余数，最后一项除法余数作为二进制数的首位，自下而上组成一个二进制数<br>对于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>130</mn><msub><mo stretchy="false">)</mo><mn>10</mn></msub><mo>=</mo><mo stretchy="false">(</mo><mn>10000010</mn><msub><mo stretchy="false">)</mo><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">(130)_{10}=(10000010)_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mord">3</span><span class="mord">0</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord">1</span><span class="mord">0</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>有：</p><table><thead><tr><th style="text-align:center">除式</th><th style="text-align:center">余数</th><th>位置关系</th></tr></thead><tbody><tr><td style="text-align:center">130/2=65</td><td style="text-align:center">0</td><td>末位</td></tr><tr><td style="text-align:center">65/2=32</td><td style="text-align:center">1</td><td></td></tr><tr><td style="text-align:center">32/2=16</td><td style="text-align:center">0</td><td></td></tr><tr><td style="text-align:center">16/2=8</td><td style="text-align:center">0</td><td></td></tr><tr><td style="text-align:center">8/2=4</td><td style="text-align:center">0</td><td></td></tr><tr><td style="text-align:center">4/2=2</td><td style="text-align:center">0</td><td></td></tr><tr><td style="text-align:center">2/2=1</td><td style="text-align:center">0</td><td></td></tr><tr><td style="text-align:center">1/2=0</td><td style="text-align:center">1</td><td>首位</td></tr></tbody></table><h3 id="3-2-分类编址的ipv4地址">3.2 分类编址的IPv4地址</h3><p><img src="https://raw.githubusercontent.com/crayz-l/Learning_picgo/main/img/%E8%AE%A1%E7%BD%91chapter4.3-1" alt="image.png"><br><img src="https://raw.githubusercontent.com/crayz-l/Learning_picgo/main/img/%E8%AE%A1%E7%BD%91chapter4.3-2" alt="image.png"></p><h4 id="a类地址">A类地址</h4><p>最高位固定为0 ，即0xxxxxxx<br>最小网络号0，不可指派；<br>可指派的最小网络号为1，即00000001，其网络地址为1.0.0.0<br>最大网络号127，本地环回测试地址，不可指派<br>则可指派网络数为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mrow><mo stretchy="false">(</mo><mn>8</mn><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup><mo>−</mo><mn>2</mn><mo>=</mo><mn>126</mn></mrow><annotation encoding="application/x-tex">2^{(8-1)}-2=126</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9713299999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">8</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">2</span><span class="mord">6</span></span></span></span><br>网络中的最大主机数：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>24</mn></msup><mo>−</mo><mn>2</mn><mo>=</mo><mn>16777214</mn></mrow><annotation encoding="application/x-tex">2^{24}-2=16777214</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">4</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">6</span><span class="mord">7</span><span class="mord">7</span><span class="mord">7</span><span class="mord">2</span><span class="mord">1</span><span class="mord">4</span></span></span></span></p><h4 id="b类地址">B类地址</h4><p>最高两位固定为10，即10xxx……xxx<br>最小网络号：128.0，网络地址：128.0.0.0<br>最大网络号：191.255，网络地址：191.255.0.0<br>则可指派网络号为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mrow><mo stretchy="false">(</mo><mn>16</mn><mo>−</mo><mn>2</mn><mo stretchy="false">)</mo></mrow></msup><mo>=</mo><mn>16384</mn></mrow><annotation encoding="application/x-tex">2^{(16-2)}=16384</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8879999999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">1</span><span class="mord mtight">6</span><span class="mbin mtight">−</span><span class="mord mtight">2</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">6</span><span class="mord">3</span><span class="mord">8</span><span class="mord">4</span></span></span></span><br>网络中的最大主机数：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>16</mn></msup><mo>−</mo><mn>2</mn><mo>=</mo><mn>65534</mn></mrow><annotation encoding="application/x-tex">2^{16}-2=65534</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">6</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">6</span><span class="mord">5</span><span class="mord">5</span><span class="mord">3</span><span class="mord">4</span></span></span></span></p><h4 id="c类地址">C类地址</h4><p>最高三位固定为110，即110xx……xxx<br>最小网络号：192.0.0，网络地址：192.0.0.0.0<br>最大网络号：223.255.255，网络地址：223.255.255.0<br>可指派的网络数为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mrow><mo stretchy="false">(</mo><mn>24</mn><mo>−</mo><mn>3</mn><mo stretchy="false">)</mo></mrow></msup><mo>=</mo><mn>2097152</mn></mrow><annotation encoding="application/x-tex">2^{(24-3)}=2097152</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8879999999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">2</span><span class="mord mtight">4</span><span class="mbin mtight">−</span><span class="mord mtight">3</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">0</span><span class="mord">9</span><span class="mord">7</span><span class="mord">1</span><span class="mord">5</span><span class="mord">2</span></span></span></span><br>网络中的最大主机数：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>8</mn></msup><mo>−</mo><mn>2</mn><mo>=</mo><mn>254</mn></mrow><annotation encoding="application/x-tex">2^8-2=254</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">8</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">5</span><span class="mord">4</span></span></span></span></p><h3 id="3-3-划分子网的ipv4地址">3.3 划分子网的IPv4地址</h3><p>出现原因：网络需求的增加，但新增网络申请新网络号会有如下弊端<br>1. 需要等待时间和花费更多费用<br>2. 会增加其他路由器中路由表记录的数量<br>3. 浪费原有网络号中剩余的大量IP地址<br>故产生从主机号中借用一部分比特作为子网号<br>如何判断网络地址或主机IP地址中的子网号部分：使用子网掩码</p><p>32比特的子网掩码可表明分类IP地址的主机号部分被借用了几个比特作为子网号</p><ol><li><strong>连续的1对应网络号和子网号</strong></li><li><strong>连续的0对应主机号</strong></li><li>划分子网的IPv4地址与子网掩码按位<strong>逻辑与运算</strong>，可得到<strong>所在子网的网络地址</strong><br>做题思路：<ol><li>判断IP地址属于哪一个类别（A,B or C），从而可以知道前8/16/24位是网络号</li><li>而后针对不是255的部分进行二进制转换，可以知道子网号占几个比特</li><li>逻辑与运算后，网络号，子网号不变，其他部分转变为0，得出所在子网的网络地址</li></ol></li></ol><p>给定一个分类的IP地址和相应的子网掩码，可知子网划分的细节：</p><ol><li>划分出的子网数量</li><li>每个子网可分配的IP数量</li><li>每个子网的网络地址和广播地址（得到网络地址后，非网络号，子网号部分全转换为1）</li><li>每个子网可分配的最小和最大地址</li></ol><p>默认子网掩码</p><ol><li>A类：255.0.0.0</li><li>B类：255.255.0.0</li><li>C类：255.255.255.0</li></ol><h3 id="3-4-无分类编址的ipv4地址">3.4 无分类编址的IPv4地址</h3><p>数量巨大的C类网地址空间太小且没得到充分使用，IPv4地址空间面临全部耗尽的威胁<br>1993年IETF 发布<strong>无分类域间路由选择CIDR</strong></p><p>方法：斜线记法/CIDR记法<br>在IPv4地址后加上“/”+网络前缀所占比特数，将网络前缀相同的连续的IP地址组成一个“CIDR地址块”</p><p>已知CIDR地址块中的任一地址，即可知道该地址块的全部细节：</p><ul><li>最小，最大地址</li><li>地址块中的地址数量</li><li>聚合某类网络的数量</li><li>子网掩码</li><li>示例：请给出128.14.35.7/20的全部细节（最小，最大地址，地址数量，聚合C类网数量，子网掩码）<br>由于网络前缀为20，则可忽略128.14，对35.7进行二进制转换<br>有00100011.00000111，可由20-16知前4位仍是网络前缀<br>则得出128.14.32.0为最小地址，128.14.47.255为最大地址（将网络前缀以后的比特置1）<br>地址数量：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mrow><mo stretchy="false">(</mo><mn>32</mn><mo>−</mo><mn>20</mn><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">2^{(32-20)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8879999999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">3</span><span class="mord mtight">2</span><span class="mbin mtight">−</span><span class="mord mtight">2</span><span class="mord mtight">0</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span> ；聚合C类网的数量：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mrow><mo stretchy="false">(</mo><mn>32</mn><mo>−</mo><mn>20</mn><mo stretchy="false">)</mo></mrow></msup><mi mathvariant="normal">/</mi><msup><mn>2</mn><mn>8</mn></msup><mo stretchy="false">(</mo><mtext>除</mtext><msup><mn>2</mn><mn>8</mn></msup><mtext>是因为一个</mtext><mi>C</mi><mtext>类网络号有</mtext><msup><mn>2</mn><mn>8</mn></msup><mtext>个地址）</mtext></mrow><annotation encoding="application/x-tex">2^{(32-20)}/2^8(除2^8是因为一个C类网络号有2^8个地址）</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">3</span><span class="mord mtight">2</span><span class="mbin mtight">−</span><span class="mord mtight">2</span><span class="mord mtight">0</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mord">/</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">8</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord cjk_fallback">除</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">8</span></span></span></span></span></span></span></span><span class="mord cjk_fallback">是</span><span class="mord cjk_fallback">因</span><span class="mord cjk_fallback">为</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">个</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord cjk_fallback">类</span><span class="mord cjk_fallback">网</span><span class="mord cjk_fallback">络</span><span class="mord cjk_fallback">号</span><span class="mord cjk_fallback">有</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">8</span></span></span></span></span></span></span></span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">地</span><span class="mord cjk_fallback">址</span><span class="mord cjk_fallback">）</span></span></span></span><br>子网掩码：11111111.11111111.11110000.0000000</li></ul><p>路由聚合：找共同前缀</p><ul><li>示例：某路由表中有转发接口相同的4条路由表项，其目的网络地址分别为35.230.32.0/21，35.230.40.0/21，35.230.48.0/21和35.230.56.0/21，4条路由聚合后的目的网络地址：<ol><li>已知4条路由的共同前缀为35.230，对后两个字节进行二进制转换<ol><li>32.0:00100000.00000000</li><li>40.0:00101000.00000000</li><li>48.0:00110000.00000000</li><li>56.0:00111000.00000000</li></ol></li><li>通过比较四个比特串可知在第三个字节，001为四个比特串的共同前缀</li><li>所以聚合后的目的网络地址为35.230.00100000.00000000，即35.230.32.0/19</li></ol></li></ul><p>网络前缀越长，地址块越小，路由越具体<br><strong>最长前缀匹配</strong>：路由器查表转发分组时有多条路由可选，则选前缀最长的<br><em><strong>计算主机数记得减去网络地址和广播地址</strong></em></p><h3 id="3-5-ipv4的应用规划">3.5 IPv4的应用规划</h3><ul><li>定长的子网掩码FLSM（对应3.3）<ul><li>使用同一个子网掩码划分子网</li><li>只能划分出<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">2^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span>个子网（n是从主机号部分借用作为网络号的比特数量）</li><li>分配的IP地址数量相同，容易造成浪费</li></ul></li><li>变成的子网掩码VLSM（对应3.4）<ul><li>使用不同的子网掩码进行划分</li><li>可按需分配</li><li>分配IP地址数量不同，尽可能减少对IP地址的浪费</li></ul></li></ul><h2 id="4-ip数据报的发送和转发">4.IP数据报的发送和转发</h2><ul><li>主机发送IP数据报<ul><li>判断目的主机是否与自己处于同一网络<ul><li>判断方法：将源主机和目的主机的IP地址与子网掩码相与，判断是否相等</li><li>若在，则直接交付</li><li>若不在，传输给主机所在网络的<strong>默认网关（路由器）</strong>，由默认网关帮忙转发</li></ul></li></ul></li><li>路由器转发IP数据报<ol><li>检查IP数据报首部是否出错：<ol><li>若出错，则直接丢弃该IP数据报并通告源主机</li><li>若没有出错则转发</li></ol></li><li>根据IP数据报的目的地址在路由表中查找匹配的条目<br>查找方法：IP数据报首部中包含的目的地址与路由表中的子网掩码相与，判断结果是否等于相应的目的网络地址<ol><li>若找到，则转发给条目中指示下一跳</li><li>若找不到，则丢弃该IP数据报并通告源主机</li></ol></li></ol></li></ul><h2 id="5-静态路由配置及可能产生的路由环路问题">5.静态路由配置及可能产生的路由环路问题</h2><p>概念：用户或网络管理员给路由器<strong>人工配置路由表</strong><br>可能引发路由环路的错误：</p><ol><li>配置错误<br><img src="https://raw.githubusercontent.com/crayz-l/Learning_picgo/main/img/%E8%AE%A1%E7%BD%91chapter4.5-1" alt="image.png"></li><li>聚合了不存在的网络<br><img src="https://raw.githubusercontent.com/crayz-l/Learning_picgo/main/img/%E8%AE%A1%E7%BD%91chapter4.5-2" alt="image.png"></li><li>网络故障<br><img src="https://raw.githubusercontent.com/crayz-l/Learning_picgo/main/img/%E8%AE%A1%E7%BD%91chapter4.5-3" alt="image.png"></li><li>生存时间TTL，IP数据报进入路由器后，TTL-1次，若TTL!=0，路由器则继续转发</li></ol><p>路由条目 的类型：</p><ol><li>直连网络</li><li>静态路由（人工配置）<br>特殊的静态路由条目：<ol><li>默认路由（目的网络为0.0.0.0，子网掩码为0.0.0.0）</li><li>特定主机路由（目的网络为特定主机的IP地址，子网掩码为255.255.255.255）</li><li>黑洞路由（下一跳为null0）</li></ol></li><li>动态路由（路由选择协议）</li></ol><h2 id="6-路由选择协议">6.路由选择协议</h2><h3 id="6-1-概述">6.1 概述</h3><p>Internet采用的路由选择协议的特点</p><ol><li>自适应：能较好适应网络状态变化</li><li>分布式：路由器之间交换路由信息</li><li>分层次：Internet被划分为较小的自治系统AS<br><img src="https://raw.githubusercontent.com/crayz-l/Learning_picgo/main/img/%E8%AE%A1%E7%BD%91chapter4.6-1" alt="image.png"><br>常见的路由选择协议<br><img src="https://raw.githubusercontent.com/crayz-l/Learning_picgo/main/img/%E8%AE%A1%E7%BD%91chapter4.6-2" alt="image.png"></li></ol><p>路由器的基本结构<br><img src="https://raw.githubusercontent.com/crayz-l/Learning_picgo/main/img/%E8%AE%A1%E7%BD%91chapter4.6-3" alt="image.png"></p><h3 id="6-2-路由信息协议rip的基本工作原理">6.2 路由信息协议RIP的基本工作原理</h3><p>封装协议：UDP（端口号：520，协议字段：17）<br>RIP用跳数衡量到达目的网络的距离<br>1. 路由器到直连网络的距离定义为1<br>2. 到非直连网络的距离定义为所经过路由器数+1<br>3. “距离”=16时为不可达<br>4. <strong>好路由 == 经过路由数量最少的路由</strong><br>5. 到达同一目的网络有多条“距离相等”的路由，可进行等价负载均衡</p><p>RIP的工作要点：</p><ol><li>和谁交换信息：仅和相邻路由器交换信息，即中间没有其他路由器</li><li>交换什么信息：路由器记录的路由表</li><li>何时交换信息：周期性交换</li></ol><p>RIP的基本工作过程</p><ol><li>路由器刚开始只知道自己到直连网络的距离为1</li><li>每个路由器和相邻路由器周期性交换并更新路由信息</li><li>若干次交换和更新后，每个路由器都知道到达本AS内各网络的最短距离和下一跳地址，称为收敛</li></ol><p><em><strong>RIP路由条目更新规则</strong></em></p><ul><li>发现新网络，添加</li><li>到达目的网络，相同下一跳，最新消息，更新</li><li>到达目的网络，不同下一跳，新路由有优势，更新</li><li>到达目的网络，不同下一跳，等价负载均衡，更新</li><li>到达目的网络，不同下一跳，新路由劣势，不更新</li></ul><p>RIP存在“坏消息传播得慢”问题<br>又称路由环路or距离无穷计数<br>解决方法：<br>1. 限制最大路径距离为15<br>2. 实现路由表变化即发送更新报文（“触发更新”）<br>3. 让路由器记录收到某特定路由信息的接口，而不让同一路由信息再通过此接口向反方向传送</p><h3 id="6-3-开放最短路径优先ospf的基本工作原理">6.3 开放最短路径优先OSPF的基本工作原理</h3><p>封装协议：IP（协议字段：89）<br>特点：</p><ol><li>基于链路状态<ol><li>链路状态：本路由器和<strong>哪些路由器相邻</strong>，及相应<strong>链路的“代价”</strong></li></ol></li><li>使用SPF算法（最短路径优先），不会产生环路</li><li>不限制网络规模，收敛速度快</li></ol><p>工作流程：</p><ol><li>使用OSPF的路由器会产生<strong>链路状态通告LSA</strong><br>内容包括：<br>1.直连网络的链路状态信息；<br>2.邻居路由器的链路状态信息。</li><li>LSA被封装在<strong>链路状态更新分组LSU</strong>中，洪泛发送</li><li>路由器有一个<strong>链路状态数据库LSDB</strong>，用于存储LSA</li><li>通过各路由器洪泛发送，所有的LSDB最终归于一致</li><li>各路由器基于LSDB进行最短路径优先计算，从而构建出到达其他路由的最短路径和路由表</li></ol><p>OSPF的分组类型：</p><ol><li>问候分组</li><li>数据库描述分组</li><li>链路状态请求分组</li><li>链路状态更新分组</li><li>链路状态确认组分</li></ol><p>OSPF在多点接入网络中路由器邻居关系的建立：</p><ol><li>选举指定路由器DR和备用指定路由器BDR</li><li>所有非DR/BDR只与DR/BDR建立邻居关系</li><li>非DR/BDR之间通过DR/BDR交换信息<br><img src="https://raw.githubusercontent.com/crayz-l/Learning_picgo/main/img/%E8%AE%A1%E7%BD%91chapter4.6-4" alt="image.png"></li></ol><p>为了使OSPF能用于规模很大的网络，OSPF将一个AS划分若干更小范围，称<strong>区域（Area)</strong><br>优点：利用洪泛发交换链路状态信息的范围局限于每一个区域而不是一个AS<br><img src="https://raw.githubusercontent.com/crayz-l/Learning_picgo/main/img/%E8%AE%A1%E7%BD%91chapter4.6-5" alt="image.png"></p><h3 id="6-4-边界网关协议bgp的基本工作原理">6.4 边界网关协议BGP的基本工作原理</h3><p>封装协议：TCP （端口号：179，协议字段：6）<br>产生的原因：</p><ol><li>不同AS之间，度量路由的“代价”不同，不利于最佳路由的寻找</li><li>AS间的路由选择需要考虑相关策略（政治，经济，安全）<br>BGP力求寻找一条能到达目的网络且较好的路由，而非最佳路由</li></ol><p>工作原理：</p><ol><li>配置BGP时，AS的管理员需要设置一台路由器作为“BGP发言人”</li><li>不同AS的BGP发言人交换信息时需要建立TCP连接，端口号179：<ol><li>在TCP连接基础上发送BGP报文以建立BGP会话</li><li>利用BGP会话交换路由信息（如：新增路由，撤销路由，报错信息）</li><li>使用TCP连接交换路由信息的两个BGP发言人称为对方的邻站or对等站</li></ol></li><li>BGP发言人除了运行BGP，还得运行AS中的内部网关协议</li><li>BGP发言人交换网络可达性的信息</li><li>信息交换完毕后，BGP发言人可根据采用的策略找出到达各AS较好的路由，即构造出树形结构，不存在回路的AS连通图</li></ol><p>BGP适用于多级结构的Internet<br>BGP-4的报文类型：</p><ol><li>OPEN报文：用来与相邻的BGP发言人建立关系，初始化通信</li><li>UPDATE报文：通告某一路由信息及列出要撤销的多条路由</li><li>KEEPALIVE（保活）报文：周期性验证邻站的连通性</li><li>NOTIFICATION（通知）报文：发送检测到的差错</li></ol><h2 id="7-ipv4数据报的首部格式">7. IPv4数据报的首部格式</h2><p><img src="https://raw.githubusercontent.com/crayz-l/Learning_picgo/main/img/%E8%AE%A1%E7%BD%91chapter4.7-1" alt="image.png"></p><ol><li>版本：占4比特，表示IP协议的版本，传输双方所使用版本要一致</li><li>首部长度：占4比特，表示IP数据报首部的长度，取值以4字节为单位<ol><li>最小十进制取值为5，表示首部只有20字节固定部分</li><li>最大十进制取值为15，表示首部有20字节固定部分和40字节可变部分</li></ol></li><li>可选字段：长度从1个字节到40个字节不等，用来支持排错，测量及安全等错失<ol><li>增加了IP数据报的功能，使首部长度成为可变的，增加开销</li></ol></li><li>填充字段：确保首部长度为4字节的整数值，使用全0填充</li><li>区分服务：占8比特</li><li>总长度：占16比特，表示数据报的总长度（首部+数据载荷），最大取值为65535字节</li><li>标识：16比特，同一数据报的分片标识相同</li><li>标志：3比特<ol><li>DF位：1表示不许分片，0表示可分片</li><li>MF位：1表示“后面还有分片”，0表示“最后一个分片”</li><li>保留位：必须为0</li></ol></li><li>片偏移：占13比特，指出分片数据报的数据载荷部分偏移其在原数据报的位置有多少个单位。单位：8字节<ol><li>一般片偏移量等于 比特/8 (字节)</li></ol></li><li>TTL：占8比特，以跳数为单位，每经过一个路由，TTL-1</li><li>协议：占8比特，指明IP数据报的数据载荷是什么协议数据单元<ul><li>各协议的协议字段：</li><li>ICMP：1；IGMP：2；TCP：6；UDP：17；IPv6：41；OSPF：89</li></ul></li><li>首部检验和：占16比特，用来检测首部传输过程中是否出现差错<ol><li>每经过一次路由器要重新计算一次，因为TTL，标志，片偏移等可能发生变化</li></ol></li><li>源IP地址和目的IP地址：各占32比特</li></ol><h2 id="8-网际控制报文协议icmp">8.网际控制报文协议ICMP</h2><p>为更有效控制转发IP数据报和提高交付成功的机会，在网际层使用网际控制报文协议<br>主机或路由器使用ICMP来发送<strong>差错报告报文</strong>和<strong>询问报文</strong><br>ICMP差错报告报文的类型：<br>1. 终点不可达<br>路由器或主机不能交付数据报时发送，可细分为目的网络不可达、目的主机不可达、目的协议不可达、目的端口不可达等等<br>2. 源点抑制<br>路由器或主机因拥塞而丢弃数据报时发送<br>3. 时间超过<br>数据报还未发送到目的主机，TTL就为0时发送<br>在预先规定的时间没有收到一个数据报的全部数据报片<br>4. 参数问题<br>路由器或目的主机收到的IP数据报根据首部检验和字段发现首部出现误码<br>5. 改变路由（重定向）<br>路由器将改变路由报文发送给主机，让主机知道下次应发送数据报给最佳路由<br>ICMP询问报文的类型：<br>1. 回送请求和回答<br>测试目的站是否可达<br>2. 时间戳请求和回答<br>进行时间同步和测量时间</p><p>ICMP报文被封装到IP数据报发送</p><p>不应发送ICMP差错报告报文的情况</p><ol><li>对ICMP差错报告报文</li><li>对第一个分片的数据报片的所有后续数据报片</li><li>对具有多播地址的数据报</li><li>对具有特殊地址（如127.0.0.0 or 0.0.0.0）的数据报</li></ol><p>ICMP的应用：</p><ol><li>分组网间探测PING</li><li>跟踪路由traceroute</li></ol><h2 id="9-虚拟专用网vpn和网络地址转换nat">9.虚拟专用网VPN和网络地址转换NAT</h2><h3 id="9-1-虚拟专用网vpn">9.1 虚拟专用网VPN</h3><p>概念：利用公用的Internet作为本机构各专用网间的通信载体，这样的专用网又称虚拟专用网<br>类型：</p><ol><li>内联网VPN：同一机构不同部门的内部网络构成的VPN</li><li>外联网VPN：有外部机构参与的VPN</li><li>远程接入VPN：在外地通过VPN软件访问公司主机<br>VPN为保证传输的安全性，会对内部数据进行加密</li></ol><h3 id="9-2-网络地址转换nat">9.2 网络地址转换NAT</h3><p>因为IP地址紧缺，故虚拟专用网中各主机所分配的地址应是本机构可自由分配的私有地址<br><img src="https://raw.githubusercontent.com/crayz-l/Learning_picgo/main/img/%E8%AE%A1%E7%BD%91chapter4.9-1" alt="image.png"><br>NAT：将大量使用内部专用地址的专用网络用户共享少量外部全球地址<br>即使用内部网络想访问公用Internet上的主机时，主机的内部IP地址经过NAT路由器的转换，会被临时赋予一个全球地址，此时源IP地址发生改变<br>NAPT：网络地址与端口号转换<br>因为绝大多数网络应用采用TCP/UDP传送，可利用运输层端口号和IP地址一起转换，这样，一个全球IP地址可使多个拥有本地地址的主机同时和Internet上的主机通信</p><p>对于一些P2P应用，需要外网主机主动与内网主机通信，此时需要特殊的NAT穿越技术帮忙<br>NAT对外网屏蔽了内网主机的网络地址，提供一定的安全保护</p>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计网Chapter3</title>
      <link href="/posts/1655489041/"/>
      <url>/posts/1655489041/</url>
      
        <content type="html"><![CDATA[<h2 id="1-数据链路层的概述">1.数据链路层的概述</h2><p>链路：一个结点到相邻结点的一段物理线路，中间无其他交换结点<br>数据链路：指把实现通信协议的硬件和软件加到链路上，构成数据链路<br>数据链路层的单位：帧</p><h2 id="2-封装成帧">2.封装成帧</h2><p>定义：指数据链路层给上层交付的协议数据单元添加帧头和帧尾使之成为帧<br>1.帧头，帧尾含有重要的控制信息<br>2.帧头，帧尾的作用之一是帧定界<br>3.帧间间隔：96比特时间<br><strong>透明传输</strong>：指数据链路层对上层交付的传输数据无限制<br>1.面向字节的物理链路使用<strong>字节填充</strong>实现透明传输<br>在跟帧定界相同的数据前加上转义字符(十进制值为27,占1字节 )<br>2.面向比特的物理链路使用<strong>比特填充</strong>实现透明传输<br>零比特填充：面对连续的5个1后面填充一个0<br>提高帧的传输效率，应使<strong>帧的数据部分长度尽可能大些</strong><br><strong>最大传送单元MTU</strong>：数据链路层协议规定的帧的数据部分的长度上限 1500B</p><h2 id="3-差错检测">3.差错检测</h2><p>奇偶校验：通过0/1数量的奇偶性进行检验，但若奇偶性没有变化，则会出现漏检<br>循环冗余校验CRC</p><ol><li>收发双方约定好一个<em><strong>生成多项式</strong></em><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">G(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">G</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span></li><li>发送方基于待发送的数据和生成多项式计算出差错检测码（冗余码），将其添加到待传输数据的后面一起传输</li><li>接收方通过生成多项式来计算收到的数据是否产生误码</li></ol><p>除法作异或运算，不同则余1<br>发送方：</p><ol><li>在待发送数据后添加生成多项式<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">G(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">G</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span>最高次个0，作为被除数</li><li>以 <strong><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">G(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">G</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span>各项系数</strong>构成比特串作为除数</li><li>二者作除法得到的余数作为冗余码添加到待发送的数据</li><li>检查余数：余数位数应与<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">G(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">G</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span>最高次数项的次数相同，如不足，则在余数前补0<br>接收方：</li><li>以接收到的数据为被除数，<strong><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">G(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">G</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span>各项系数</strong>构造的比特串作为除数</li><li>二者作除法，余数为0则判断为无误码，反之则存在误码</li></ol><h2 id="4-可靠传输">4.可靠传输</h2><p>数据链路层向上层提供的服务：</p><ol><li>不可靠传输服务：仅丢弃有误码的帧</li><li>可靠传输服务：想办法实现发送端发送什么，接收端就收到什么</li></ol><p>有线链路误码率低，不要求可靠传输；<br>无线链路误码率高，数据链路层必须向上层提供可靠传输</p><p><strong>可靠传输服务不仅局限于数据链路层</strong></p><h3 id="4-1-可靠传输的实现机制">4.1 可靠传输的实现机制</h3><h4 id="4-1-1-停止等待协议-sw">4.1.1 停止等待协议（SW）</h4><p>相关概念：</p><ol><li>数据分组：DATA</li><li>对数据的确认分组：ACK</li><li>否认分组：NAK<br>超时重传：超过超时计时器设定的“重传时间”，发送方接收不到接收方任何的ACK或NAK，则重传原来的数据分组<br>重传时间可设为“从发送方到接收方的平均往返时间”<br>分组编号：<br>针对确认分组丢失的情况，可对数据分组进行编号，以确保不会出现分组重复的传输情况<br>针对确认分组迟到的情况，可对确认分组进行编号，以确保发送方不会误认为是其他数据分组的确认分组<br>（数据链路层较少出现ACK迟到情况，在SW中可以不用给ACK分组编号）</li></ol><p>信道利用率：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>U</mi><mo>=</mo><mfrac><msub><mi>T</mi><mi>D</mi></msub><mrow><msub><mi>T</mi><mi>D</mi></msub><mo>+</mo><mi>R</mi><mi>T</mi><mi>T</mi><mo>+</mo><msub><mi>T</mi><mi>A</mi></msub></mrow></mfrac></mrow><annotation encoding="application/x-tex">U=\frac{T_D}{T_D+RTT+T_A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.3339409999999998em;vertical-align:-0.44530499999999995em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8886359999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">D</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="mbin mtight">+</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.410305em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">D</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44530499999999995em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><br>符号解读：<br>1. <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>D</mi></msub></mrow><annotation encoding="application/x-tex">T_D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">D</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> ：数据分组的发送时延<br>2. <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>A</mi></msub></mrow><annotation encoding="application/x-tex">T_A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> ：确认分组的发送时延（一般远小于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>D</mi></msub></mrow><annotation encoding="application/x-tex">T_D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">D</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，可忽略不计）</p><h4 id="4-1-2-回退n帧协议-gbn">4.1.2 回退N帧协议（GBN）</h4><p>通过n个比特给分组编号，序号取值范围为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn><mtext>——</mtext><msup><mn>2</mn><mi>n</mi></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">0——{2^n}-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.747722em;vertical-align:-0.08333em;"></span><span class="mord">0</span><span class="mord">—</span><span class="mord">—</span><span class="mord"><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span><br>发送方维持一个发送窗口<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>W</mi><mi>T</mi></msub></mrow><annotation encoding="application/x-tex">W_T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> ，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>&lt;</mo><msub><mi>W</mi><mi>T</mi></msub><mo>&lt;</mo><msup><mn>2</mn><mi>n</mi></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">1&lt;W_T&lt;{2^n}-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68354em;vertical-align:-0.0391em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.747722em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> ，在<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>W</mi><mi>T</mi></msub></mrow><annotation encoding="application/x-tex">W_T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>内的序号可以被发送<br>接收方维持一个接收窗口<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>W</mi><mi>R</mi></msub></mrow><annotation encoding="application/x-tex">W_R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> ，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>W</mi><mi>R</mi></msub><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">W_R=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> ，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>W</mi><mi>R</mi></msub></mrow><annotation encoding="application/x-tex">W_R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>以外的数据分组不允许接收</p><p>累积确认：接收方无需对收到的数据分组逐个确认，可接收按序到达的最后一个分组后，发送<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mi>C</mi><msub><mi>K</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">ACK_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> ，表示序号为n及之前的数据分组都已确认</p><p>差错情况：</p><ol><li>发送的分组(5,6,7,0,1)中，有一个分组(5)出现误码或丢失，接下来的分组即使被接收，也会重复发送之前已确认的最后一个分组(4)的确认分组，发送方接收到重复的确认分组后，会重新发送同样的数据分组(5,6,7,0,1)。</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>W</mi><mi>T</mi></msub><mo>&gt;</mo><msup><mn>2</mn><mi>n</mi></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">W_T&gt;2^n-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.747722em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> ，以n=3为例。<ol><li>假如<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>W</mi><mi>T</mi></msub><mo>=</mo><mn>8</mn></mrow><annotation encoding="application/x-tex">W_T=8</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">8</span></span></span></span> ，发送方会发送0-7号DATA，接收方发送<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mi>C</mi><msub><mi>K</mi><mn>7</mn></msub></mrow><annotation encoding="application/x-tex">ACK_7</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">7</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> ，若<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mi>C</mi><msub><mi>K</mi><mn>7</mn></msub></mrow><annotation encoding="application/x-tex">ACK_7</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">7</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>丢失，发送方超时重传0-7号DATA，但此时接受窗口已经滑动到下一个0，此时接收方无法分辨新旧数据分组</li><li>假如<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>W</mi><mi>T</mi></msub><mo>=</mo><mn>9</mn></mrow><annotation encoding="application/x-tex">W_T=9</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">9</span></span></span></span> ，发送方会发送0-7+0号DATA，此时接收方发送<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mi>C</mi><msub><mi>K</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">ACK_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> ，发送方无法辨认这是第一个0号分组的确认还是第二个0号分组的确认</li></ol></li></ol><h4 id="4-1-3-选择重传协议-sr">4.1.3 选择重传协议（SR）</h4><p>在GBN的基础上做出改进，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>W</mi><mi>R</mi></msub></mrow><annotation encoding="application/x-tex">W_R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>应大于1，以便接收方手下失序到达但无误码且序号落在窗口的数据分组。不可采用累积确认。<br>在SR协议中，一般情况，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>W</mi><mi>R</mi></msub><mo>=</mo><msub><mi>W</mi><mi>T</mi></msub></mrow><annotation encoding="application/x-tex">W_R=W_T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>W</mi><mi>T</mi></msub></mrow><annotation encoding="application/x-tex">W_T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 必须满足<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>&lt;</mo><msub><mi>W</mi><mi>T</mi></msub><mo>≤</mo><msup><mn>2</mn><mi>n</mi></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">1&lt;W_T\leq2^n-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68354em;vertical-align:-0.0391em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.747722em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span><br>若<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>W</mi><mi>T</mi></msub><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">W_T=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>，则是SW协议<br>若<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>W</mi><mi>T</mi></msub><mo>&gt;</mo><msup><mn>2</mn><mi>n</mi></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">W_T&gt;2^n-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.747722em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> ，则无法分辨新旧分组<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>W</mi><mi>R</mi></msub></mrow><annotation encoding="application/x-tex">W_R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>必须满足<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>&lt;</mo><msub><mi>W</mi><mi>R</mi></msub><mo>≤</mo><msub><mi>W</mi><mi>T</mi></msub></mrow><annotation encoding="application/x-tex">1&lt;W_R\leq W_T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68354em;vertical-align:-0.0391em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><br>若<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>W</mi><mi>R</mi></msub><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">W_R=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>，则是GBN协议<br>若<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>W</mi><mi>R</mi></msub><mo>&gt;</mo><msub><mi>W</mi><mi>T</mi></msub></mrow><annotation encoding="application/x-tex">W_R&gt;W_T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> ，则无意义<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>W</mi><mi>T</mi></msub><mo>+</mo><msub><mi>W</mi><mi>R</mi></msub><mo>≤</mo><msup><mn>2</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">W_T+W_R\leq2^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span></p><h2 id="5-点对点协议ppp">5. 点对点协议PPP</h2><p>目前使用最广泛的点对点数据链路层协议<br>为在点对点链路传输各种协议数据报提供了一个标准方法：</p><ol><li>对各种协议数据报的封装方法（封装成帧）</li><li>链路控制协议LCP（用于建立、配置以及测试数据链路的连接）</li><li>一套网络控制协议NCPs（其中包含的每一个协议支持不同的网络层协议）</li></ol><ul><li>帧格式：<br><img src="https://raw.githubusercontent.com/crayz-l/Learning_picgo/main/img/%E8%AE%A1%E7%BD%91chapter3-1" alt="image.png"></li></ul><ol><li>标志字段（<strong>F</strong>lag）：PPP帧的定界符，取值为0x7E</li><li>地址字段（<strong>A</strong>ddress）：取值为0xFF，预留，当前无作用</li><li>控制字段（<strong>C</strong>ontrol）：取值为0x03，预留</li><li>协议字段（<strong>P</strong>rotocol）：指明帧的数据部分送交哪个协议处理<ol><li>取值0x0021表示：帧的数据部分为IP数据报<img src="https://raw.githubusercontent.com/crayz-l/Learning_picgo/main/img/%E8%AE%A1%E7%BD%91chapter3-2" alt="image.png"></li><li>取值0xC021表示：帧的数据部分为LCP分组<img src="https://raw.githubusercontent.com/crayz-l/Learning_picgo/main/img/%E8%AE%A1%E7%BD%91chapter3-3" alt="image.png"></li><li>取值0x8021表示：帧数据部分为NCP分组<img src="https://raw.githubusercontent.com/crayz-l/Learning_picgo/main/img/%E8%AE%A1%E7%BD%91chapter3-4" alt="image.png"></li></ol></li><li>帧检验序列（<strong>F</strong>rame <strong>C</strong>heck <strong>S</strong>equence)：CRC计算出的校验位</li></ol><h3 id="透明传输">透明传输</h3><ol><li><p>面向字节的异步链路——字节填充法<br>发送方：<br>1. 出现的每一个7E（定界符）字节转变成2字节序列（7D，5E）<br>2. 出现的每一个7D（转义字符）字节转变成2字节序列（7D，5D）<br>3. 出现的每一个ASCII码控制字符（数值小于0x20），在该字符前插入一个7D字节，原字节编码加上0x20</p></li><li><p>面向比特的同步链路——零比特填充法</p></li></ol><h3 id="差错检测">差错检测</h3><p>生成多项式：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mi>X</mi><mn>16</mn></msup><mo>+</mo><msup><mi>X</mi><mn>12</mn></msup><mo>+</mo><msup><mi>X</mi><mn>5</mn></msup><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">G(x)=X^{16}+X^{12}+X^5+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">G</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">6</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></p><p>工作状态：<br><img src="https://raw.githubusercontent.com/crayz-l/Learning_picgo/main/img/%E8%AE%A1%E7%BD%91chapter3-5" alt="image.png"></p><h2 id="6-媒体接入控制">6.媒体接入控制</h2><h3 id="基本概念">基本概念</h3><p><em><strong>MAC</strong></em>：共享信道要着重考虑如何协调多个发送和接收站点对一个共享传输媒体的占用<br><img src="https://raw.githubusercontent.com/crayz-l/Learning_picgo/main/img/%E8%AE%A1%E7%BD%91chapter3-6" alt="image.png"></p><h3 id="静态划分信道-物理层">静态划分信道 （物理层）</h3><p>码分复用CDM<br>每一个比特时间再划分为m个短的间隔，一个间隔称为一个<strong>码片</strong>。通常，m=64 or 128<br>使用CDMA（码分多址）的每一个站被指派唯一的m bit码片序列</p><ul><li>发送比特1，则发送m bit码片序列</li><li>发送比特0，则发送码片序列的二进制反码</li><li>通常来说，1称为+1，0称为-1<br>挑选原则：</li></ul><ol><li>码片序列必须各不相同</li><li>码片序列必须相互正交（规格化内积为0）<ol><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo>∗</mo><mi>T</mi><mo>=</mo><mfrac><mn>1</mn><mi>m</mi></mfrac><mo>∗</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></msubsup><msub><mi>S</mi><mi>i</mi></msub><mo>∗</mo><msub><mi>T</mi><mi>i</mi></msub><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">S*T=\frac{1}{m}*\sum_{i=1}^{m}S_i*T_i=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.104002em;vertical-align:-0.29971000000000003em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo>∗</mo><mi>S</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mi>S</mi><mo>∗</mo><mover accent="true"><mi>T</mi><mo stretchy="true">‾</mo></mover><mo>=</mo><mn>0</mn><mo separator="true">,</mo><mi>S</mi><mo>∗</mo><mover accent="true"><mi>S</mi><mo stretchy="true">‾</mo></mover><mo>=</mo><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">S*S=1,S*\overline{T}=0,S*\overline{S}=-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8833300000000001em;vertical-align:0em;"></span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8833300000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span></span></span><span style="top:-3.80333em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8833300000000001em;vertical-align:0em;"></span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8833300000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span></span></span><span style="top:-3.80333em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord">1</span></span></span></span></li></ol></li></ol><h3 id="随机接入">随机接入</h3><h4 id="csma-cd-载波监听多址接入-碰撞检测">CSMA/CD 载波监听多址接入/碰撞检测</h4><p>工作原理：</p><ol><li>多点接入：多个主机接入一条总线，竞争使用</li><li>载波监听：发送前检测总线，若空闲96比特时间，则立即发送；若忙，则持续检测至空闲96比特时间再重新发送</li><li>碰撞检测：边发送边检测，若检测到碰撞立即停止，退避一段随机时间再重新发送</li></ol><p>争用期：发送帧的主机最多经过以太网端到端往返传播时延<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mi>τ</mi></mrow><annotation encoding="application/x-tex">2\tau</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord mathdefault" style="margin-right:0.1132em;">τ</span></span></span></span> 就可检测到本次传输是否碰撞<br>以太网规定<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mi>τ</mi><mo>=</mo><mn>512</mn><mtext>比特时间</mtext></mrow><annotation encoding="application/x-tex">2\tau=512比特时间</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord mathdefault" style="margin-right:0.1132em;">τ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">5</span><span class="mord">1</span><span class="mord">2</span><span class="mord cjk_fallback">比</span><span class="mord cjk_fallback">特</span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">间</span></span></span></span> ，对于10Mbps的以太网，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mi>τ</mi><mo>=</mo><mn>51.2</mn><mi>μ</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">2\tau=51.2{\mu}s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord mathdefault" style="margin-right:0.1132em;">τ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">5</span><span class="mord">1</span><span class="mord">.</span><span class="mord">2</span><span class="mord"><span class="mord mathdefault">μ</span></span><span class="mord mathdefault">s</span></span></span></span></p><p>最小帧长：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>争用期</mtext><mo>∗</mo><mtext>信道带宽（数据发送速率）</mtext></mrow><annotation encoding="application/x-tex">争用期*信道带宽（数据发送速率）</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">争</span><span class="mord cjk_fallback">用</span><span class="mord cjk_fallback">期</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">信</span><span class="mord cjk_fallback">道</span><span class="mord cjk_fallback">带</span><span class="mord cjk_fallback">宽</span><span class="mord cjk_fallback">（</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">据</span><span class="mord cjk_fallback">发</span><span class="mord cjk_fallback">送</span><span class="mord cjk_fallback">速</span><span class="mord cjk_fallback">率</span><span class="mord cjk_fallback">）</span></span></span></span> 在10Mbps以太网下，最小帧长为512b即64字节<br>小于最小帧长的帧都认为是因为碰撞异常的可丢弃帧<br>最大帧长：防止主机长时间占线。<br>以太网V2的MAC帧最大长度为1518字节（1500字节数据）<br>插入VLAN标记的802.1Q帧最大长度为1522字节（1500字节数据）</p><p>截断二进制指数退避算法<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>随机退避时间</mtext><mo>=</mo><mtext>争用期</mtext><mn>2</mn><mi>τ</mi><mo>∗</mo><mtext>随机数</mtext><mi>r</mi><mtext>，</mtext><mi>r</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo>−</mo><msup><mn>2</mn><mi>k</mi></msup><mo>−</mo><mn>1</mn><mo stretchy="false">}</mo><mo separator="true">,</mo><mi>k</mi><mo>=</mo><mi>M</mi><mi>i</mi><mi>n</mi><mo stretchy="false">{</mo><mtext>重传次数，</mtext><mn>10</mn><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">随机退避时间=争用期2\tau*随机数r，r\in\{0-2^k-1\},k=Min\{重传次数，10\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">随</span><span class="mord cjk_fallback">机</span><span class="mord cjk_fallback">退</span><span class="mord cjk_fallback">避</span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">间</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">争</span><span class="mord cjk_fallback">用</span><span class="mord cjk_fallback">期</span><span class="mord">2</span><span class="mord mathdefault" style="margin-right:0.1132em;">τ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord cjk_fallback">随</span><span class="mord cjk_fallback">机</span><span class="mord cjk_fallback">数</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord cjk_fallback">，</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.932438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">}</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mopen">{</span><span class="mord cjk_fallback">重</span><span class="mord cjk_fallback">传</span><span class="mord cjk_fallback">次</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">，</span><span class="mord">1</span><span class="mord">0</span><span class="mclose">}</span></span></span></span></p><table><thead><tr><th style="text-align:center">重传次数</th><th style="text-align:center">k</th><th style="text-align:center">离散整数集合{0,1,···,<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>k</mi></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">2^k-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.932438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>}</th><th style="text-align:center">可能的退避时间</th><th></th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">{0,1}</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn><mo>∗</mo><mn>2</mn><mi>τ</mi><mo separator="true">,</mo><mn>1</mn><mo>∗</mo><mn>2</mn><mi>τ</mi></mrow><annotation encoding="application/x-tex">0*2\tau,1*2\tau</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">2</span><span class="mord mathdefault" style="margin-right:0.1132em;">τ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord mathdefault" style="margin-right:0.1132em;">τ</span></span></span></span></td><td></td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">2</td><td style="text-align:center">{0,1,2,3}</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn><mo>∗</mo><mn>2</mn><mi>τ</mi><mo separator="true">,</mo><mn>1</mn><mo>∗</mo><mn>2</mn><mi>τ</mi><mo separator="true">,</mo><mn>2</mn><mo>∗</mo><mn>2</mn><mi>τ</mi><mo separator="true">,</mo><mn>3</mn><mo>∗</mo><mn>2</mn><mi>τ</mi></mrow><annotation encoding="application/x-tex">0*2\tau,1*2\tau,2*2\tau,3*2\tau</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">2</span><span class="mord mathdefault" style="margin-right:0.1132em;">τ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">2</span><span class="mord mathdefault" style="margin-right:0.1132em;">τ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">2</span><span class="mord mathdefault" style="margin-right:0.1132em;">τ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord mathdefault" style="margin-right:0.1132em;">τ</span></span></span></span></td><td></td></tr><tr><td style="text-align:center">12</td><td style="text-align:center">10</td><td style="text-align:center">{0,···,1023}</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn><mo>∗</mo><mn>2</mn><mi>τ</mi><mo separator="true">,</mo><mo separator="true">⋅</mo><mo separator="true">⋅</mo><mo separator="true">⋅</mo><mo separator="true">,</mo><mn>1023</mn><mo>∗</mo><mn>2</mn><mi>τ</mi></mrow><annotation encoding="application/x-tex">0*2\tau,···,1023*2\tau</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">2</span><span class="mord mathdefault" style="margin-right:0.1132em;">τ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">2</span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord mathdefault" style="margin-right:0.1132em;">τ</span></span></span></span></td><td></td></tr></tbody></table><p>以太网的信道利用率：<br>理想情况下的极限信道利用率：<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mrow><mi>m</mi><mi>a</mi><mi>x</mi></mrow></msub><mo>=</mo><mfrac><msub><mi>T</mi><mn>0</mn></msub><mrow><msub><mi>T</mi><mn>0</mn></msub><mo>+</mo><mi>τ</mi></mrow></mfrac><mo>=</mo><mfrac><mn>1</mn><mrow><mn>1</mn><mo>+</mo><mi>α</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">S_{max}=\frac{T_0}{T_0+\tau}=\frac{1}{1+\alpha}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.3335309999999998em;vertical-align:-0.44509999999999994em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8884309999999999em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mathdefault mtight" style="margin-right:0.1132em;">τ</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2484389999999999em;vertical-align:-0.403331em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.403331em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi><mo>=</mo><mfrac><mi>τ</mi><msub><mi>T</mi><mn>0</mn></msub></mfrac><mo separator="true">,</mo><mi>τ</mi><mtext>尽可能小，指端到端的距离受限，</mtext><msub><mi>T</mi><mn>0</mn></msub><mtext>尽可能大，指数据帧长尽可能的长</mtext></mrow><annotation encoding="application/x-tex">\alpha=\frac{\tau}{T_0},\tau尽可能小，指端到端的距离受限，T_0尽可能大，指数据帧长尽可能的长</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.140492em;vertical-align:-0.44509999999999994em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.695392em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.1132em;">τ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.1132em;">τ</span><span class="mord cjk_fallback">尽</span><span class="mord cjk_fallback">可</span><span class="mord cjk_fallback">能</span><span class="mord cjk_fallback">小</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">指</span><span class="mord cjk_fallback">端</span><span class="mord cjk_fallback">到</span><span class="mord cjk_fallback">端</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">距</span><span class="mord cjk_fallback">离</span><span class="mord cjk_fallback">受</span><span class="mord cjk_fallback">限</span><span class="mord cjk_fallback">，</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">尽</span><span class="mord cjk_fallback">可</span><span class="mord cjk_fallback">能</span><span class="mord cjk_fallback">大</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">指</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">据</span><span class="mord cjk_fallback">帧</span><span class="mord cjk_fallback">长</span><span class="mord cjk_fallback">尽</span><span class="mord cjk_fallback">可</span><span class="mord cjk_fallback">能</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">长</span></span></span></span></p><h4 id="csma-ca">CSMA/CA</h4><p>802.11无线局域网使用CSMA/CA协议，同时还使用停止等待协议实现可靠传输（包含确认机制）<br>802.11标准规定：所有站点<strong>必须持续检测到信道空闲一段指定时间后才能发送帧</strong><br>帧间间隔：</p><ol><li>短帧间间隔SIFS<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>28</mn><mi>μ</mi><mi>s</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(28{\mu}s)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">2</span><span class="mord">8</span><span class="mord"><span class="mord mathdefault">μ</span></span><span class="mord mathdefault">s</span><span class="mclose">)</span></span></span></span>:用于分隔开属于一次对话的各帧</li><li>DCF帧间间隔DIFS<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>128</mn><mi>μ</mi><mi>s</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(128{\mu}s)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mord">2</span><span class="mord">8</span><span class="mord"><span class="mord mathdefault">μ</span></span><span class="mord mathdefault">s</span><span class="mclose">)</span></span></span></span>:用来发送数据帧和管理帧</li></ol><p>退避算法的使用情况：</p><ol><li>发送数据帧前检测信道忙状态</li><li>每一次重传数据帧前</li><li>每一次成功发送数据帧后要连续发送下一帧，避免长时间占用信道</li></ol><p>信道预约：<br><img src="https://raw.githubusercontent.com/crayz-l/Learning_picgo/main/img/%E8%AE%A1%E7%BD%91chapter3-7" alt="image.png"></p><p>虚拟载波监听：<br><img src="https://raw.githubusercontent.com/crayz-l/Learning_picgo/main/img/%E8%AE%A1%E7%BD%91chapter3-8" alt="image.png"></p><h2 id="7-mac地址-ip地址-arp协议">7.MAC地址，IP地址，ARP协议</h2><h3 id="1-mac地址">1.MAC地址</h3><p>概念：用于媒体接入控制的地址，具体来说，每个主机发送的<strong>帧中必须携带发送主机和接收主机的地址</strong>。<br>一般固化在网卡的电可擦可编程只读存储器EEPROM中，也被称为<strong>硬件地址</strong><br><img src="https://raw.githubusercontent.com/crayz-l/Learning_picgo/main/img/%E8%AE%A1%E7%BD%91chapter3-9" alt="image.png"><br>也被称为<strong>物理地址</strong>，但不属于物理层<br>严格来说，MAC地址是对网络上各接口的唯一标识</p><p>表示方式：</p><ol><li>XX-XX-XX-XX-XX-XX，如00-0C-CF-93-8C-92</li><li>XX:XX:XX:XX:XX:XX，如00:0C:CF:93:8C</li><li>XXXX.XXXX.XXXX，如000C.CF93.8C92</li></ol><p>地址格式：<br>第一字节的b1位：</p><ul><li>0：全球管理</li><li>1：本地管理<br>第一字节的b0位：</li><li>0：单播</li><li>1：多播</li></ul><p><img src="https://raw.githubusercontent.com/crayz-l/Learning_picgo/main/img/%E8%AE%A1%E7%BD%91chapter3-10" alt="image.png"></p><h3 id="2-ip地址">2.IP地址</h3><p>IP地址是Internet上的主机和路由器所使用的地址，标识两部分信息：</p><ol><li>网络编号：标识Internet上数以百万计的网络</li><li>主机编号：标识同一网络上不同主机（或路由器各接口）</li></ol><p>数据包转发过程中：</p><ol><li>源IP地址和目的IP地址保持不变</li><li>源MAC地址和目的MAC地址随网络和链路的变化而变化</li></ol><h3 id="3-arp协议">3.ARP协议</h3><p>源主机在自己的<strong>ARP高速缓存表</strong>中查找目的主机的IP地址和MAC地址，若有，则封装MAC帧发送；若无，则发送<strong>ARP请求（广播）</strong></p><p>目的主机收到请求后，先记录源主机的IP地址和MAC地址，再发送<strong>ARP响应（IP地址和MAC地址）</strong> 到源主机</p><p>作用范围：逐段链路或逐个网络</p><p>还存在用于检查ip地址冲突的无效ARP、免费ARP<br>存在ARP欺骗（攻击）问题</p><h2 id="8-集线器和交换机的区别">8.集线器和交换机的区别</h2><ol><li>集线器HUB<ol><li>早期以太网的互连设备</li><li>工作在OSI体系结构的物理层</li><li>扩大、转发接收到的信号</li><li>使用集线器作为互连设备的以太网仍属于共享总线式以太网，连接起来的所有主机仍共享一条总线</li></ol></li><li>交换机SWITCH<ol><li>目前以太网中使用最广泛的互连设备</li><li>工作在OSI体系结构的数据链路层（也包括物理层）</li><li>根据MAC地址对帧进行转发</li><li>使用交换机作为互连设备的以太网（交换式以太网），可以根据MAC地址过滤帧，隔离了碰撞域</li><li>交换机的每一个接口是一个独立的碰撞域</li><li>交换机隔离碰撞域但不隔离广播域（VLAN除外）</li><li>即插即用，帧交换表通过<strong>自学习算法</strong>建立</li><li>转发方式：存储转发、直通交换</li></ol></li></ol><h2 id="9-交换机自学习和转发帧的流程">9.交换机自学习和转发帧的流程</h2><p><img src="https://raw.githubusercontent.com/crayz-l/Learning_picgo/main/img/%E8%AE%A1%E7%BD%91chapter3-11" alt="image.png"></p><table><thead><tr><th style="text-align:center">行为</th><th style="text-align:center">表1</th><th style="text-align:center">表2</th></tr></thead><tbody><tr><td style="text-align:center">A-&gt;B</td><td style="text-align:center">登记，盲目转发</td><td style="text-align:center">登记，盲目转发</td></tr><tr><td style="text-align:center">B-&gt;A</td><td style="text-align:center">登记，明确转发</td><td style="text-align:center">收不到</td></tr><tr><td style="text-align:center">E-&gt;A</td><td style="text-align:center">登记，明确转发</td><td style="text-align:center">登记，明确转发</td></tr></tbody></table><p>登记的过程称为自学习<br>盲目转发的情况在于帧交换表中不存在目的MAC地址，需要通过泛洪来寻址<br>MAC地址与交换机接口的对应关系并非永久性，所以每条记录存在生命周期<br>如下为交换表1经过上述操作后的新表1</p><table><thead><tr><th style="text-align:center">MAC地址</th><th style="text-align:center">接口</th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:center">1</td></tr><tr><td style="text-align:center">B</td><td style="text-align:center">3<br></td></tr><tr><td style="text-align:center">E</td><td style="text-align:center">4</td></tr></tbody></table><p>如下为交换表2经过上述操作后的新表2</p><table><thead><tr><th style="text-align:center">MAC地址</th><th style="text-align:center">接口</th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:center">1</td></tr><tr><td style="text-align:center">E</td><td style="text-align:center">3</td></tr><tr><td style="text-align:center"></td><td style="text-align:center"></td></tr></tbody></table><h2 id="10-以太网交换机的生成树协议stp">10.以太网交换机的生成树协议STP</h2><p>增加冗余链路的优点：提高以太网的可靠性<br>缺点：</p><ol><li>广播风暴：大量消耗网络资源，使网络无法正常转发其他数据帧</li><li>主机收到重复的广播帧：大量消耗主机资源</li><li>交换机的帧交换表震荡</li></ol><p><strong>生成树协议STP</strong> ：为了使交换机增加冗余链路的情况下避免网络环路带来的各种问题</p><ol><li>无论交换机间采用怎样的物理连接，交换机都能<strong>自动计算并构建一个逻辑上无环路的网络</strong>，逻辑拓扑结构为树型</li><li>树型逻辑拓扑要连通整个网络</li><li>当物理拓扑发生变化时，交换机将<strong>重新进行生成树的计算</strong></li></ol><h2 id="11-虚拟局域网vlan">11.虚拟局域网VLAN</h2><h3 id="11-1-概述">11.1 概述</h3><p>交换式以太网规模的扩大，广播域随之扩大，而巨大的广播域会造成广播风暴、难以管理和维护还有潜在的安全问题</p><p>虚拟局域网VLAN：将局域网内的设备划分成与物理位置无关的逻辑组，逻辑组中有共同的需求</p><h3 id="11-2-vlan的实现机制">11.2 VLAN的实现机制</h3><p>两个前置要求：</p><ol><li>IEEE 802.1 Q帧：基于以太网的MAC帧进行扩展，插入4字节的VLAN标记<br><img src="https://raw.githubusercontent.com/crayz-l/Learning_picgo/main/img/%E8%AE%A1%E7%BD%91chapter3-12" alt="image.png"><br>VLAN标记的<strong>最后12比特</strong>称为VLAN标识符VID，唯一标识以太网帧属于哪一个VLAN<br>取值范围：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn><mo>−</mo><msup><mn>2</mn><mn>12</mn></msup><mo>−</mo><mn>1</mn><mi mathvariant="normal">/</mi><mn>0</mn><mo>−</mo><mn>4095</mn></mrow><annotation encoding="application/x-tex">0-2^{12}-1/0-4095</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">/</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">4</span><span class="mord">0</span><span class="mord">9</span><span class="mord">5</span></span></span></span><br>有效取值范围：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>−</mo><mn>4094</mn></mrow><annotation encoding="application/x-tex">1-4094</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">4</span><span class="mord">0</span><span class="mord">9</span><span class="mord">4</span></span></span></span>(0,4095不用来表示VLAN)<br>802.1 Q帧<strong>由交换机处理</strong><ol><li>交换机收到<strong>普通以太网帧</strong>时，插入VLAN标记转变成802.1 Q帧，<em>“打标签”</em></li><li>转发802.1 Q帧，<strong>可能</strong>会删除VLAN标记转变成普通以太网帧，<em>“去标签”</em></li></ol></li><li>交换机的端口类型<br>前置：交换机各端口的缺省VLAN ID<br>1. 思科交换机：Native VLAN，即本征VLAN<br>2. 华为交换机：Port VLAN ID，即端口VLAN ID，简记为PVID（网课中所采用）<ol><li>Access<ol><li>一般用于连接用户计算机，只属于一个VLAN，PVID值与端口所属VLAN的ID相同</li><li>接收处理方法：接受普通以太网帧，进行 <strong>”打标签“</strong>，VID取值与端口PVID相等</li><li>发送处理方法：若帧中VID与端口的PVID相等，则 <strong>“去标签”并转发</strong></li></ol></li><li>Trunk<ol><li>一般用于交换机之间或交换机与路由器互连，可属于多个VLAN，用户可设置Trunk端口的PVID（默认是1）</li><li>发送处理方法：<ul><li>对VID=PVID的帧，“去标签”再转发</li><li>VID!=PVID的帧，直接转发</li></ul></li><li>接收处理方法：<ul><li>接收“未打标签”的帧，根据接收端口的PVID给帧”打标签“，VID=端口PVID</li><li>接收“已有标签的帧”</li></ul></li></ol></li><li>Hybrid（华为）<ol><li>既用于交换机之间或交换机与路由器互连，也可用于交换机与用户计算机互连</li><li>属于多个VLAN，可自设定PVID值</li><li>发送处理方法：<ul><li>查看帧VID是否在端口“去标签”列表中</li><li>若存在，则“去标签”后转发</li><li>不存在则直接转发</li></ul></li><li>接受处理方法：<ul><li>接收“未打标签”的帧，根据接收端口的PVID给帧”打标签“，VID=端口PVID</li><li>接收“已有标签的帧”</li></ul></li></ol></li></ol></li></ol>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计网Chapter2</title>
      <link href="/posts/363590279/"/>
      <url>/posts/363590279/</url>
      
        <content type="html"><![CDATA[<h2 id="1-物理层的基本概念">1.物理层的基本概念</h2><p>物理层考虑的是怎样才能在连接各种计算机的传输媒体上传输数据比特流<br><img src="https://raw.githubusercontent.com/crayz-l/Learning_picgo/main/img/%E8%AE%A1%E7%BD%91chapter2.1-1" alt="image.png"></p><h2 id="2-传输媒体">2.传输媒体</h2><ol><li>导引型传输媒体<ol><li>双绞线</li><li>同轴电缆</li><li>光纤</li></ol></li><li>非导引型传输媒体<ol><li>微波通信（2~40GHz）：2.4GHz的WIFI</li></ol></li></ol><h2 id="3-编码与调制">3.编码与调制</h2><p>码元：在使用时间域的波形表示数字信号时，<strong>代表不同离散数值的基本波形</strong><br><img src="https://raw.githubusercontent.com/crayz-l/Learning_picgo/main/img/%E8%AE%A1%E7%BD%91chapter2.3-1" alt="image.png"></p><h2 id="4-信道的极限容量">4.信道的极限容量</h2><p>奈氏准则：在假定的理想条件下，<strong>为了避免码间串扰，码元传输速率是有上限的</strong><br>理想低通信道的最高码元传输速率 = 2W Baud = 2W 码元/秒<br>理想带通信道的最高码元传输速率 = W Baud = W 码元/秒<br>调制速度=码元传输速度<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>数据传输速率</mtext><mo>=</mo><mtext>波特率</mtext><mo>∗</mo><mtext>每个码元所携带的信息量</mtext></mrow><annotation encoding="application/x-tex">数据传输速率 = 波特率*每个码元所携带的信息量</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">据</span><span class="mord cjk_fallback">传</span><span class="mord cjk_fallback">输</span><span class="mord cjk_fallback">速</span><span class="mord cjk_fallback">率</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">波</span><span class="mord cjk_fallback">特</span><span class="mord cjk_fallback">率</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">每</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">码</span><span class="mord cjk_fallback">元</span><span class="mord cjk_fallback">所</span><span class="mord cjk_fallback">携</span><span class="mord cjk_fallback">带</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">信</span><span class="mord cjk_fallback">息</span><span class="mord cjk_fallback">量</span></span></span></span><br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>每个码元所携带的信息量：</mtext><msub><mo><mi>log</mi><mo>⁡</mo></mo><mn>2</mn></msub><mi>X</mi><mo separator="true">,</mo><mi>X</mi><mtext>为可调制出的不同基本波形或码元数量</mtext><mi mathvariant="normal">/</mi><mtext>信息状态数</mtext></mrow><annotation encoding="application/x-tex">每个码元所携带的信息量：\log_{2}{X},X为可调制出的不同基本波形或码元数量/信息状态数</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">每</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">码</span><span class="mord cjk_fallback">元</span><span class="mord cjk_fallback">所</span><span class="mord cjk_fallback">携</span><span class="mord cjk_fallback">带</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">信</span><span class="mord cjk_fallback">息</span><span class="mord cjk_fallback">量</span><span class="mord cjk_fallback">：</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.20696799999999996em;"><span style="top:-2.4558600000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24414em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mord cjk_fallback">为</span><span class="mord cjk_fallback">可</span><span class="mord cjk_fallback">调</span><span class="mord cjk_fallback">制</span><span class="mord cjk_fallback">出</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">不</span><span class="mord cjk_fallback">同</span><span class="mord cjk_fallback">基</span><span class="mord cjk_fallback">本</span><span class="mord cjk_fallback">波</span><span class="mord cjk_fallback">形</span><span class="mord cjk_fallback">或</span><span class="mord cjk_fallback">码</span><span class="mord cjk_fallback">元</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">量</span><span class="mord">/</span><span class="mord cjk_fallback">信</span><span class="mord cjk_fallback">息</span><span class="mord cjk_fallback">状</span><span class="mord cjk_fallback">态</span><span class="mord cjk_fallback">数</span></span></span></span><br>W：信道带宽（单位为Hz）<br>Baud：波特，即码元/秒<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><mo>=</mo><mn>2</mn><mo>∗</mo><mi>B</mi><msub><mo><mi>log</mi><mo>⁡</mo></mo><mn>2</mn></msub><mi>L</mi></mrow><annotation encoding="application/x-tex">R=2*B\log_{2}{L}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.93858em;vertical-align:-0.24414em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.20696799999999996em;"><span style="top:-2.4558600000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24414em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">L</span></span></span></span></span><br>B为信道带宽，L为码元数</p><p>香农公式：带宽受限且有高斯白噪声干扰的信道的极限信息传输速率<br>c=W*<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mo><mi>log</mi><mo>⁡</mo></mo><mn>2</mn></msub><mrow><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><mfrac><mi>S</mi><mi>N</mi></mfrac><mo stretchy="false">)</mo></mrow></mrow><annotation encoding="application/x-tex">\log_{2}{(1+\frac{S}{N})}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.217331em;vertical-align:-0.345em;"></span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.20696799999999996em;"><span style="top:-2.4558600000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24414em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span></span></span><br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi><mo>:</mo><mtext>信道的极限信息传输速率（单位：</mtext><mi>b</mi><mi mathvariant="normal">/</mi><mi>s</mi><mtext>）</mtext></mrow><annotation encoding="application/x-tex">c:信道的极限信息传输速率（单位：b/s）</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">信</span><span class="mord cjk_fallback">道</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">极</span><span class="mord cjk_fallback">限</span><span class="mord cjk_fallback">信</span><span class="mord cjk_fallback">息</span><span class="mord cjk_fallback">传</span><span class="mord cjk_fallback">输</span><span class="mord cjk_fallback">速</span><span class="mord cjk_fallback">率</span><span class="mord cjk_fallback">（</span><span class="mord cjk_fallback">单</span><span class="mord cjk_fallback">位</span><span class="mord cjk_fallback">：</span><span class="mord mathdefault">b</span><span class="mord">/</span><span class="mord mathdefault">s</span><span class="mord cjk_fallback">）</span></span></span></span><br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>W</mi><mo>:</mo><mtext>信道带宽（单位：</mtext><mi>H</mi><mi>z</mi><mtext>）</mtext></mrow><annotation encoding="application/x-tex">W:信道带宽（单位：Hz）</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">信</span><span class="mord cjk_fallback">道</span><span class="mord cjk_fallback">带</span><span class="mord cjk_fallback">宽</span><span class="mord cjk_fallback">（</span><span class="mord cjk_fallback">单</span><span class="mord cjk_fallback">位</span><span class="mord cjk_fallback">：</span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mord cjk_fallback">）</span></span></span></span><br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo>:</mo><mtext>信道内所传信号的平均功率</mtext></mrow><annotation encoding="application/x-tex">S:信道内所传信号的平均功率</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">信</span><span class="mord cjk_fallback">道</span><span class="mord cjk_fallback">内</span><span class="mord cjk_fallback">所</span><span class="mord cjk_fallback">传</span><span class="mord cjk_fallback">信</span><span class="mord cjk_fallback">号</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">平</span><span class="mord cjk_fallback">均</span><span class="mord cjk_fallback">功</span><span class="mord cjk_fallback">率</span></span></span></span><br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi><mo>:</mo><mtext>信道内的高斯噪声功率</mtext></mrow><annotation encoding="application/x-tex">N:信道内的高斯噪声功率</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">信</span><span class="mord cjk_fallback">道</span><span class="mord cjk_fallback">内</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">高</span><span class="mord cjk_fallback">斯</span><span class="mord cjk_fallback">噪</span><span class="mord cjk_fallback">声</span><span class="mord cjk_fallback">功</span><span class="mord cjk_fallback">率</span></span></span></span><br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mi>S</mi><mi>N</mi></mfrac><mo>:</mo><mtext>信噪比，使用分贝（</mtext><mi>d</mi><mi>B</mi><mtext>）作为度量单位</mtext></mrow><annotation encoding="application/x-tex">\frac{S}{N}:信噪比，使用分贝（dB）作为度量单位</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.217331em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord cjk_fallback">信</span><span class="mord cjk_fallback">噪</span><span class="mord cjk_fallback">比</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">使</span><span class="mord cjk_fallback">用</span><span class="mord cjk_fallback">分</span><span class="mord cjk_fallback">贝</span><span class="mord cjk_fallback">（</span><span class="mord mathdefault">d</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord cjk_fallback">）</span><span class="mord cjk_fallback">作</span><span class="mord cjk_fallback">为</span><span class="mord cjk_fallback">度</span><span class="mord cjk_fallback">量</span><span class="mord cjk_fallback">单</span><span class="mord cjk_fallback">位</span></span></span></span><br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>信噪比（</mtext><mi>d</mi><mi>B</mi><mtext>）</mtext><mo>=</mo><mn>10</mn><mo>∗</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>10</mn></msub><mfrac><mi>S</mi><mi>N</mi></mfrac><mo stretchy="false">(</mo><mi>d</mi><mi>B</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">信噪比（dB）= 10*log_{10}{\frac{S}{N}} (dB)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord cjk_fallback">信</span><span class="mord cjk_fallback">噪</span><span class="mord cjk_fallback">比</span><span class="mord cjk_fallback">（</span><span class="mord mathdefault">d</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord cjk_fallback">）</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.217331em;vertical-align:-0.345em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mopen">(</span><span class="mord mathdefault">d</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mclose">)</span></span></span></span></p>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计网Chapter 1</title>
      <link href="/posts/2296455701/"/>
      <url>/posts/2296455701/</url>
      
        <content type="html"><![CDATA[<h2 id="1-2-因特网">1.2 因特网</h2><h3 id="概念">概念</h3><ol><li>网络：由若干<strong>结点</strong>（Node）和<strong>链路</strong>（Link）组成</li><li>互联网：通过路由将网络连接而成的更大的网络</li><li>因特网（Internet）：世界上最大的互连网络<ol><li>组成：<ol><li>边缘部分：由所有连接到Internet上的主机组成，由用户直接使用，用于通信和资源共享</li><li>核心部分：由<strong>大量网络</strong>和连接网络的<strong>路由器</strong>组成，<strong>为边缘部分提供服务</strong></li></ol></li></ol></li></ol><h2 id="1-3-三种交换方式">1.3 三种交换方式</h2><h3 id="电路交换">电路交换</h3><p>电路交换的步骤</p><ol><li>建立连接（分配通信资源）</li><li>通话（占用通信资源）</li><li>释放连接（归还通信资源）</li></ol><h3 id="报文交换和分组交换">报文交换和分组交换</h3><p>报文：表示消息的整块数据</p><p>分组交换：将完整报文分成等长数据段，添加含有相关信息（如目的地址）的首部，通过不同路由器/交换机发送分组</p><h3 id="三种方式的优缺点">三种方式的优缺点</h3><ol><li>电路交换：<ul><li>优点：通信时延小；有序传输；无冲突；适用范围广；实时性强；控制简单</li><li>缺点：建立连接时间长；线路独占，使用效率低；灵活性差；难以规格化</li></ul></li><li>报文交换<ul><li>优点：无需建立连接；动态分配线路；提高线路可靠性；提高线路利用率；提供多目标服务</li><li>缺点：引起转发时延；交换机需要较大的存储转发空间；需要传输额外信息</li></ul></li><li>分组交换<ul><li>优点：无需建立连接；线路利用率高；简化了存储管理；加速传输；减少出错概率和重发数据量</li><li>缺点：引起转发时延；需要传输额外的信息量；对于数据报服务，存在失序、丢失或重复分组的问题；对于虚电路服务，存在呼叫建立、数据传输和虚电路释放三个过程</li></ul></li></ol><h2 id="1-4-计算机网络的定义和分类">1.4 计算机网络的定义和分类</h2><h3 id="定义">定义</h3><p>计算机的精确定义并未统一。<br>计算机的最简单的定义：一些互相连接的、自治的计算机的集合</p><ul><li>互连：指计算机之间可以通过有线或无线的方式进行数据通信</li><li>自治：指独立的计算机，有自己的软硬件，可单独运行</li><li>集合：两台或两台以上的计算机</li></ul><h3 id="分类">分类</h3><p>按交换技术分类：</p><ol><li>电路交换网络</li><li>报文交换网络</li><li>分组交换网络</li></ol><p>按使用者分类：</p><ol><li>公用网</li><li>专用网</li></ol><p>按传输介质分类：</p><ol><li>有线网络：双绞线网络，光纤网络</li><li>无线网络</li></ol><p>按覆盖范围分类：</p><ol><li>广域网WAN</li><li>城域网MAN</li><li>局域网LAN</li><li>个域网PAN</li></ol><p>按拓扑结构分类：</p><ol><li>总线型网络</li><li>星型网络</li><li>环型网络</li><li>网状型网络</li></ol><h2 id="1-5-计算机网络的性能指标">1.5 计算机网络的性能指标</h2><p>常用的性能指标：</p><ol><li>速率<ol><li>比特：计算机中<em><strong>数据量的单位</strong></em><br>常用的数据量单位：8 bit = 1 Byte, KB = <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>10</mn></msup></mrow><annotation encoding="application/x-tex">2^{10}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">0</span></span></span></span></span></span></span></span></span></span></span></span> B, MB = <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>20</mn></msup></mrow><annotation encoding="application/x-tex">2^{20}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">0</span></span></span></span></span></span></span></span></span></span></span></span> B , GB = <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>30</mn></msup></mrow><annotation encoding="application/x-tex">2^{30}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">0</span></span></span></span></span></span></span></span></span></span></span></span> B , TB = <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>40</mn></msup></mrow><annotation encoding="application/x-tex">2^{40}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span><span class="mord mtight">0</span></span></span></span></span></span></span></span></span></span></span></span> B</li><li>速率：连接在计算机网络上的主机在数字信道上传送比特的速率，也称<strong>比特率</strong>或<strong>数据率</strong><br>常用的数据率单位 bit/s (b/s、bps) , kb/s = <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><msup><mn>0</mn><mn>3</mn></msup></mrow><annotation encoding="application/x-tex">10^3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span></span></span> b/s , Mb/s = <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><msup><mn>0</mn><mn>6</mn></msup></mrow><annotation encoding="application/x-tex">10^6</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span></span></span></span></span></span></span></span> b/s , Gb/s = <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><msup><mn>0</mn><mn>9</mn></msup></mrow><annotation encoding="application/x-tex">10^9</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">9</span></span></span></span></span></span></span></span></span></span></span> b/s , Tb/s = <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><msup><mn>0</mn><mn>12</mn></msup></mrow><annotation encoding="application/x-tex">10^{12}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span> b/s</li></ol></li><li>带宽<ol><li>定义：在单位时间内从网络中的某一点到另一点所能通过的”<strong>最高数据率</strong>“</li><li>单位：b/s （kb/s，Mb/s，Gb/s，Tb/s）</li></ol></li><li>吞吐量<ol><li>定义：表示单位时间内通过某个网络（或信道、接口）的数据量</li><li>吞吐量受带宽或额定速率限制</li></ol></li><li>时延<ol><li>构成部分：发送时延，传播时延，处理时延</li><li>发送时延：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mrow><mtext>分组长度</mtext><mo stretchy="false">(</mo><mi>b</mi><mo stretchy="false">)</mo></mrow><mrow><mtext>发送速率</mtext><mo stretchy="false">(</mo><mi>b</mi><mi mathvariant="normal">/</mi><mi>s</mi><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{分组长度(b)}{发送速率(b/s)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.53em;vertical-align:-0.52em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">发</span><span class="mord cjk_fallback mtight">送</span><span class="mord cjk_fallback mtight">速</span><span class="mord cjk_fallback mtight">率</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">b</span><span class="mord mtight">/</span><span class="mord mathdefault mtight">s</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">分</span><span class="mord cjk_fallback mtight">组</span><span class="mord cjk_fallback mtight">长</span><span class="mord cjk_fallback mtight">度</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">b</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></li><li>传播速率：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mrow><mtext>信道长度</mtext><mo stretchy="false">(</mo><mi>m</mi><mo stretchy="false">)</mo></mrow><mrow><mtext>电磁波传播速率</mtext><mo stretchy="false">(</mo><mi>m</mi><mi mathvariant="normal">/</mi><mi>s</mi><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{信道长度(m)}{电磁波传播速率(m/s)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.53em;vertical-align:-0.52em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">电</span><span class="mord cjk_fallback mtight">磁</span><span class="mord cjk_fallback mtight">波</span><span class="mord cjk_fallback mtight">传</span><span class="mord cjk_fallback mtight">播</span><span class="mord cjk_fallback mtight">速</span><span class="mord cjk_fallback mtight">率</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">m</span><span class="mord mtight">/</span><span class="mord mathdefault mtight">s</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">信</span><span class="mord cjk_fallback mtight">道</span><span class="mord cjk_fallback mtight">长</span><span class="mord cjk_fallback mtight">度</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">m</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><ol><li>电磁波传播速率： 在自由空间中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>3</mn><mo>∗</mo><mn>1</mn><msup><mn>0</mn><mn>8</mn></msup><mi>m</mi><mi mathvariant="normal">/</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">3*10^8 m/s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">8</span></span></span></span></span></span></span></span><span class="mord mathdefault">m</span><span class="mord">/</span><span class="mord mathdefault">s</span></span></span></span>  , 在铜线中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2.3</mn><mo>∗</mo><mn>1</mn><msup><mn>0</mn><mn>8</mn></msup><mi>m</mi><mi mathvariant="normal">/</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">2.3*10^8 m/s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">.</span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">8</span></span></span></span></span></span></span></span><span class="mord mathdefault">m</span><span class="mord">/</span><span class="mord mathdefault">s</span></span></span></span>, 在光纤中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2.0</mn><mo>∗</mo><mn>1</mn><msup><mn>0</mn><mn>8</mn></msup><mi>m</mi><mi mathvariant="normal">/</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">2.0*10^8 m/s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">.</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">8</span></span></span></span></span></span></span></span><span class="mord mathdefault">m</span><span class="mord">/</span><span class="mord mathdefault">s</span></span></span></span></li></ol></li></ol></li><li>时延带宽积<ol><li>定义：传播时延与带宽的乘积</li><li>若发送端连续发送数据，则在所发送的第一个比特即将到达终点时，发送端就已发送<strong>时延带宽积</strong>个比特</li><li>链路的时延带宽积又称为<strong>以比特为单位的链路长度</strong></li></ol></li><li>往返时间（RTT）<ol><li>从源主机发送分组开始到源主机收到来自目的主机的确认分组为止所耗费的时间</li></ol></li><li>利用率<ol><li>信道利用率：用来表示某信道有百分之几的时间是被利用的（有数据通过）<ol><li><strong>信道利用率并非越高越好</strong></li><li>如果令<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">D_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 表示网络空闲时的时延，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span></span></span></span>表示网络当前的时延，在适当条件，可用<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi><mo>=</mo><mfrac><msub><mi>D</mi><mn>0</mn></msub><mrow><mn>1</mn><mo>−</mo><mi>U</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">D = \frac{D_0}{1-U}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2917619999999999em;vertical-align:-0.403331em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8884309999999999em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.10903em;">U</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.02778em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.403331em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 表示<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span></span></span></span>,<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">D_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>,<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>U</mi></mrow><annotation encoding="application/x-tex">U</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span></span></span></span>之间的关系</li><li>网络利用率达到50%时，时延加倍，超过50%，时延急剧增大</li></ol></li><li>网络利用率：全网络的信道利用率的加权平均</li></ol></li><li>丢包率<ol><li>定义：一定时间范围内，<strong>丢失分组数与总分组数的比率</strong></li><li>分组丢失的原因：分组误码，结点交换机缓存队列满（网络堵塞）</li></ol></li></ol><h2 id="1-6-计算机网络体系结构">1.6 计算机网络体系结构</h2><h3 id="1-常见的计算机网络体系结构">1.常见的计算机网络体系结构</h3><ol><li>OSI体系结构：<ol><li>物理层</li><li>数据链路层</li><li>网络层</li><li>运输层</li><li>会话层</li><li>表示层</li><li>应用层</li></ol></li><li>TCP/IP体系机构（事实上的网络体系结构）：<ol><li>网络接口层</li><li>网络层/网际层</li><li>运输层</li><li>应用层</li></ol></li><li>原理体系结构<ol><li>物理层</li><li>数据链路层</li><li>网络层</li><li>运输层</li><li>应用层</li></ol></li></ol><h3 id="2-计算机网络体系结构分层的必要性">2.计算机网络体系结构分层的必要性</h3><p>物理层：解决使用何种信号传输比特的问题<br>数据链路层：解决分组在一个网络（或一段链路）上传输的问题<br>网络层：解决分组在多个网络上传输（路由）的问题<br>运输层：解决进程间基于网络的通信问题<br>应用层：解决通过应用进程的交互来实现特定网络应用的问题</p><h3 id="3-计算机网络体系结构的专用术语">3.计算机网络体系结构的专用术语</h3><ol><li>实体 任何可发送或接收信息的<strong>硬件</strong>或<strong>软件进程</strong></li><li>协议 控制两个对等实体进行逻辑通信的规则的集合 <strong>水平</strong><ul><li>协议的三要素：<ol><li>语法 定义所交换信息的格式</li><li>语义 定义收发双方所要完成的操作</li><li>同步 定义收发双方的时序关系</li></ol></li></ul></li><li>服务 在协议的控制下，两个对等实体间的逻辑通信使得本层能够向上一层提供服务 <strong>垂直</strong><ul><li>服务访问点 在同一系统中<strong>相邻两层的实体交换信息的逻辑接口</strong>，用于区分不同服务类型<ul><li>数据链路层：帧的“类型”字段</li><li>网络层：IP数据报首部中的“协议”字段</li><li>运输层：端口号</li></ul></li><li>服务原语 上层使用下层所提供的服务必须通过与下层<strong>交换一些命令</strong></li><li>协议数据单元<strong>PDU</strong> <em><strong>对等层次间传送的数据包</strong></em>称为该层的协议数据单元<ul><li>物理层：比特流</li><li>链路层：帧</li><li>网络层：IP数据报或分组</li><li>运输层：TCP报文段 或 UDP用户数据报</li><li>应用层：报文</li></ul></li><li>服务数据单元<strong>SDU</strong> <em><strong>同一系统内，层与层之间交换的数据包</strong></em>称为服务数据单元</li><li>多个SDU可合成一个PDU，一个SDU也可划分为PDU</li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DataBase 数据类型</title>
      <link href="/posts/129956530/"/>
      <url>/posts/129956530/</url>
      
        <content type="html"><![CDATA[<h1 id="string-类型">String 类型</h1><ul><li>CHAR 固定长度字符串<ul><li>char会开辟指定个字符的一个储存空间，假如存放一个字符A，剩余的字符空着放那，别的字符也不可以使用。</li></ul></li><li>VARCHAR 可变长度字符串 max：64KB<ul><li>varchar会根据我们存放的字符的长度来开辟存储空间。</li></ul></li><li>LONGTEXT 长文本串 max：4GB</li></ul><h1 id="整数类型">整数类型</h1><ul><li>TINYINT<ul><li>占用字节：1B，数值范围：[-128, 127]</li></ul></li><li>UNSIGNED TINYINT (无符号微整型)<ul><li>数值范围：[0, 255]</li></ul></li><li>SMALLINT<ul><li>占用字节：2B，数值范围：[-32K, 32K]</li></ul></li><li>MEDIUMINT<ul><li>占用字节：3B，数值范围：[-8M, 8M]</li></ul></li><li>INT<ul><li>占用字节：4B，数值范围：[-2B, 2B]</li></ul></li><li>BIGINT<ul><li>占用字节：8B，数值范围：[-9Z, 9Z]</li></ul></li></ul><h1 id="浮点数类型">浮点数类型</h1><ul><li>DECIMAL(p,s)<ul><li>用于存储定点数 ，p决定存储数字的最大位数（包括整数位数和小数位数），s决定小数点后的位数</li></ul></li><li>FLOAT<ul><li>占用字节：4B</li></ul></li><li>DOUBLE<ul><li>占用字节：8B</li></ul></li><li>FLOAT和DOUBLE可用于存储对精度要求不高的数据</li></ul><h1 id="布尔类型">布尔类型</h1><p>BOOLEAN/BOOL  存储True或FALSE</p><h1 id="日期和时间类型">日期和时间类型</h1><ul><li>DATE<ul><li>只能存储到日期，无法存储具体时间</li></ul></li><li>TIME</li><li>DATETIME<ul><li>占用字节：8b</li></ul></li><li>TIMESTAMP（时间戳）<ul><li>占用字节：4b，只能存储到2038年以前的时间</li></ul></li><li>YEAR<ul><li>用于存储四位数的年份</li></ul></li></ul><h1 id="json类型">JSON类型</h1><h2 id="创建json对象-假设表中已有json类型的属性">创建JSON对象（假设表中已有JSON类型的属性）</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 法1</span></span><br><span class="line"><span class="keyword">UPDATE</span> products</span><br><span class="line"><span class="keyword">SET</span> properties <span class="operator">=</span> <span class="string">&#x27;</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">&quot;dimensions&quot; : [1,2,3],</span></span><br><span class="line"><span class="string">&quot;weight&quot; : 10,</span></span><br><span class="line"><span class="string">&quot;manufacturer&quot;:&#123;&quot;name&quot;:&quot;sony&quot;&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#x27;</span></span><br><span class="line"><span class="keyword">WHERE</span> product_id <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 法2</span></span><br><span class="line"><span class="keyword">UPDATE</span> products</span><br><span class="line"><span class="keyword">SET</span> properties <span class="operator">=</span> <span class="built_in">JSON_OBJECT</span>(</span><br><span class="line"><span class="string">&#x27;weight&#x27;</span>,<span class="number">10</span>,</span><br><span class="line"><span class="string">&#x27;dimensions&#x27;</span>,<span class="built_in">JSON_ARRAY</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>),</span><br><span class="line"><span class="string">&#x27;manufacturer&#x27;</span>,<span class="built_in">JSON_OBJECT</span>(<span class="string">&#x27;name&#x27;</span>,<span class="string">&#x27;sony&#x27;</span>)</span><br><span class="line">)</span><br><span class="line"><span class="keyword">WHERE</span> product_id <span class="operator">=</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="json函数">JSON函数</h2><ul><li>JSON_OBJECT（参数1，参数2，…，参数n）<ul><li>参数1传入键（用引号括起的字符串）</li><li>参数2传入值</li></ul></li><li>JSON_ARRAY（参数1,…,参数n）<ul><li>用于建设长度为n的数组，传入的参数为数组内的值</li></ul></li><li>JSON_EXTRACT（参数1，参数2）<ul><li>参数1为JSON属性</li><li>参数2为要读取的键值对</li><li>示例：JSON_EXTRACT(properties,&quot;$.weight&quot;), $ 表示当前读取的JSON对象</li><li>简化写法：properties-&gt;’$.weight’，-&gt;&gt; 可用于读取不带引号的字符串</li></ul></li><li>JSON_SET（参数1，键1，值1，…)<ul><li>参数1传入JSON属性的列名</li><li>键1，值1，分别传入要修改的键和修改的值，键要用’$.键名’表示</li></ul></li><li>JSON_REMOVE(参数1，参数2，…)<ul><li>参数1传入JSON属性</li><li>参数2以后传入要删除的键</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DataBase 事务</title>
      <link href="/posts/1137404687/"/>
      <url>/posts/1137404687/</url>
      
        <content type="html"><![CDATA[<p>代表单个工作单元的一组SQL语句，在事务中的语句都应成功完成。<br>属性（ACID）：</p><ul><li>原子性(Atomicity) 事务不可中断,要么事务中所有语句被执行,要么事务被退回,执行的更改被撤销</li><li>一致性(Consistency) 数据库状态保持一致</li><li>隔离性质(Isolation) 事务之间彼此不受干扰，且一次只有一个事务可更新同样的数据（互斥）</li><li>持久性(Durability) 事务产生的更改是永久的</li></ul><h2 id="创建事务">创建事务</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">START</span> TRANSACTION; <span class="comment">-- 开启事务 </span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 要执行的语句</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">COMMIT</span>; <span class="comment">-- 关闭事务</span></span><br></pre></td></tr></table></figure><h2 id="常见并发问题">常见并发问题</h2><ul><li>脏读（Dirty Reads）<ul><li>事务读取了尚未被提交的数据</li></ul></li><li>不可重复读（Non-repeating Reads）<ul><li>就是一个事务读到另一个事务修改后并提交的数据（update）。在同一个事务中，<strong>对于同一组数据读取到的结果不一致</strong></li></ul></li><li>幻读（Phantom Reads）<ul><li>事务B前后两次读取同一个范围的数据，在事务B两次读取的过程中事务A新增了数据，导致事务B后一次读取到前一次查询没有看到的行</li></ul></li><li>丢失更新<ul><li>同时有多个事务更新同样的数据，后提交的事务覆盖先前的事务</li></ul></li><li>死锁<ul><li>多个事务拿着不同事务需要更新数据的锁</li><li>出现原因：<ul><li>多个事务里对于同样的数据采用相反顺序进行更新</li></ul></li><li>解决方案：<ul><li>更新多条记录时采用相同顺序</li><li>简化事务，缩小事务运行时长</li><li>安排运行时长长的事务（基于大表）在非高峰时段进行</li></ul></li></ul></li></ul><h2 id="事务隔离级别">事务隔离级别</h2><h3 id="设置事务隔离级别">设置事务隔离级别</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> VARIABLES <span class="keyword">LIKE</span> <span class="string">&#x27;transaction_isolation&#x27;</span>; <span class="comment">-- 查看数据库的事务隔离级别</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SET</span> TRANSACTION ISOLATION LEVEL [隔离级别] <span class="comment">-- 为某个事物设置隔离级别</span></span><br><span class="line"><span class="keyword">SET</span> SESSION TRANSACTION ISOLATION LEVEL [隔离级别]</span><br><span class="line"><span class="comment">-- 为会话或连接设置隔离级别</span></span><br><span class="line"><span class="keyword">SET</span> <span class="keyword">GLOBAL</span> TRANSACTIOn ISOLATION LEVEL [隔离级别]</span><br><span class="line"><span class="comment">-- 设置全局隔离级别</span></span><br></pre></td></tr></table></figure><ul><li>读未提交(READ UNCOMMITED)</li><li>读已提交(READ COMMITED)</li><li>可重复读(REPEATABLE READ)</li><li>序列化(SERIALIZABLE)  只在解决幻读问题的情况下使用该级别</li></ul>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DataBase 触发器和事件</title>
      <link href="/posts/1698569466/"/>
      <url>/posts/1698569466/</url>
      
        <content type="html"><![CDATA[<h1 id="触发器">触发器</h1><ul><li>MySQL触发器（Trigger）是一种特殊的存储过程，</li><li>它与表有关，当表上的特定事件（insert，update，delete）发生时，触发器会自动执行。</li><li>可以使用触发器来实现数据约束，数据验证，数据复制等功能<ul><li>数据复制：通过创建触发器，在给一张表插入数据的同时给另一张表插入同样的数据</li><li>数据验证：在插入或更新数据时，检查记录的某些字段是否符合要求，则拒绝插入或者更新，这样可以保证数据的完整性和一致性</li></ul></li><li>触发时间分为AFTER和BEFORE两种</li></ul><h2 id="创建触发器">创建触发器</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">DELIMITER $$</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TRIGGER</span> payments_after_delete</span><br><span class="line"> AFTER <span class="keyword">DELETE</span> <span class="keyword">ON</span> payments</span><br><span class="line"> <span class="keyword">FOR</span> <span class="keyword">EACH</span> <span class="type">ROW</span></span><br><span class="line"><span class="keyword">BEGIN</span> </span><br><span class="line"><span class="keyword">UPDATE</span> invoices</span><br><span class="line">    <span class="keyword">SET</span> payment_total <span class="operator">=</span> payment_total <span class="operator">-</span> OLD.amount</span><br><span class="line">    <span class="keyword">WHERE</span> invoice_id <span class="operator">=</span> OLD.invoice_id;</span><br><span class="line"><span class="keyword">END</span>$$</span><br><span class="line">DELIMITER ;</span><br></pre></td></tr></table></figure><h2 id="查看触发器">查看触发器</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> <span class="keyword">TRIGGER</span> </span><br></pre></td></tr></table></figure><h2 id="删除触发器">删除触发器</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TRIGGER</span> IF <span class="keyword">EXISTS</span> [触发器]</span><br></pre></td></tr></table></figure><h1 id="事件">事件</h1><p>根据计划执行的任务或一堆SQL代码</p><h2 id="创建事件">创建事件</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">DELIMITER $$</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> EVENT yearly_dalete_stale_audit_rows</span><br><span class="line"><span class="keyword">ON</span> SCHEDULE</span><br><span class="line"><span class="keyword">EVERY</span> <span class="number">1</span> <span class="keyword">YEAR</span> <span class="comment">-- 表示每年执行一次，可利用STARTS,ENDS 增加起止区间</span></span><br><span class="line"><span class="comment">-- AT + 具体日期 表示在该日期执行一次 </span></span><br><span class="line">DO <span class="keyword">BEGIN</span></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> payments_aduit</span><br><span class="line">    <span class="keyword">WHERE</span> action_date <span class="operator">&lt;</span> NOW() <span class="operator">-</span> <span class="type">INTERVAL</span> <span class="number">1</span> <span class="keyword">YEAR</span>;</span><br><span class="line"><span class="keyword">END</span>$$</span><br><span class="line"></span><br><span class="line">DELIMITER ;</span><br></pre></td></tr></table></figure><h2 id="查看事件">查看事件</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> EVENTS;</span><br></pre></td></tr></table></figure><h2 id="删除事件">删除事件</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> EVENT IF <span class="keyword">EXISTS</span> [事件]</span><br></pre></td></tr></table></figure><h2 id="更改事件">更改事件</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">DELIMITER $$</span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> EVENT yearly_dalete_stale_audit_rows <span class="comment">-- 关键字为ALTER</span></span><br><span class="line"><span class="keyword">ON</span> SCHEDULE</span><br><span class="line"><span class="keyword">AT</span> <span class="string">&#x27;2024-05-18&#x27;</span></span><br><span class="line">DO <span class="keyword">BEGIN</span></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> payments_aduit</span><br><span class="line">    <span class="keyword">WHERE</span> action_date <span class="operator">&lt;</span> NOW() <span class="operator">-</span> <span class="type">INTERVAL</span> <span class="number">1</span> <span class="keyword">YEAR</span>;</span><br><span class="line"><span class="keyword">END</span>$$</span><br><span class="line"></span><br><span class="line">DELIMITER ;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ALTER还可以暂时启用或关闭事件</span></span><br><span class="line"><span class="keyword">ALTER</span> EVENT [事件] DISABLE <span class="operator">/</span> ENABLE;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DataBase 存储过程</title>
      <link href="/posts/1132319962/"/>
      <url>/posts/1132319962/</url>
      
        <content type="html"><![CDATA[<p>存储过程是一个包含一堆SQL代码的数据库对象</p><p>修改默认分隔符的原因：<br>在MySQL中创建存储过程时，我们通常需要修改默认的分隔符。原因是MySQL默认使用分号（;）作为SQL语句的结束标志。但在存储过程中，我们可能需要使用多条SQL语句，并且这些语句也是以分号结束的。<br>如果不修改默认的分隔符，MySQL会在遇到第一个分号时就认为存储过程的定义结束了，从而导致存储过程的创建失败。因此，我们通常在创建存储过程前先设置一个临时的分隔符（例如 $$)，然后在存储过程结束后再将分隔符改回分号。</p><h2 id="创建存储过程">创建存储过程</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">DELIMITER $$ <span class="comment">-- 修改默认分隔符</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> get_invoices_with_balance()</span><br><span class="line"><span class="keyword">BEGIN</span> </span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line">    <span class="keyword">FROM</span> invoices_with_balance; <span class="comment">-- 在begin-end中，每一次的查询语句都用；分隔</span></span><br><span class="line"><span class="keyword">END</span>$$ <span class="comment">-- 使用修改后的默认分隔符来将begin-end中的内容视为一个整体</span></span><br><span class="line"></span><br><span class="line">DELIMITER ;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CALL</span> get_invoices_with_balance() <span class="comment">-- 使用call命令调用存储过程</span></span><br></pre></td></tr></table></figure><h2 id="删除存储过程">删除存储过程</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">PROCEDURE</span> IF <span class="keyword">EXISTS</span> get_invoices_with_balance; </span><br></pre></td></tr></table></figure><h2 id="创建带参数的存储过程">创建带参数的存储过程</h2><ul><li>不带默认值</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">DELIMITER $$</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> get_invoices_by_client(id <span class="type">INT</span>(<span class="number">11</span>))</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line">    <span class="keyword">FROM</span> invoices i</span><br><span class="line">    <span class="keyword">WHERE</span> i.client_id <span class="operator">=</span> id;</span><br><span class="line"><span class="keyword">END</span>$$</span><br><span class="line"></span><br><span class="line">DELIMITER ;</span><br></pre></td></tr></table></figure><ul><li>带默认值</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">DELIMITER $$</span><br><span class="line"><span class="keyword">CREATE</span> DEFINER<span class="operator">=</span>`root`@`localhost` <span class="keyword">PROCEDURE</span> `get_payments`(</span><br><span class="line">client_id <span class="type">INT</span>,</span><br><span class="line">    payment_method_id TINYINT</span><br><span class="line">)</span><br><span class="line"><span class="keyword">BEGIN</span> </span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line">    <span class="keyword">FROM</span> payments p</span><br><span class="line">    <span class="keyword">WHERE</span> p.client_id <span class="operator">=</span> IFNULL(client_id,p.client_id) </span><br><span class="line">    <span class="comment">-- 如果提供的client_id为空，则返回所有client_id</span></span><br><span class="line">    <span class="keyword">AND</span> p.payment_method <span class="operator">=</span> IFNULL(payment_method_id,p.payment_method);</span><br><span class="line"><span class="keyword">END</span>$$</span><br><span class="line">DELIMITER ;</span><br></pre></td></tr></table></figure><h2 id="参数验证">参数验证</h2><p>在创建存储过程时加入判断语句，避免更新数据库时插入不合理的数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">DELIMITER $$ </span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> make_payment</span><br><span class="line">(</span><br><span class="line">invoice_id <span class="type">INT</span>,</span><br><span class="line">payment_amount <span class="type">DECIMAL</span>(<span class="number">9</span>,<span class="number">2</span>), </span><br><span class="line"><span class="comment">-- 前一个参数表示数字的总位数（包括小数部分和整数部分），后一个表示小数点后的位数</span></span><br><span class="line">payment_date <span class="type">DATE</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">IF payment_amount <span class="operator">&lt;=</span> <span class="number">0</span> <span class="keyword">THEN</span></span><br><span class="line">SIGNAL <span class="keyword">SQLSTATE</span> <span class="string">&#x27;22003&#x27;</span> <span class="comment">-- sqlstate的错误代码，网上可搜</span></span><br><span class="line"><span class="keyword">SET</span> MESSAGE_TEXT <span class="operator">=</span> <span class="string">&#x27;Invalid payment amount&#x27;</span></span><br><span class="line"><span class="keyword">END</span> IF;</span><br><span class="line"><span class="keyword">UPDATE</span> invoices i</span><br><span class="line"><span class="keyword">SET</span> </span><br><span class="line">i.payment_total <span class="operator">=</span> payment_amount,</span><br><span class="line">i.payment_data <span class="operator">=</span> payment_date</span><br><span class="line"><span class="keyword">WHERE</span> i.invoice_id <span class="operator">=</span> invoice_id;</span><br><span class="line"><span class="keyword">END</span> $$</span><br><span class="line"></span><br><span class="line">DELIMITER ;</span><br></pre></td></tr></table></figure><h2 id="输出参数">输出参数</h2><p>通过程序得到返回值</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">DELIMITER $$</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> get_unpaid_invoice_for_client</span><br><span class="line">(</span><br><span class="line">client_id <span class="type">INT</span>,</span><br><span class="line"><span class="keyword">OUT</span> invoices_count <span class="type">INT</span>, <span class="comment">-- 作为输出参数，需要使用OUT进行标记</span></span><br><span class="line"><span class="keyword">OUT</span> invoices_total <span class="type">DECIMAL</span>(<span class="number">9</span>,<span class="number">2</span>)</span><br><span class="line">)</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>),<span class="built_in">SUM</span>(invoices_total)</span><br><span class="line"><span class="keyword">INTO</span> invoices_count,invoices_total <span class="comment">-- 将查询值传入输出参数</span></span><br><span class="line"><span class="keyword">FROM</span> invoices i</span><br><span class="line"><span class="keyword">WHERE</span> i.client_id <span class="operator">=</span> client_id <span class="keyword">AND</span> payment_total <span class="operator">=</span> <span class="number">0</span> </span><br><span class="line"><span class="keyword">END</span> $$</span><br><span class="line">DELIMITER ;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询</span></span><br><span class="line"><span class="keyword">CALL</span> get_unpaid_invoice_for_client(<span class="number">3</span>,<span class="variable">@invoices_count</span>,<span class="variable">@invoices_total</span>)</span><br><span class="line"><span class="comment">-- 查询客户未支付的发票数和发票总金额</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="variable">@invoices_count</span>,<span class="variable">@invoices_total</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="变量">变量</h2><p>变量在mysql中分为两种：</p><ol><li>用户变量：在用户使用mysql期间会被保存，当用户下线时会被清除<br>格式：SET @变量名</li><li>本地变量：在存储过程和函数中定义的变量，在执行完毕后会被清除</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">DELIMITER $$</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> get_risk_factor()</span><br><span class="line"><span class="keyword">BEGIN</span> </span><br><span class="line"><span class="keyword">DECLARE</span> risk_factor <span class="type">DECIMAL</span>(<span class="number">9</span>,<span class="number">2</span>) <span class="keyword">DEFAULT</span> <span class="number">0</span>; <span class="comment">-- DECLARE 声明变量</span></span><br><span class="line"><span class="keyword">DECLARE</span> invoices_total <span class="type">DECIMAL</span>(<span class="number">9</span>,<span class="number">2</span>);</span><br><span class="line"><span class="keyword">DECLARE</span> invoice_count <span class="type">INT</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>),<span class="built_in">SUM</span>(invoice_total)</span><br><span class="line"><span class="keyword">INTO</span> invoice_count,invoices_total</span><br><span class="line"><span class="keyword">FROM</span> invoices;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SET</span> risk_factor <span class="operator">=</span> invoices_total <span class="operator">/</span> invoice_count <span class="operator">*</span> <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> risk_factor;</span><br><span class="line"><span class="keyword">END</span>$$</span><br><span class="line">DELIMITER ;</span><br></pre></td></tr></table></figure><h2 id="函数">函数</h2><p>函数不同于存储过程，它只能返回一列<br>函数的属性：</p><ol><li>DETERMINISTIC 确定性，相同的输入对象返回值相同</li><li>READ SQL DATA 读取SQL的数据</li><li>MODIFIES SQL DATA 修改SQL的数据</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">DELIMITER $$</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">FUNCTION</span> get_risk_factor_for_client</span><br><span class="line">(</span><br><span class="line">client_id <span class="type">INT</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">RETURNS</span> <span class="type">INT</span> <span class="comment">-- 确定函数返回值的类型</span></span><br><span class="line"><span class="keyword">READS</span> <span class="keyword">SQL</span> DATA <span class="comment">-- 确定函数的属性</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="keyword">DECLARE</span> risk_factor <span class="type">DECIMAL</span>(<span class="number">9</span>,<span class="number">2</span>) <span class="keyword">DEFAULT</span> <span class="number">0</span>; <span class="comment">-- DECLARE 声明变量</span></span><br><span class="line"><span class="keyword">DECLARE</span> invoices_total <span class="type">DECIMAL</span>(<span class="number">9</span>,<span class="number">2</span>);</span><br><span class="line"><span class="keyword">DECLARE</span> invoices_count <span class="type">INT</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>),<span class="built_in">SUM</span>(invoice_total)</span><br><span class="line"><span class="keyword">INTO</span> invoices_count,invoices_total</span><br><span class="line"><span class="keyword">FROM</span> invoices i</span><br><span class="line"><span class="keyword">WHERE</span> i.client_id <span class="operator">=</span> client_id;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SET</span> risk_factor <span class="operator">=</span> invoices_total <span class="operator">/</span> invoices_count <span class="operator">*</span> <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">RETURN</span> IFNULL(risk_factor,<span class="number">0</span>);</span><br><span class="line"><span class="keyword">END</span> $$</span><br><span class="line"></span><br><span class="line">DELIMITER ;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DataBase 增删改语句</title>
      <link href="/posts/1419064164/"/>
      <url>/posts/1419064164/</url>
      
        <content type="html"><![CDATA[<h2 id="insert子句-插入数据">INSERT子句 插入数据</h2><ol><li>插入单行<br>格式：INSERT INTO 表名 （列名1，列名2，……） VALUES（值1，值2，……）</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT INTO</span> customers(first_name,last_name,address,city,state)</span><br><span class="line"><span class="comment">-- 列名属于可忽略部分，但通过写列名，可以不按表中的列名顺序插入，如果大量数据不按照表中列名顺序，可考虑写列名部分；同时写列名部分，可以只插入表中没有设定默认值的列值，其他则会设定为默认值</span></span><br><span class="line"><span class="keyword">VALUES</span>(<span class="string">&#x27;xiling&#x27;</span>,<span class="string">&#x27;luo&#x27;</span>,<span class="string">&#x27;SZTU&#x27;</span>,<span class="string">&#x27;shenzhen&#x27;</span>,<span class="string">&#x27;GD&#x27;</span>)</span><br></pre></td></tr></table></figure><ol start="2"><li>插入多行<br>格式：INSERT INTO 表名 （列名1，列名2，……）<br>VALUES（值1，值2，……），（值1，值2，……），……</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT INTO</span> products(name,quantity_in_stock,unit_price)</span><br><span class="line"><span class="keyword">VALUES</span>(<span class="string">&#x27;product4&#x27;</span>,<span class="number">25</span>,<span class="number">4.55</span>),</span><br><span class="line">(<span class="string">&#x27;product5&#x27;</span>,<span class="number">38</span>,<span class="number">3.50</span>)</span><br></pre></td></tr></table></figure><ol start="3"><li>插入分层行<br>若要在两个有关联的表插入有关联的元组数据，可通过LAST_INSERT_ID()调用上一条记录刚得到的id（该id为表中的主键，拥有自动递增特性）</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT INTO</span> orders(customer_id,order_date,status) </span><br><span class="line"><span class="keyword">VALUES</span>(<span class="number">12</span>,<span class="string">&#x27;2024-04-02&#x27;</span>,<span class="number">1</span>)；</span><br><span class="line"><span class="keyword">INSERT INTO</span> order_items </span><br><span class="line"><span class="keyword">VALUES</span>(LAST_INSERT_ID(),<span class="number">14</span>,<span class="number">1</span>,<span class="number">4.55</span>)；</span><br></pre></td></tr></table></figure><h3 id="建表并复制">建表并复制</h3><p>将某表的某些记录复制成另一个表，利用 <strong>CREATE TABLE 【表名】 AS</strong> 完成。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE TABLE</span> invoices_archived <span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> i.invoice_id,</span><br><span class="line">  i.number,</span><br><span class="line">     c.name client,</span><br><span class="line">     i.invoice_total,</span><br><span class="line">     i.payment_total,</span><br><span class="line">     i.invoice_date,</span><br><span class="line">     i.due_date,</span><br><span class="line">     i.payment_date</span><br><span class="line"><span class="keyword">FROM</span> clients c,invoices i</span><br><span class="line"><span class="keyword">WHERE</span> c.client_id <span class="operator">=</span> i.client_id <span class="keyword">AND</span> payment_date <span class="keyword">IS</span> <span class="keyword">NOT NULL</span></span><br><span class="line"><span class="comment">-- SELECT子句用于挑选被复制的记录</span></span><br></pre></td></tr></table></figure><h2 id="update子句-更新数据">UPDATE子句 更新数据</h2><ol><li>更新一行<br>格式：UPDATE 【表名】 SET 【列名1】= 值1,…… ，WHERE 条件（指定某一条记录的主键）</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> invoices</span><br><span class="line"><span class="keyword">SET</span> payment_total <span class="operator">=</span> <span class="number">10</span>, payment_date <span class="operator">=</span> <span class="string">&#x27;2019-03-01&#x27;</span></span><br><span class="line"><span class="keyword">WHERE</span> invoice_id <span class="operator">=</span> <span class="number">1</span>;</span><br></pre></td></tr></table></figure><ol start="2"><li>更新多行<br>格式：UPDATE 【表名】 SET 【列名1】= 值1,…… ，WHERE 条件</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> customers</span><br><span class="line"><span class="keyword">SET</span> points <span class="operator">=</span> points <span class="operator">+</span> <span class="number">50</span></span><br><span class="line"><span class="keyword">WHERE</span> birth_date <span class="operator">&lt;</span> <span class="string">&#x27;1990-01-01&#x27;</span>;</span><br></pre></td></tr></table></figure><ol start="3"><li>使用子查询的情况<br>在我们不知道WHERE的条件时，可以用子查询先得到我们所需要的条件，再进行更新。<br>如：我们需要更新订单表内的注释信息，但我们不知道顾客的id，只知道姓名，在这情况下就需要通过在顾客表找到姓名相对应的id，再到订单表更新注释</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> orders</span><br><span class="line"><span class="keyword">SET</span> comments <span class="operator">=</span> <span class="string">&#x27;Gold customers&#x27;</span></span><br><span class="line"><span class="keyword">WHERE</span> customer_id <span class="keyword">IN</span> (</span><br><span class="line">    <span class="keyword">SELECT</span> customer_id</span><br><span class="line">    <span class="keyword">FROM</span> customers</span><br><span class="line">    <span class="keyword">WHERE</span> points <span class="operator">&gt;</span> <span class="number">3000</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h2 id="delete子句-删除数据">DELETE子句 删除数据</h2><p>格式：DELETE FROM 【表名】 WHERE 【条件1】，……</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> invoices</span><br><span class="line"><span class="keyword">WHERE</span> client_id <span class="operator">=</span> (</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> clients</span><br><span class="line"><span class="keyword">WHERE</span> name <span class="operator">=</span> <span class="string">&#x27;Myworks&#x27;</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DataBase 常用函数</title>
      <link href="/posts/802921560/"/>
      <url>/posts/802921560/</url>
      
        <content type="html"><![CDATA[<h2 id="数值函数">数值函数</h2><h3 id="round函数">ROUND函数</h3><p>格式：ROUND（value，parameter）<br>将value四舍五入到paramet位小数</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> ROUND(<span class="number">5.7542</span>,<span class="number">2</span>)</span><br><span class="line"><span class="comment">-- 运行结果：5.75</span></span><br></pre></td></tr></table></figure><h3 id="truncate函数">TRUNCATE函数</h3><p>格式：TRUNCATE（value，parame）<br>将value截断到paramet位小数</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">TRUNCATE</span>(<span class="number">5.7552</span>,<span class="number">2</span>)</span><br><span class="line"><span class="comment">-- 运行结果：5.75</span></span><br></pre></td></tr></table></figure><h3 id="ceiling函数">CEILING函数</h3><p>格式：CELING（value）<br>返回大于或等于value的最小整数</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CEILING</span>(<span class="number">5.76</span>)</span><br><span class="line"><span class="comment">-- 运行结果：6</span></span><br></pre></td></tr></table></figure><h3 id="floor函数">FLOOR函数</h3><p>格式：FLOOR（value）<br>返回小于或等于value的最大整数</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">FLOOR</span>(<span class="number">1.52</span>)</span><br><span class="line"><span class="comment">-- 运行结果：1</span></span><br></pre></td></tr></table></figure><h3 id="abs函数">ABS函数</h3><p>格式：ABS（value）<br>返回绝对值</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">ABS</span>(<span class="number">-5.2</span>)</span><br><span class="line"><span class="comment">-- 运行结果：5.2</span></span><br></pre></td></tr></table></figure><h3 id="rand函数">RAND函数</h3><p>生成0-1之间的随机值</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> RAND()</span><br></pre></td></tr></table></figure><h2 id="字符串函数">字符串函数</h2><h3 id="length函数">LENGTH函数</h3><p>格式：LENGTH（str）<br>返回字符串的字符个数</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> LENGTH(<span class="string">&#x27;sky&#x27;</span>)</span><br><span class="line"><span class="comment">-- 运行结果：3</span></span><br></pre></td></tr></table></figure><h3 id="upper函数">UPPER函数</h3><p>格式：UPPER（str）<br>返回大写的字符串</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">UPPER</span>(<span class="string">&#x27;sky&#x27;</span>)</span><br><span class="line"><span class="comment">-- 运行结果：SKY</span></span><br></pre></td></tr></table></figure><h3 id="lower函数">LOWER函数</h3><p>格式：LOWER（str）<br>返回小写的字符串</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">LOWER</span>(<span class="string">&#x27;SKY&#x27;</span>)</span><br><span class="line"><span class="comment">-- 运行结果：sky</span></span><br></pre></td></tr></table></figure><h3 id="trim函数">TRIM函数</h3><p>分为三种：TRIM，LTRIM，RTRIM<br>用于删除多余的空格</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">TRIM</span>(<span class="string">&#x27;   SKY   &#x27;</span>),  <span class="comment">-- 删除SKY前后多余的空格</span></span><br><span class="line">LTRIM(<span class="string">&#x27;   cat&#x27;</span>),  <span class="comment">-- 删除cat左边多余的空格</span></span><br><span class="line">    RTRIM(<span class="string">&#x27;dog  &#x27;</span>)  <span class="comment">-- 删除dog右边多余的空格</span></span><br></pre></td></tr></table></figure><h3 id="left函数">LEFT函数</h3><p>格式：LEFT（str，parameter）<br>从左侧开始返回parameter个字符</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">LEFT</span>(<span class="string">&#x27;Kingdom&#x27;</span>,<span class="number">4</span>)</span><br><span class="line"><span class="comment">-- 运行结果：King</span></span><br></pre></td></tr></table></figure><h3 id="right函数">RIGHT函数</h3><p>格式：RIGHT（str，parameter）<br>从右侧开始返回parameter个字符</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">RIGHT</span>(<span class="string">&#x27;Kingdom&#x27;</span>,<span class="number">3</span>)</span><br><span class="line"><span class="comment">-- 运行结果：dom</span></span><br></pre></td></tr></table></figure><h3 id="substring函数">SUBSTRING函数</h3><p>格式：SUBSTRING（str，start，end）<br>截取str的start位置到end位置，若无end则默认到str末尾</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">SUBSTRING</span>(<span class="string">&#x27;Kingdom&#x27;</span>,<span class="number">1</span>,<span class="number">4</span>)</span><br><span class="line"><span class="comment">-- 运行结果：King</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">SUBSTRING</span>(<span class="string">&#x27;Kingdom&#x27;</span>,<span class="number">2</span>)</span><br><span class="line"><span class="comment">-- 运行结果：ingdom</span></span><br></pre></td></tr></table></figure><h3 id="locate函数">LOCATE函数</h3><p>格式：LOCATE（str1，str2）<br>返回str1在str2第一次出现的位置</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> LOCATE(<span class="string">&#x27;n&#x27;</span>,<span class="string">&#x27;Kingarten&#x27;</span>)</span><br><span class="line"><span class="comment">-- 运行结果：3</span></span><br><span class="line"><span class="comment">-- MySQL的位置从1起</span></span><br></pre></td></tr></table></figure><h3 id="replace函数">REPLACE函数</h3><p>格式：REPLACE（str，str1，str2）<br>将str中的str1替换为str2</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> REPLACE(<span class="string">&#x27;Kingarten&#x27;</span>,<span class="string">&#x27;garten&#x27;</span>,<span class="string">&#x27;garden&#x27;</span>)</span><br><span class="line"><span class="comment">-- 运行结果：Kingarden</span></span><br></pre></td></tr></table></figure><h3 id="concat函数">CONCAT函数</h3><p>格式：CONCAT（str1，str2，……）<br>连接字符串</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> CONCAT(<span class="string">&#x27;John&#x27;</span>,<span class="string">&#x27; &#x27;</span>,<span class="string">&#x27;Smith&#x27;</span>)</span><br><span class="line"><span class="comment">-- 运行结果：John Smith</span></span><br></pre></td></tr></table></figure><h2 id="日期函数">日期函数</h2><table><thead><tr><th>NOW()</th><th>返回当前的时间</th></tr></thead><tbody><tr><td>CURDATE()</td><td>返回当前的日期</td></tr><tr><td>CURTIME()</td><td>返回当前的时刻</td></tr></tbody></table><h3 id="extract函数">EXTRACT函数</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">EXTRACT</span>(<span class="keyword">YEAR</span> <span class="keyword">FROM</span> NOW()) <span class="comment">-- 返回当前的年份</span></span><br><span class="line"><span class="comment">-- YEAR 可以更换为 MONTH，DAY，HOUR，MINUTE，SECOND等等</span></span><br></pre></td></tr></table></figure><h2 id="日期和时间的计算">日期和时间的计算</h2><ul><li>格式化日期和时间：<a href="https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html">MySQL :: MySQL 8.0 Reference Manual :: 14.7 Date and Time Functions</a></li></ul><h3 id="增加或减少日期">增加或减少日期</h3><ul><li>DATE_ADD(日期，INTERVAL 1 DAY) DAY可以替换为MONTH/YEAR</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> DATE_ADD(<span class="string">&#x27;2020-01-01&#x27;</span>,<span class="type">INTERVAL</span> <span class="number">1</span> <span class="keyword">DAY</span>)</span><br><span class="line"><span class="comment">-- 结果：2020-01-02</span></span><br></pre></td></tr></table></figure><ul><li>DATE_SUB(日期，INTERVAL 1 DAY) DAY可以替换为MONTH/YEAR</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> DATE_SUB(<span class="string">&#x27;2020-01-01&#x27;</span>,<span class="type">INTERVAL</span> <span class="number">1</span> <span class="keyword">DAY</span>)</span><br><span class="line"><span class="comment">-- 结果：2019-12-31</span></span><br></pre></td></tr></table></figure><ul><li>DATEDIFF(日期1，日期2)<br>以日期1减去日期2，求得两个日期之间的间隔，时间间隔不纳入考虑</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> DATEDIFF(<span class="string">&#x27;2020-02-01&#x27;</span>,<span class="string">&#x27;2020-01-01&#x27;</span>)</span><br><span class="line"><span class="comment">-- 结果：31</span></span><br></pre></td></tr></table></figure><ul><li>TIME_TO_SEC(时刻)<br>将时刻转换为秒，从而易于计算，从凌晨0点开始计算</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> TIME_TO_SEC(<span class="string">&#x27;09:00&#x27;</span>)<span class="operator">-</span>TIME_TO_SEC(<span class="string">&#x27;05:00&#x27;</span>)</span><br><span class="line"><span class="comment">-- 结果：14400</span></span><br></pre></td></tr></table></figure><h2 id="其他函数">其他函数</h2><h3 id="ifnull函数">IFNULL函数</h3><p>格式：IFNULL(列名，字符串)<br>判断列值中是否有空值，若有空值，以字符串内容替换</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">order_id,</span><br><span class="line">IFNULL(shipper_id,<span class="string">&#x27;Not Assigned&#x27;</span>)</span><br><span class="line"><span class="keyword">FROM</span> orders</span><br></pre></td></tr></table></figure><h3 id="coalesce函数">COALESCE函数</h3><p>格式：COALESCE（列名1，列名2，…，字符串）<br>若列名1中存在空值，以同行列名2的值进行替换，若还为空则继续替换，直至以字符串内容替换</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">order_id,</span><br><span class="line"><span class="built_in">COALESCE</span>(shipper_id,comments,<span class="string">&#x27;Not Assigned&#x27;</span>)</span><br><span class="line"><span class="keyword">FROM</span> orders</span><br></pre></td></tr></table></figure><h3 id="if函数">IF函数</h3><p>格式：IF（表达式，返回值1，返回值2）<br>表达式成立则得到返回值1，否则得到返回值2</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">oi.product_id,</span><br><span class="line">    p.name,</span><br><span class="line">    <span class="built_in">COUNT</span>(<span class="operator">*</span>) orders,</span><br><span class="line">    IF(<span class="built_in">COUNT</span>(<span class="operator">*</span>)<span class="operator">&gt;</span><span class="number">1</span>,<span class="string">&#x27;Many times&#x27;</span>,<span class="string">&#x27;Once&#x27;</span>) frequency</span><br><span class="line"><span class="keyword">FROM</span> order_items oi</span><br><span class="line"><span class="keyword">JOIN</span> products p <span class="keyword">USING</span>(product_id)</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> oi.product_id,p.name</span><br></pre></td></tr></table></figure><h3 id="case运算符">CASE运算符</h3><p>格式： CASE WHEN 表达式 THEN 返回值 …… (ELSE) 返回值 END<br>通过多个测试语句返回不同的结果</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">CONCAT(first_name,<span class="string">&#x27; &#x27;</span>,last_name) customer,</span><br><span class="line">    points,</span><br><span class="line">    <span class="keyword">CASE</span> </span><br><span class="line">    <span class="keyword">WHEN</span> points<span class="operator">&gt;</span><span class="number">3000</span> <span class="keyword">THEN</span> <span class="string">&#x27;Gold&#x27;</span></span><br><span class="line">    <span class="keyword">WHEN</span> points <span class="keyword">BETWEEN</span> <span class="number">2000</span> <span class="keyword">AND</span> <span class="number">3000</span> <span class="keyword">THEN</span> <span class="string">&#x27;Sliver&#x27;</span></span><br><span class="line">    <span class="keyword">WHEN</span> points<span class="operator">&lt;</span><span class="number">2000</span> <span class="keyword">THEN</span> <span class="string">&#x27;Bronze&#x27;</span></span><br><span class="line">    <span class="keyword">END</span> <span class="keyword">AS</span> category</span><br><span class="line"><span class="keyword">FROM</span> customers</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> points <span class="keyword">DESC</span>;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DataBase 查询语句</title>
      <link href="/posts/1146913277/"/>
      <url>/posts/1146913277/</url>
      
        <content type="html"><![CDATA[<h2 id="select-语句">SELECT 语句</h2><ol><li>用于选择数据库中的某些列，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∗</mo></mrow><annotation encoding="application/x-tex">*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord">∗</span></span></span></span> 表示全部列。</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> [表名]; <span class="comment">-- 表示选中某表的全部列</span></span><br><span class="line"><span class="keyword">SELECT</span> [列名]<span class="operator">/</span>[列名<span class="number">1</span>],[列名<span class="number">2</span>],... <span class="keyword">FROM</span> [表名]; <span class="comment">-- 表示选中某表的某列/某些列</span></span><br></pre></td></tr></table></figure><ul><li>DISTINCT 关键字 用于去重查询</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> user_id</span><br><span class="line"><span class="keyword">FROM</span> solution;</span><br></pre></td></tr></table></figure><h2 id="关键字">关键字</h2><ol><li><strong>AS</strong><br>用于接列的别名（可省略）</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">name,</span><br><span class="line">unit_price,</span><br><span class="line">unit_price <span class="operator">*</span> <span class="number">1.1</span> <span class="keyword">AS</span> new_price <span class="operator">/</span> unit_price <span class="operator">*</span> <span class="number">1.1</span> new_price </span><br><span class="line"><span class="comment">-- 在显示查询结果时，unit_price * 1.1 这一列名会被别名new_price替代</span></span><br><span class="line"><span class="comment">-- 第三行左右两种写法表示同一种意思</span></span><br><span class="line"><span class="keyword">FROM</span> [表名];</span><br></pre></td></tr></table></figure><ol start="2"><li>ALL<br><strong>ALL</strong> 可以与(=、&gt;、&gt;=、&lt;、&lt;=、&lt;&gt;)结合是来使用，分别表示等于、大于、大于等于、小于、小于等于、不等于其中的其中的所有数据。<br><strong>ALL</strong> 关键字用在比较操作符(=、&gt;、&gt;=、&lt;、&lt;=、&lt;&gt;…)的后面，表示查询结果的多个数据中的所有都满足该比较操作符才算满足。</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> invoices</span><br><span class="line"><span class="keyword">WHERE</span> invoice_total <span class="operator">&gt;</span> <span class="keyword">ALL</span>(</span><br><span class="line"><span class="keyword">SELECT</span> invoice_total</span><br><span class="line">    <span class="keyword">FROM</span> invoices</span><br><span class="line">    <span class="keyword">WHERE</span> invoice_id <span class="operator">=</span> <span class="number">3</span></span><br><span class="line">)</span><br><span class="line"> <span class="comment">-- ALL返回（）里面所有的值，和invoice_total 逐一比较</span></span><br></pre></td></tr></table></figure><ol start="3"><li>ANY/SOME<br><strong>ANY/SOME</strong> 可以与(=、&gt;、&gt;=、&lt;、&lt;=、&lt;&gt;)结合起来使用，分别表示等于、大于、大于等于、小于、小于等于、不等于其中的任何一个数据。<br><strong>ANY/SOME</strong> 关键字用在比较操作符(=、&gt;、&gt;=、&lt;、&lt;=、&lt;&gt;…)的后面，表示查询结果的多个数据中的任一个满足该比较操作符就算满足。</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> clients</span><br><span class="line"><span class="keyword">WHERE</span> client_id <span class="operator">=</span> <span class="keyword">ANY</span>(</span><br><span class="line"><span class="keyword">SELECT</span> client_id </span><br><span class="line"><span class="keyword">FROM</span> invoices</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> client_id </span><br><span class="line"><span class="keyword">HAVING</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="operator">&gt;=</span> <span class="number">2</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><h2 id="where-语句">WHERE 语句</h2><ol><li>作为增删查改等操作时的条件语句，用于过滤数据<br>下述以查询语句为例：</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> [表名]</span><br><span class="line"><span class="keyword">WHERE</span> [条件];</span><br></pre></td></tr></table></figure><h2 id="运算符">运算符</h2><h3 id="比较">比较</h3><table><thead><tr><th>大于</th><th>大于等于</th><th>小于</th><th>小于等于</th><th>等于</th><th>不等于</th><th>不大于</th><th>不小于</th><th>其他</th></tr></thead><tbody><tr><td>&gt;</td><td>&gt;=</td><td>&lt;</td><td>&lt;=</td><td>=</td><td>!= 或 &lt;&gt;</td><td>!&gt;</td><td>!&lt;</td><td>NOT+上述运算符</td></tr></tbody></table><h3 id="逻辑运算">逻辑运算</h3><table><thead><tr><th>AND</th><th>用于判定多个条件同时成立的情况</th></tr></thead><tbody><tr><td>OR</td><td>用于判定多个条件其中一个正确的情况</td></tr><tr><td>NOT</td><td>用于判定与某条件相反的情况</td></tr></tbody></table><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mi>N</mi><mi>D</mi></mrow><annotation encoding="application/x-tex">AND</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span></span></span></span>  和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mi>R</mi></mrow><annotation encoding="application/x-tex">OR</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span></span></span></span> 只能用于连接表示 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi><mi>r</mi><mi>u</mi><mi>e</mi></mrow><annotation encoding="application/x-tex">true</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">u</span><span class="mord mathdefault">e</span></span></span></span> or <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mi>a</mi><mi>l</mi><mi>s</mi><mi>e</mi></mrow><annotation encoding="application/x-tex">false</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">s</span><span class="mord mathdefault">e</span></span></span></span> 的逻辑语句，不能连接语句和字符串</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> customers</span><br><span class="line"><span class="keyword">WHERE</span> state <span class="operator">=</span> <span class="string">&#x27;VA&#x27;</span> <span class="keyword">OR</span> <span class="string">&#x27;GA&#x27;</span> <span class="keyword">OR</span> <span class="string">&#x27;FL&#x27;</span> <span class="comment">--这种条件语句无法成立</span></span><br></pre></td></tr></table></figure><h3 id="确定集合">确定集合</h3><table><thead><tr><th>IN</th><th>用于查询属性值在该集合内的元组</th></tr></thead><tbody><tr><td>NOT IN</td><td>用于查询属性值不在该集合内的元组</td></tr></tbody></table><table><thead><tr><th>EXISTS</th><th>用于查询符合条件的元组</th></tr></thead><tbody><tr><td>NOT EXISTS</td><td>用于查询不符合条件的元组</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> products p</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span>(</span><br><span class="line">    <span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line">    <span class="keyword">FROM</span> order_items oi</span><br><span class="line">    <span class="keyword">WHERE</span> p.product_id <span class="operator">=</span> oi.product_id</span><br><span class="line">);</span><br><span class="line"><span class="comment">-- EXISTS 只返回True或False，不返回具体的值</span></span><br></pre></td></tr></table></figure><ul><li>外层小表，内层大表（或者将sql从左到右来看：左面小表，右边大表）： <strong>exists</strong> 比 <strong>in</strong> 的效率高</li><li>外层大表，内层小表（或者将sql从左到右来看：左面大表，右边小表）： <strong>in</strong> 比 <strong>exists</strong> 的效率高</li></ul><h3 id="确定范围">确定范围</h3><table><thead><tr><th>BETWEEN AND</th><th>查找属性值在指定范围内的元组</th></tr></thead><tbody><tr><td>NOT BETWEEN AND</td><td>查找属性值不在指定范围内的元组</td></tr></tbody></table><h3 id="字符匹配">字符匹配</h3><table><thead><tr><th>LIKE</th><th>查找指定属性列值与匹配串相匹配的元组</th></tr></thead><tbody><tr><td>NOT LIKE</td><td>查定指定属性列值不与匹配串匹配的元组</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> customers</span><br><span class="line"><span class="keyword">WHERE</span> address <span class="keyword">LIKE</span> ‘<span class="operator">%</span>trial<span class="operator">%</span>’</span><br><span class="line"><span class="comment">-- 格式： [NOT] LIKE &#x27;匹配串&#x27;</span></span><br><span class="line"><span class="comment">-- 通配符：（1）% 用于代表任意长度的字符串；（2）_ 用于代表单个字符</span></span><br></pre></td></tr></table></figure><h3 id="空值查询">空值查询</h3><table><thead><tr><th>IS NULL</th><th>查询某属性值为空的元组</th></tr></thead><tbody><tr><td>IS NOT NULL</td><td>查询某属性值非空的元组</td></tr></tbody></table><h2 id="order-by-语句">ORDER BY 语句</h2><ol><li>用于查询时按某列进行排序，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi><mi>E</mi><mi>S</mi><mi>C</mi></mrow><annotation encoding="application/x-tex">DESC</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span></span></span></span> 是降序的缩写</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> order_items</span><br><span class="line"><span class="keyword">WHERE</span> order_id <span class="operator">=</span> <span class="number">2</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> quantity <span class="operator">*</span> unit_price <span class="keyword">DESC</span>; <span class="comment">-- 按照数量乘以单价后的总价进行降序排序</span></span><br><span class="line"><span class="comment">-- 格式：ORDER BY [列名称] </span></span><br></pre></td></tr></table></figure><h2 id="limit-语句">LIMIT 语句</h2><ol><li>用于限制查询记录输出</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> customers</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> points <span class="keyword">DESC</span></span><br><span class="line">LIMIT <span class="number">3</span>; <span class="comment">-- 表示只输出前三条记录</span></span><br></pre></td></tr></table></figure><ul><li>OFFSET 关键词表示偏移量</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> customers</span><br><span class="line">LIMIT <span class="number">6</span>,<span class="number">3</span> <span class="comment">-- 表示以3条记录为一页，跨过前6条记录并展示</span></span><br><span class="line">LIMIT <span class="number">3</span> <span class="keyword">OFFSET</span> <span class="number">6</span> <span class="comment">-- 与上一条LIMIT语句表达意思相同</span></span><br></pre></td></tr></table></figure><h2 id="子查询">子查询</h2><p>子查询指一个查询语句嵌套在另一个查询语句内部的查询</p><ul><li>不相关子查询：子查询的查询条件不依赖于父查询，称为不相关子查询。</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> Sno,Sname,Sdept</span><br><span class="line"><span class="keyword">FROM</span> Student</span><br><span class="line"><span class="keyword">WHERE</span> Sdept <span class="keyword">IN</span>(</span><br><span class="line"><span class="keyword">SELECT</span> Sdept </span><br><span class="line"><span class="keyword">FROM</span> Student</span><br><span class="line"><span class="keyword">WHERE</span> Sname<span class="operator">=</span><span class="string">&#x27;刘晨&#x27;</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><ul><li>相关子查询：如果子查询的查询条件依赖于父查询，这类子查询称为相关子查询。</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> invoices A</span><br><span class="line"><span class="keyword">WHERE</span> invoice_total <span class="operator">&gt;</span>(</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">AVG</span>(invoice_total)</span><br><span class="line">    <span class="keyword">FROM</span> invoices</span><br><span class="line">    <span class="keyword">WHERE</span> client_id <span class="operator">=</span> A.client_id</span><br><span class="line">);</span><br></pre></td></tr></table></figure><ul><li>SELECT子句中的子查询</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">c.client_id,</span><br><span class="line">    name,</span><br><span class="line">    (<span class="keyword">SELECT</span> <span class="built_in">SUM</span>(invoice_total) <span class="keyword">FROM</span> invoices <span class="keyword">WHERE</span> client_id <span class="operator">=</span> c.client_id) <span class="keyword">AS</span> total_sales,</span><br><span class="line">    (<span class="keyword">SELECT</span> <span class="built_in">AVG</span>(invoice_total) <span class="keyword">FROM</span> invoices) <span class="keyword">AS</span> average,</span><br><span class="line">    (<span class="keyword">SELECT</span> total_sales <span class="operator">-</span> average) <span class="keyword">AS</span> difference</span><br><span class="line"><span class="keyword">FROM</span> clients c</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> invoices i <span class="keyword">USING</span> (client_id)</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">by</span> c.client_id,name,difference;</span><br></pre></td></tr></table></figure><ul><li>FROM子句中的子查询<br>FROM子句中的子查询可以调用我们经过复杂查询后产生的虚拟表格进行简单的查询。但这种子查询会增加的代码复杂度，在后面我们可以用视图保存复杂查询后的表格——&gt;【视图】</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span>(</span><br><span class="line">    <span class="keyword">SELECT</span> </span><br><span class="line">        c.client_id,</span><br><span class="line">         name,</span><br><span class="line">        (<span class="keyword">SELECT</span> <span class="built_in">SUM</span>(invoice_total) <span class="keyword">FROM</span> invoices <span class="keyword">WHERE</span> client_id <span class="operator">=</span> c.client_id) total_sales,</span><br><span class="line">        (<span class="keyword">SELECT</span> <span class="built_in">AVG</span>(invoice_total) <span class="keyword">FROM</span> invoices) average,</span><br><span class="line">        (<span class="keyword">SELECT</span> total_sales <span class="operator">-</span> average) difference</span><br><span class="line"><span class="keyword">FROM</span> clients c</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> invoices i <span class="keyword">USING</span> (client_id)</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> c.client_id,name</span><br><span class="line">) <span class="keyword">AS</span> sales_summary</span><br><span class="line"><span class="keyword">WHERE</span> total_sales <span class="keyword">IS</span> <span class="keyword">NOT NULL</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DataBase 聚合函数</title>
      <link href="/posts/3438945314/"/>
      <url>/posts/3438945314/</url>
      
        <content type="html"><![CDATA[<h2 id="函数简述">函数简述</h2><table><thead><tr><th>MAX()</th><th>求该列中的最大值</th></tr></thead><tbody><tr><td>MIN()</td><td>求该列中的最小值</td></tr><tr><td>AVG()</td><td>求该列的平均值</td></tr><tr><td>SUM()</td><td>求该列的值之和</td></tr><tr><td>COUNT()</td><td>统计该列中有多少条记录</td></tr></tbody></table><ol><li>所有聚合函数只计算非空值。</li><li>不能用于WHERE子句<br>（因为聚合函数是对已确定的数据集进行处理，而WHERE子句属于还在确定的阶段）</li></ol><h2 id="group-by子句">GROUP BY子句</h2><p>根据一定的规则，进行分组，以by后面跟着的一个或多个字段进行分组</p><ol><li>格式：select 聚合函数(字段1)，字段2 from 表名 where 条件 group by 字段2,字段3</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">p.date,</span><br><span class="line">pm.name payment_method,</span><br><span class="line"><span class="built_in">SUM</span>(amount) total_payments</span><br><span class="line"><span class="keyword">FROM</span> payments p, payment_methods pm</span><br><span class="line"><span class="keyword">WHERE</span> p.payment_method <span class="operator">=</span> pm.payment_method_id</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> <span class="type">date</span>, name;</span><br></pre></td></tr></table></figure><ol start="2"><li>通过HAVING子句过滤分组后的数据<br>格式：select 聚合函数(字段1)，字段2 from 表名 where 条件 group by 字段2,字段3 having 过滤条件</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">c.customer_id,</span><br><span class="line">    c.first_name,</span><br><span class="line">    c.last_name,</span><br><span class="line">    <span class="built_in">SUM</span>(oi.quantity <span class="operator">*</span> oi.unit_price) <span class="keyword">AS</span> total_sales</span><br><span class="line"><span class="keyword">FROM</span> customers c</span><br><span class="line"><span class="keyword">JOIN</span> orders o <span class="keyword">USING</span>(customer_id)</span><br><span class="line"><span class="keyword">JOIN</span> order_items oi <span class="keyword">USING</span>(order_id)</span><br><span class="line"><span class="keyword">WHERE</span> state <span class="operator">=</span> <span class="string">&#x27;VA&#x27;</span></span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> </span><br><span class="line">c.customer_id,</span><br><span class="line">    c.first_name,</span><br><span class="line">    c.last_name</span><br><span class="line"><span class="keyword">HAVING</span> total_sales<span class="operator">&gt;</span><span class="number">100</span>;</span><br></pre></td></tr></table></figure><h2 id="rollup-运算符">ROLLUP 运算符</h2><p>用于计算总和，但只能用于聚合值的列，且使用时，GROUP BY 后的字段不能用别名<br><strong>注：ROLLUP只适用于Mysql</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">name payment_method,</span><br><span class="line">    <span class="built_in">SUM</span>(p.amount) total</span><br><span class="line"><span class="keyword">FROM</span> payments p</span><br><span class="line"><span class="keyword">JOIN</span> payment_methods pm</span><br><span class="line"><span class="keyword">ON</span> p.payment_method <span class="operator">=</span> pm.payment_method_id</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> name <span class="keyword">WITH</span> <span class="keyword">ROLLUP</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DataBase 视图</title>
      <link href="/posts/2160201343/"/>
      <url>/posts/2160201343/</url>
      
        <content type="html"><![CDATA[<p>数据库中的视图是一个虚拟表，同真实的表一样，视图包含一系列带有名称的行和列数据，行和列数据来自定义视图查询所引用的表，并且在引用视图时动态生成。但视图并不提供数据</p><h2 id="创建视图">创建视图</h2><p>格式：CREATE VIEW 【视图名】 AS  + 查询语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> clients_balance <span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">i.client_id,</span><br><span class="line">    name,</span><br><span class="line">    <span class="built_in">SUM</span>(invoice_total<span class="operator">-</span>payment_total) balance</span><br><span class="line"><span class="keyword">FROM</span> invoices i</span><br><span class="line"><span class="keyword">JOIN</span> clients c <span class="keyword">USING</span>(client_id)</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> i.client_id,name</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> i.client_id;</span><br></pre></td></tr></table></figure><h2 id="删除视图">删除视图</h2><p>格式：DROP VIEW 【视图名】</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">VIEW</span> clients_balance</span><br></pre></td></tr></table></figure><h2 id="更改视图">更改视图</h2><p>格式：CREATE OR REPLACE VIEW 【视图名】 AS + 查询语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">OR</span> REPLACE <span class="keyword">VIEW</span> sales_by_clients <span class="keyword">AS</span>  <span class="comment">-- 创建或更新sales_by_clients视图</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">c.client_id,</span><br><span class="line">c.name,</span><br><span class="line"><span class="built_in">SUM</span>(invoice_total) total_sales</span><br><span class="line"><span class="keyword">FROM</span> clients c</span><br><span class="line"><span class="keyword">JOIN</span> invoices i <span class="keyword">USING</span>(client_id)</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> client_id, name</span><br></pre></td></tr></table></figure><h2 id="可更新视图">可更新视图</h2><p>可以使用INSERT、UPDATE、DELETE语句的视图<br><strong>成立条件：没有使用DISTINCT，聚合函数，GROUP BY子句/HAVING子句，UNION的视图</strong><br>示例：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">OR</span> REPLACE <span class="keyword">VIEW</span> invoices_with_balance <span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">invoice_id,</span><br><span class="line">number,</span><br><span class="line">client_id,</span><br><span class="line">invoice_total,</span><br><span class="line">payment_total,</span><br><span class="line">invoice_total <span class="operator">-</span> payment_total <span class="keyword">AS</span> balance,</span><br><span class="line">invoice_date,</span><br><span class="line">due_date,</span><br><span class="line">payment_date</span><br><span class="line"><span class="keyword">FROM</span> invoices</span><br><span class="line"><span class="keyword">WHERE</span> (invoice_total <span class="operator">-</span> payment_total) <span class="operator">&gt;</span> <span class="number">0</span></span><br></pre></td></tr></table></figure><h2 id="with-check-option子句">WITH CHECK OPTION子句</h2><p>添加在创建视图语句的最后，在使用UPDATE语句或DELETE语句更新视图时，<strong>假如该行为会使视图中的某行消失，系统会返回错误提示</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">OR</span> REPLACE <span class="keyword">VIEW</span> invoices_with_balance <span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">invoice_id,</span><br><span class="line">number,</span><br><span class="line">client_id,</span><br><span class="line">invoice_total,</span><br><span class="line">payment_total,</span><br><span class="line">invoice_total <span class="operator">-</span> payment_total <span class="keyword">AS</span> balance,</span><br><span class="line">invoice_date,</span><br><span class="line">due_date,</span><br><span class="line">payment_date</span><br><span class="line"><span class="keyword">FROM</span> invoices</span><br><span class="line"><span class="keyword">WHERE</span> (invoice_total <span class="operator">-</span> payment_total) <span class="operator">&gt;</span> <span class="number">0</span></span><br><span class="line"><span class="keyword">WITH</span> <span class="keyword">CHECK</span> OPTION；</span><br><span class="line"></span><br><span class="line"><span class="keyword">UPDATE</span> invoices_with_balance</span><br><span class="line"><span class="keyword">SET</span> payment_total <span class="operator">=</span> invoice_total</span><br><span class="line"><span class="keyword">WHERE</span> invoice_id <span class="operator">=</span> <span class="number">1</span></span><br><span class="line"><span class="comment">-- 查询结果：#1369 - CHECK OPTION failed &#x27;sql_invoicing.invoices_with_balance&#x27;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DataBase 连接</title>
      <link href="/posts/4201200877/"/>
      <url>/posts/4201200877/</url>
      
        <content type="html"><![CDATA[<h1 id="内连接-inner-join">内连接 —— INNER JOIN</h1><ol><li>用于连接两个表的数据，通过<strong>ON关键字+条件语句</strong>来过滤数据</li></ol><ul><li>内连接不加关联条件的结果就是笛卡尔积</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> order_id,o.product_id,quantity,o.unit_price</span><br><span class="line"><span class="keyword">FROM</span> order_items o</span><br><span class="line">（<span class="keyword">INNER</span>） <span class="keyword">JOIN</span> products p <span class="comment">--实际INNER可写可不写，结果一致</span></span><br><span class="line"> <span class="keyword">ON</span> o.product_id <span class="operator">=</span> p.product_id</span><br></pre></td></tr></table></figure><h2 id="跨表连接">跨表连接</h2><ol><li>用于连接不同数据库的多张表的数据，通过在表名前加上相应的数据库前缀来实现</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">USE sql_store;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> order_items oi</span><br><span class="line"><span class="keyword">JOIN</span> sql_inventory.products p</span><br><span class="line"><span class="keyword">ON</span> oi.product_id <span class="operator">=</span> p.product_id;</span><br></pre></td></tr></table></figure><h2 id="自连接">自连接</h2><ol><li>通过给同一张表取两个别名来实现自连接</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">e.employee_id,</span><br><span class="line">    e.first_name,</span><br><span class="line">    m.first_name</span><br><span class="line"><span class="keyword">FROM</span> employees e</span><br><span class="line"><span class="keyword">JOIN</span> employees m</span><br><span class="line"><span class="keyword">ON</span> e.reports_to <span class="operator">=</span> m.employee_id;</span><br></pre></td></tr></table></figure><h2 id="多表连接">多表连接</h2><ol><li>通过多个JOIN语句来实现多表连接</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">p.payment_id,</span><br><span class="line">    c.name <span class="keyword">AS</span> name, </span><br><span class="line">    p.invoice_id,</span><br><span class="line">    p.date,</span><br><span class="line">    p.amount,</span><br><span class="line">    pm.name <span class="keyword">AS</span> payment_method</span><br><span class="line"><span class="keyword">FROM</span> payments p</span><br><span class="line"><span class="keyword">JOIN</span> payment_methods pm</span><br><span class="line"><span class="keyword">ON</span> p.payment_method <span class="operator">=</span> pm.payment_method_id</span><br><span class="line"><span class="keyword">JOIN</span> clients c</span><br><span class="line"><span class="keyword">ON</span> p.client_id <span class="operator">=</span> c.client_id;</span><br></pre></td></tr></table></figure><h2 id="复合连接">复合连接</h2><ol><li>当表的记录是通过多列作为复合主键来作为唯一标识时，需要通过复合条件来实现连接</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> order_items oi</span><br><span class="line"><span class="keyword">JOIN</span> order_item_notes oin</span><br><span class="line"><span class="keyword">ON</span> oi.order_id <span class="operator">=</span> oin.order_id</span><br><span class="line">    <span class="keyword">AND</span> oi.product_id <span class="operator">=</span> oin.product_id;</span><br></pre></td></tr></table></figure><h2 id="隐式连接">隐式连接</h2><ol><li>除了使用JOIN语句，还可以使用WHERE子句来实现连接</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> orders o, customers c</span><br><span class="line"><span class="keyword">WHERE</span> o.customer_id <span class="operator">=</span> c.customer_id; <span class="comment">-- 注意：不写WHERE子句会出笛卡尔积的情况</span></span><br></pre></td></tr></table></figure><h1 id="外连接-outer-join">外连接 —— OUTER JOIN</h1><p>悬浮元组：内连接时不满足条件而被舍弃的元组<br>左外连接：A<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⋊</mo></mrow><annotation encoding="application/x-tex">\rtimes</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66334em;vertical-align:-0.08167em;"></span><span class="mord amsrm">⋊</span></span></span></span>B，假设有表A、B，通过左外连接(LEFT OUTER JOIN)会保留表A的悬浮元组<br>右外连接：A<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⋉</mo></mrow><annotation encoding="application/x-tex">\ltimes</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66334em;vertical-align:-0.08167em;"></span><span class="mord amsrm">⋉</span></span></span></span>B，假设有表A、B，通过右外连接(RIGHT OUTER JOIN)会保留表B的悬浮元组</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">p.product_id,</span><br><span class="line">    p.name,</span><br><span class="line">    oi.quantity</span><br><span class="line"><span class="keyword">FROM</span> products p</span><br><span class="line"><span class="keyword">LEFT</span> (<span class="keyword">OUTER</span>) <span class="keyword">JOIN</span> order_items oi <span class="comment">--OUTER与INNER一样可写可不写</span></span><br><span class="line"><span class="keyword">ON</span> p.product_id <span class="operator">=</span> oi.product_id;</span><br></pre></td></tr></table></figure><h2 id="多表外连接">多表外连接</h2><p>根据实际需要查询的情况，来使用相应的外连接</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">USE sql_store;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">o.order_date,</span><br><span class="line">    o.order_id,</span><br><span class="line">    c.first_name,</span><br><span class="line">    sh.name <span class="keyword">AS</span> shipper,  </span><br><span class="line">    os.name <span class="keyword">AS</span> status</span><br><span class="line"><span class="keyword">FROM</span> orders o</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> shippers sh  </span><br><span class="line"><span class="comment">-- 因为orders表里部分订单没有发货人信息，如果不使用外连接，我们无法得到所有订单的信息</span></span><br><span class="line"><span class="keyword">ON</span> sh.shipper_id <span class="operator">=</span> o.shipper_id</span><br><span class="line"><span class="keyword">JOIN</span> order_statuses os</span><br><span class="line"><span class="keyword">ON</span> os.order_status_id <span class="operator">=</span> o.status</span><br><span class="line"><span class="keyword">JOIN</span> customers c</span><br><span class="line"><span class="keyword">ON</span> c.customer_id <span class="operator">=</span> o.customer_id;</span><br></pre></td></tr></table></figure><h2 id="自外连接">自外连接</h2><p>在数据库sql_hr中，employees表中有一条记录的report_to列为空值，当我们使用内连接时，就无法查询到该条记录的信息，但实际查询是要显示所有员工的信息，那这时候就需要使用外连接</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">USE sql_hr;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">e.employee_id,</span><br><span class="line">    e.first_name,</span><br><span class="line">    m.first_name <span class="keyword">AS</span> manager</span><br><span class="line"><span class="keyword">FROM</span> employees e</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> employees m</span><br><span class="line"><span class="keyword">ON</span> e.reports_to <span class="operator">=</span> m.employee_id;</span><br></pre></td></tr></table></figure><h2 id="using子句">USING子句</h2><p>用于JOIN语句过滤数据的另一个关键字，只能用于<strong>两个表中列名称相同的列</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">p.date,</span><br><span class="line">    c.name client,</span><br><span class="line">    p.amount,</span><br><span class="line">    pm.name payment_method</span><br><span class="line"><span class="keyword">FROM</span> payments p</span><br><span class="line"><span class="keyword">JOIN</span> clients c</span><br><span class="line"><span class="keyword">USING</span>(client_id)</span><br><span class="line"><span class="keyword">JOIN</span> payment_methods pm</span><br><span class="line"><span class="keyword">ON</span> p.payment_method <span class="operator">=</span> pm.payment_method_id</span><br><span class="line"><span class="comment">--因为p表中的payment_method和pm表中的payment_method_id名称不同，故不能使用USING</span></span><br></pre></td></tr></table></figure><h2 id="自然连接">自然连接</h2><p>自然连接是一种特殊的等值连接，他要求两个关系表中进行连接的必须是相同的属性列（名字相同），无须添加连接条件，并且在结果中消除重复的属性列。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">o.order_id,</span><br><span class="line">    c.first_name</span><br><span class="line"><span class="keyword">FROM</span> orders o </span><br><span class="line"><span class="keyword">NATURAL</span> <span class="keyword">JOIN</span> customers c;</span><br></pre></td></tr></table></figure><h2 id="交叉连接">交叉连接</h2><p>交叉连接（CROSS JOIN）一般用来返回连接表的笛卡尔积</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--显式语法</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">c.first_name customer,</span><br><span class="line">    p.name product</span><br><span class="line"><span class="keyword">FROM</span> customers c</span><br><span class="line"><span class="keyword">CROSS</span> <span class="keyword">JOIN</span> products p</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> c.first_name;</span><br><span class="line"></span><br><span class="line"><span class="comment">--隐式语法</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">c.first_name customer,</span><br><span class="line">    p.name product</span><br><span class="line"><span class="keyword">FROM</span> customers c,products p</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> c.first_name;</span><br></pre></td></tr></table></figure><h2 id="联合">联合</h2><p>UNION，将多条select语句的结果，在字段数相同(即Select语句返回的结果列数相同)的情况下，在记录的层次上进行拼接。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">USE sql_store;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">customer_id,</span><br><span class="line">    first_name,</span><br><span class="line">    points,</span><br><span class="line">    &quot;Bronze&quot; <span class="keyword">AS</span> types</span><br><span class="line"><span class="keyword">FROM</span> customers</span><br><span class="line"><span class="keyword">WHERE</span> points <span class="operator">&lt;</span> <span class="number">2000</span></span><br><span class="line"><span class="keyword">UNION</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">customer_id,</span><br><span class="line">    first_name,</span><br><span class="line">    points,</span><br><span class="line">    &quot;Silver&quot; <span class="keyword">AS</span> types</span><br><span class="line"><span class="keyword">FROM</span> customers</span><br><span class="line"><span class="keyword">WHERE</span> points <span class="keyword">between</span> <span class="number">2000</span> <span class="keyword">and</span> <span class="number">3000</span></span><br><span class="line"><span class="keyword">UNION</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">customer_id,</span><br><span class="line">    first_name,</span><br><span class="line">    points,</span><br><span class="line">    &quot;Gold&quot; <span class="keyword">AS</span> types</span><br><span class="line"><span class="keyword">FROM</span> customers</span><br><span class="line"><span class="keyword">WHERE</span> points <span class="operator">&gt;</span> <span class="number">3000</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> first_name; </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>categories</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>tags</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
